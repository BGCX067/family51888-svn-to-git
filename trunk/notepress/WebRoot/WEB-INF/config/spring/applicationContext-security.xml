<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	
	<!--
		1.可配置多个intercept-url
		2.pattern: ant路径语法
		3.access:逗号分隔的角色队列，一般以"ROLE_"开头
		4.auto-config意思是自动配置，那么到底配置了什么呢?其实它配置了
		<http>
		<form-login />
		<http-basic />
		<logout />
		</http>
		这些项目。
		注意，在使用了auto-config后，我们依旧可以使用 form-login元素，它会覆盖默认的设置。
		5.
-->
	<http auto-config='true'>
		<intercept-url pattern="/**/*.js" filters="none"/>
		<intercept-url pattern="/**/*.css" filters="none"/>
		<intercept-url pattern="/**/*.jpg" filters="none"/>
		<intercept-url pattern="/**/*.png" filters="none"/>
		<intercept-url pattern="/**/*.gif" filters="none"/>
		<intercept-url pattern="/**/*.ico" filters="none"/>
		<intercept-url pattern="/**/*.swf" filters="none"/>
		<intercept-url pattern="/**/*.html" filters="none"/>
		<intercept-url pattern="/signup*" filters="none"/>
		<remember-me key="myAppKey"/>
		<form-login  login-page="/signup" default-target-url='/loginSelect' always-use-default-target="true" authentication-failure-url="/loginSelect?error=1" login-processing-url="/login"/>
		<logout logout-url="/logout" logout-success-url="/"/>
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR"
			ref="filterSecurityInterceptor" />
	</http>
	
	<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager"
			ref="authenticationManager" />
		<beans:property name="accessDecisionManager"
			ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource"
			ref="securityMetadataSource" />
	</beans:bean>
	
	<authentication-manager  alias="authenticationManager">
		<authentication-provider user-service-ref='userDetailsService'/>
	</authentication-manager>

	<beans:bean id="userDetailsService"
		class="org.notepress.security.authentication.UserDetailsServiceImpl">
		<beans:property name="sessionFactory" ref="sessionFactory"/>
	</beans:bean>

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
  

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource"
		class="org.notepress.security.authentication.SecurityMetadataSourceImpl" />
</beans:beans>
