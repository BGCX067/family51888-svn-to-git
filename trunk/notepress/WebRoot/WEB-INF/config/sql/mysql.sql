-- phpMyAdmin SQL Dump
-- version 3.1.5
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2010 年 11 月 09 日 10:52
-- 服务器版本: 5.1.33
-- PHP 版本: 5.2.8

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";

--
-- 数据库: 'notepress'
--

-- --------------------------------------------------------

--
-- 表的结构 'account'
--
-- 创建时间: 2010 年 10 月 30 日 21:13
--

DROP TABLE IF EXISTS account;
CREATE TABLE IF NOT EXISTS account (
  id varchar(32) NOT NULL,
  account_name varchar(60) DEFAULT NULL COMMENT '账号名称',
  account_alias varchar(60) DEFAULT NULL,
  `password` varchar(60) DEFAULT NULL COMMENT '密码',
  email varchar(60) DEFAULT NULL,
  account_status int(11) DEFAULT NULL COMMENT '0，未激活\n1，正常\n2，锁定\n3，注销',
  create_ip varchar(30) DEFAULT NULL COMMENT '创建IP',
  create_time bigint(13) DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='账号表';

--
-- 导出表中的数据 'account'
--

INSERT INTO account (id, account_name, account_alias, password, email, account_status, create_ip, create_time) VALUES
('000000002c2bc5f3012c2bc6cc230001', 'member', '测试会员', 'member', 'member', 1, '127.0.0.1', 1289224637466),
('1', 'admin', '管理员', 'admin', 'admin@gmail.com', 1, 'localhost', 1277830829037);

-- --------------------------------------------------------

--
-- 表的结构 'account_role'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS account_role;
CREATE TABLE IF NOT EXISTS account_role (
  id varchar(32) NOT NULL COMMENT '主键',
  account_id varchar(32) DEFAULT NULL COMMENT '账号主键',
  role_id varchar(32) DEFAULT NULL COMMENT '角色主键',
  PRIMARY KEY (id),
  KEY fk_user_role1 (account_id),
  KEY fk_user_role2 (role_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='账号角色表';

--
-- 导出表中的数据 'account_role'
--

INSERT INTO account_role (id, account_id, role_id) VALUES
('000000002c2bc5f3012c2bc6cc280002', '000000002c2bc5f3012c2bc6cc230001', '5'),
('1', '1', '1');

-- --------------------------------------------------------

--
-- 表的结构 'category'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS category;
CREATE TABLE IF NOT EXISTS category (
  id varchar(32) NOT NULL COMMENT '主键',
  category_parent_id varchar(32) DEFAULT NULL COMMENT '上级分类主键',
  category_name varchar(60) DEFAULT NULL COMMENT '分类名',
  category_type int(11) DEFAULT NULL COMMENT '分类类型\n1，文章\n2，问答\n3，百科\n4，论坛\n5，博客\n6、贴吧\n7，微博',
  category_sort int(11) DEFAULT NULL COMMENT '排序码',
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='分类表';

--
-- 导出表中的数据 'category'
--

INSERT INTO category (id, category_parent_id, category_name, category_type, category_sort) VALUES
('0', NULL, '根栏目', NULL, 0),
('1', '0', '文章', 1, 1),
('2', '0', '问答', 2, 2),
('3', '0', '百科', 3, 3),
('4', '0', '论坛', 4, 4),
('402881e42ad8181a012ad81904d40001', '1', '模板', 1, 75),
('402881e42adbebb3012adbf0ebea0001', '1', 'Java核心', 1, 3),
('402881e42adbebb3012adbf140830002', '1', 'Java IDE', 1, 25),
('402881e42adbebb3012adbf76ac20004', '1', 'PDF', 1, 45),
('402881e42adc0435012adc05f2e90001', '1', '文件上传', 1, 35),
('402881e42adc0435012adc0704a70002', '1', 'MVC', 1, 5),
('402881e42adc0435012adc076f680003', '1', 'XML', 1, 50),
('402881e42adc0435012adc07c5480004', '1', '搜索引擎', 1, 100),
('402881e42adc0435012adc091d850005', '1', '缓存', 1, 70),
('402881e42adc0435012adc0a04b80006', '1', '报表', 1, 30),
('402881e42adc0dd6012adc1b832d0001', '1', 'AJAX', 1, 20),
('402881e42adc0dd6012adc1c663a0002', '1', 'Web打印', 1, 60),
('402881e42adc0dd6012adc1ca8830003', '1', '图形图像', 1, 40),
('402881e42adc0dd6012adc1d074c0004', '1', '连接池', 1, 65),
('402881e42adc0dd6012adc1d87a80005', '1', '日志', 1, 90),
('402881e42adc0dd6012adc1e0c290007', '1', 'ORM', 1, 10),
('402881e42adc0dd6012adc1e34720008', '1', '工作流', 1, 105),
('402881e42adc0dd6012adc1e98d90009', '1', 'Html编辑器', 1, 55),
('402881e42adc0dd6012adc1f29bf000a', '1', '建模', 1, 85),
('402881e42adc0dd6012adc1fbdd1000b', '1', '版本控制', 1, 95),
('402881e42adc0dd6012adc201354000c', '1', '数据库', 1, 80),
('402881e42adc0dd6012adc24356f000d', '1', 'Java EE框架', 1, 15),
('5', '0', '博客', 5, 5),
('6', '0', '贴吧', 6, 6),
('7', '0', '微博', 7, 7);

-- --------------------------------------------------------

--
-- 表的结构 'file'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS file;
CREATE TABLE IF NOT EXISTS `file` (
  id varchar(32) NOT NULL COMMENT '主键',
  folder_id varchar(32) DEFAULT NULL,
  title varchar(150) DEFAULT NULL COMMENT '标题',
  vice_title varchar(150) DEFAULT NULL COMMENT '副标题',
  thumbnail varchar(200) DEFAULT NULL COMMENT '缩略图',
  content longtext COMMENT '内容',
  excerpt text COMMENT '摘要',
  release_date bigint(13) DEFAULT NULL COMMENT '发布时间',
  version varchar(45) DEFAULT NULL COMMENT '版本。默认为1.0。当文件夹类型为文件时，此值用于文件的版本；',
  author varchar(45) DEFAULT NULL COMMENT '作者',
  translator varchar(45) DEFAULT NULL COMMENT '译者',
  `source` varchar(45) DEFAULT NULL COMMENT '来源',
  source_url varchar(200) DEFAULT NULL COMMENT '源地址',
  url varchar(500) DEFAULT NULL COMMENT '下载地址',
  size varchar(20) DEFAULT NULL COMMENT '大小',
  os varchar(45) DEFAULT NULL COMMENT '操作系统',
  license varchar(45) DEFAULT NULL COMMENT '授权',
  `language` varchar(45) DEFAULT NULL COMMENT '语言',
  create_time bigint(13) DEFAULT NULL COMMENT '创建时间',
  update_time bigint(13) DEFAULT NULL COMMENT '修改时间',
  creater varchar(60) DEFAULT NULL COMMENT '创建者',
  PRIMARY KEY (id),
  KEY fk_file (folder_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件表';

--
-- 导出表中的数据 'file'
--

INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b0bf62e012b0c0af8d00003', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 3.3.2.GA 在线参考手册', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.3.2.GA 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、日文、韩文、法语、西班牙语、葡萄牙语的版本，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/zh-CN/html/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 中文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/zh-CN/html_single/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 中文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/en-US/html/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 英文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/en-US/html_single/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 英文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/ja-JP/html/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 日文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/ja-JP/html_single/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 日文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/ko-KR/html/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 韩文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/ko-KR/html_single/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 韩文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/fr-FR/html/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 法语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/fr-FR/html_single/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 法语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/es-ES/html/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 西班牙语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/es-ES/html_single/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 西班牙语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/pt-BR/html/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 葡萄牙语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-manual-ml/pt-BR/html_single/" target="_blank">Hibernate 3.3.2.GA 在线参考手册 葡萄牙语版本 单页</a></p>\n', 'Hibernate 3.3.2.GA 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、日文、韩文、法语、西班牙语、葡萄牙语的版本，是开发人员的必备文档。', 1284307200000, '3.3.2.GA', '道长A', '', 'jboss.org', 'http://docs.jboss.org/hibernate/core/3.3/reference/', '', '', '所有系统', 'LGPL', '中文', 1284397267152, 1284564082942, 'admin'),
('000000002b0bf62e012b0c1dafe4000d', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 3.3.2.GA 在线API文档', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 3.3.2.GA 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此版本是道长A用javadoc根据Hibernate的源码生成的，内容上与原始的api javadoc一致，仅在样式上有所区别（标准的风格），是开发人员必备文档。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.antlr</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-javadoc-en/" target="_blank">Hibernate 3.3.2.GA 在线API文档</a></p>', 'Hibernate 3.3.2.GA 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。\n此版本是道长A用javadoc根据Hibernate的源码生成的，内容上与原始的api javadoc一致，仅在样式上有所区别（标准的风格），是开发人员必备文档。', 1284393600000, '3.3.2.GA', '道长A', '', 'jboss.org', 'http://docs.jboss.org/hibernate/core/3.3/api/', '', '', '所有系统', 'LGPL', '英文', 1284398493668, 1284528261386, 'admin'),
('000000002b0c282d012b0e562a88000f', '000000002b0c282d012b0f725939001d', 'Hibernate 3.3.2.GA 在线Java源码', '在线查看Hibernate源代码', NULL, '<p>\n	Hibernate 3.3.2.GA 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.antlr</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.3.2.ga-src/" target="_blank">Hibernate 3.3.2.GA 在线Java源码</a></p>\n', 'Hibernate 3.3.2.GA 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。', 1284393600000, '3.3.2.GA', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '英文', 1284435749512, 1286873220623, 'admin'),
('000000002b0c282d012b0e651de00013', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.3.2.GA 下载', '最稳定的Hibernate 3.3.X 版本', NULL, '<p>\n	Hibernate 3.3.2.GA 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、日文、韩文、法语、西班牙语、葡萄牙语的版本），是开发人员的必备工具。</p>\n<p>\n	本版本的Changelog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 3.3.2.GA (2009.06.24)<br />\n		-------------------------------------------<br />\n		<br />\n		** Bug<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-1930] - QuerySyntaxException &quot;with-clause expressions did not reference from-clause element to which the with-clause was associated&quot;<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2146] - NullpointerException in DefaultDeleteEventListener.deleteTransientEntity<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2745] - NullPointerException when eager fetching joined many-to-many with native SQL query<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3046] - Merge fails on complicated data structure because of cycle references<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3216] - Incorrect parse result in ParameterParser<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3351] - Dynamic entity model and inheritance - exception when trying to persist<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3481] - JTATransactionFactory bug when Transaction cannot be found in JNDI<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3483] - org.hibernate.test.hql.ScrollableCollectionFetchingTest#testScrollingJoinFetchesForward unsupported by DB2<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3496] -&nbsp; DB2 hanging on JPALockTest and CMTTest<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3501] -&nbsp; ASTParserLoadingTest testing unsupported queries for DB2<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3506] - enabled filters should apply to HQL update/delete statements<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3508] - Sybase Dialect - Override supportsCascadeDelete to return &quot;false&quot;<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3519] - account for parameters in select clause of INSERT-SELECT for DB2<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3528] - FETCH JOIN query doesn&#39;t work in a StatelessSession<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3584] - Generate SQL when Dynamic Update is true is including version field even when marked as updateable=false<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3621] - Assertion failure in MigrationTest<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3636] - Attempt to read invalid column when loading collection of subclasses mapped with table-per-subclass with discriminator<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3640] - Some standard SQL functions are not implemented in Sybase<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3652] - CompositeIdWithGeneratorTest needs a standard way to compare timestamps<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3662] - Merging read-only entities causes AssertionError(&quot;Merged entity does not have status set to MANAGED...&quot;)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3668] - Sybase does not support implicit conversion from character types to numeric types causes failing unit tests<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3670] - Invalid test for str() for SQL Server and Sybase<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3672] - Sybase - second(), minute(), hour(), and extract() cause GenericJDBCException<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3675] - Limitations on Sybase ResultSet implementation cause unit test failures<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3679] - Sybase conversion of Java byte to tinyint fails with 8-bit values causing unit test failures<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3680] - Sybase - composite primary key in unit test exceeds maximum for index causing failure<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3693] - Implicit Polymorphic query + pagination returning zero result<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3696] - Sybase - unit tests fail when numeric values overflow in precision or scale on insert<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3698] - Problem with HQL parameter bindings as indexed collection selectors<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3699] - Problem with HQL parameter bindings for parameters in WITH join clause<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3701] - SQL function &quot;trim&quot; is not available in Sybase Dialect<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3749] - Only reuse FromElements originating from from-clause if their aliases match<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3810] - Transient entities can be inserted twice on merge<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3874] - Packaging type in hibernate-maven-plugin/pom.xml makes maven build fail<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3880] - org.hibernate.id.enhanced.TableStructure missing &quot;as&quot; keyword in select statment column renames; required for PostgreSQL<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3912] - Change for HHH-3159 causes InstantiationException<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3918] - Use standard JDK exception nesting<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3980] - Fix for HHH-2980 introduced bug that allows the same bag collection role to be fetched multiple times<br />\n		<br />\n		** Improvement<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-1234] - allow tuplizers the opportunity to influence getSubclassEntityPersister() processing<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2592] - force hibernate to generate use offset qeury when offset is zero<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2980] - Error &quot;org.hibernate.HibernateException: cannot simultaneously fetch multiple bags&quot; not specific enough<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3159] - Oracle 11g - desupport of oracle.jdbc.driver<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3275] - Allow pluggable tuplizers for composite elements<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3276] - review proposed new doc styling<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3357] - improve performance of session.clear()<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3383] - QueryKey is storing references to entities instead of identifiers<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3515] - Introduce EntityNameResolver interface<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3517] - Allow definition of the default tuplizer class to use<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3518] - Remove Suite classes from testsuite module<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3525] - Clean up reflection code trying to determine JDK 1.4 capabilities<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3532] - schema update task should look for foreign key signature<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3712] - Reorganize the Sybase dialect class hierarchy, add SybaseASE15Dialect, and mark SybaseDialect as deprecated<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3737] - Support Hibernate 3.3 branch in Envers until 3.4.0GA is out<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3750] - Allow dialects to handle difference in how Query.setFirstResult() should be interpreted<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3751] - Enable Antlr tree parser tracing for HqlSqlWalker and SqlGenerator (tree parsers)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3753] - Upgrade to SLF4J version 1.5.8<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3832] - Upgrade to cglib-2.2.jar<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3886] - Update database credentials for QA Lab<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3944] - Document known database portability strategies<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3978] - Expose Hibernate version via non-compile-time constant expression<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3982] - Apply build version to org.hibernate.Version<br />\n		<br />\n		** New Feature<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3343] - Postgres Plus Dialect<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3781] - Echo version information to the console in main()<br />\n		<br />\n		** Patch<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-530] - Allow application of filters on subqueries<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2933] - allow custom resolution of Dialect (Tomoto Shimizu Washio)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3401] - H2 Database Dialect Fixes<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3450] - Include SingletonEhCacheProvider as an additional caching provider (Greg Luck)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3639] - Sybase keywords - rename columns<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3649] - DB2Dialect inherits supportsPooledSequences() as false, but it does support<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3650] - TableGenerator doesn&#39;t marks the &quot;primary key&quot; as not null, causing errors in some RDBMS&#39;s which expects the PK to be not-null<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3742] - Documentation corrections<br />\n		<br />\n		** Task<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3214] - Update unit tests and config files to use non-depracated Oracle dialects<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3760] - Document EntityNameResolver<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3761] - Document DialectResolver<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3953] - Update tutorial chapter<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3979] - Upgrade to javassist 3.9.0<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3981] - Upgrade to jDocBook 2.2.0<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3986] - Upgrade to JBossCache 3.1.0 (3.3 branch)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3987] - prep 3.3.2 release</p>\n</blockquote>', 'Hibernate 3.3.2.GA 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、日文、韩文、法语、西班牙语、葡萄牙语的版本），是开发人员的必备工具。', 1284393600000, '3.3.2.GA', '道长A', '', 'jboss.org', 'http://www.hibernate.org/downloads.html', '官方下载-http://nchc.dl.sourceforge.net/project/hibernate/hibernate3/3.3.2.GA/hibernate-distribution-3.3.2.GA-dist.zip\n本站下载-http://story.ajava.org/hibernate/3.3.2.ga.zip', '44.9 MB', '所有系统', 'LGPL', '英文', 1284436729312, 1284482472831, 'admin'),
('000000002b0c282d012b0f7806bb001e', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.3.2.GA API文档下载', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 3.3.2.GA 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole 、James Cobb (Graphic Design) 、 Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此版本是道长A用javadoc根据Hibernate的源码生成的，内容上与官方的api javadoc一致，仅在样式上有所区别（标准的风格），是开发人员必备文档。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.antlr</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>\n<p>\n	&nbsp;</p>', 'Hibernate 3.3.2.GA 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。此版本是道长A用javadoc根据Hibernate的源码生成的，内容上与官方的api javadoc一致，仅在样式上有所区别（标准的风格），是开发人员必备文档。', 1284393600000, '3.3.2.GA', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.3.2.ga-javadoc-en-html.zip', '4.89MB', 'Windows', 'LGPL', '英文', 1284454745787, 1284545854156, 'admin'),
('000000002b0fcd3a012b10ee2ab20009', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 3.2.7.GA 在线API文档', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 3.2.7.GA 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.antlr</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jmx</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.2.7.ga-javadoc-en/" target="_blank">Hibernate 3.2.7.GA 在线API文档</a></p>', ' Hibernate 3.2.7.GA 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。', 1284393600000, '3.2.7.GA', '道长A', '', 'jboss.org', '', '', '', 'Windows', 'LGPL', '英文', 1284479265458, 1284545822087, 'admin'),
('000000002b10f313012b10f832e30001', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 3.2.7.GA 在线参考手册', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	&nbsp;Hibernate 3.2.7.GA 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、法语的版本，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.2.7.ga-manual-ml/zh/html/" target="_blank">Hibernate 3.2.7.GA 在线参考手册 中文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.2.7.ga-manual-ml/en/html/" target="_blank">Hibernate 3.2.7.GA 在线参考手册 英文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.2.7.ga-manual-ml/en/html_single/" target="_blank">Hibernate 3.2.7.GA 在线参考手册 英文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.2.7.ga-manual-ml/fr/html/" target="_blank">Hibernate 3.2.7.GA 在线参考手册 法语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.2.7.ga-manual-ml/fr/html_single/" target="_blank">Hibernate 3.2.7.GA 在线参考手册 法语版本 单页</a></p>', ' Hibernate 3.2.7.GA 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、法语的版本，是开发人员的必备文档。', 1284393600000, '3.2.7.GA', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '中文', 1284479922916, 1284564105621, 'admin'),
('000000002b1101b3012b110d66740007', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.2.7.GA 下载', '最稳定的Hibernate 3.2.X 版本', NULL, '<p>\n	Hibernate 3.2.7.GA 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、法语版本），是开发人员的必备工具。</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	本版本的Changelog如下：</div>\n<p>\n	本版本的Changelog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 3.2.7 (2009.06.03)<br />\n		-------------------------------------------<br />\n		<br />\n		** Bug<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-1930] - QuerySyntaxException &quot;with-clause expressions did not reference from-clause element to which the with-clause was associated&quot;<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2021] - org.hibernate.cache.QueryKey has a fragile equals() method<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2146] - NullpointerException in DefaultDeleteEventListener.deleteTransientEntity<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2604] - Isolator.JdbcDelegate masks the exception if it isn&#39;t possible to open a connection.<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2694] - create-drop with c3p0 causes SQLException<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2745] - NullPointerException when eager fetching joined many-to-many with native SQL query<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3006] - ConcurrentModificationException in AbstractBatcher results in infinite loop<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3046] - Merge fails on complicated data structure because of cycle references<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3111] - WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter.getStatus() implemented incorrect<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3216] - Incorrect parse result in ParameterParser<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3229] - Merge can fail when there is a transient entity reachable by multiple paths and at least one path does not cascade on merge<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3231] - org.hibernate.id.enhanced.TableGenerator throws &quot;IllegalArgumentException: alias not found: tbl&quot; under Oracle<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3282] - DB2Dialect should report supportsLobValueChangePropogation() == false<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3309] - Serialize/Deserialize problem in AbstractLazyInitializer with entitymode.MAP.<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3378] - DB2CustomSQLTest fails, need &quot;RESULT SETS 1&quot; in proc definitions<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3409] - ResultTransformers need smarter equals() and hashCode() impls<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3481] - JTATransactionFactory bug when Transaction cannot be found in JNDI<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3483] - org.hibernate.test.hql.ScrollableCollectionFetchingTest#testScrollingJoinFetchesForward unsupported by DB2<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3496] -&nbsp; DB2 hanging on JPALockTest and CMTTest<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3501] -&nbsp; ASTParserLoadingTest testing unsupported queries for DB2<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3506] - enabled filters should apply to HQL update/delete statements<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3508] - Sybase Dialect - Override supportsCascadeDelete to return &quot;false&quot;<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3519] - account for parameters in select clause of INSERT-SELECT for DB2<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3584] - Generate SQL when Dynamic Update is true is including version field even when marked as updateable=false<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3621] - Assertion failure in MigrationTest<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3636] - Attempt to read invalid column when loading collection of subclasses mapped with table-per-subclass with discriminator<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3640] - Some standard SQL functions are not implemented in Sybase<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3662] - Merging read-only entities causes AssertionError(&quot;Merged entity does not have status set to MANAGED...&quot;)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3668] - Sybase does not support implicit conversion from character types to numeric types causes failing unit tests<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3670] - Invalid test for str() for SQL Server and Sybase<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3672] - Sybase - second(), minute(), hour(), and extract() cause GenericJDBCException<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3675] - Limitations on Sybase ResultSet implementation cause unit test failures<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3679] - Sybase conversion of Java byte to tinyint fails with 8-bit values causing unit test failures<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3680] - Sybase - composite primary key in unit test exceeds maximum for index causing failure<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3693] - Implicit Polymorphic query + pagination returning zero result<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3696] - Sybase - unit tests fail when numeric values overflow in precision or scale on insert<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3698] - Problem with HQL parameter bindings as indexed collection selectors<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3699] - Problem with HQL parameter bindings for parameters in WITH join clause<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3701] - SQL function &quot;trim&quot; is not available in Sybase Dialect<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3749] - Only reuse FromElements originating from from-clause if their aliases match<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3810] - Transient entities can be inserted twice on merge<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3912] - Change for HHH-3159 causes InstantiationException<br />\n		<br />\n		** Improvement<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-1234] - allow tuplizers the opportunity to influence getSubclassEntityPersister() processing<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-2686] - Include a primary key in the sequence table used by id.enhanced.TableGenerator<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3131] - Add a method to ActionQueue to tell whether there are currently entries in the executions collection<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3159] - Oracle 11g - desupport of oracle.jdbc.driver<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3249] - Make o.h.id.enhanced.TableGenerator more extension-friendly<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3275] - Allow pluggable tuplizers for composite elements<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3283] - protect BulkManipulationTest#testInsertWithGeneratedTimestampVersion where Dialect#supportsParametersInInsertSelect == false<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3357] - improve performance of session.clear()<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3358] - Enable JTATransactionFactory and JTATransaction factory to work without JNDI<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3383] - QueryKey is storing references to entities instead of identifiers<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3424] - concat() with param binding fails function on derby<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3454] - Allow enhanced.TableGenerator to segment itself per entity as default<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3456] - Make o.h.id.enhanced.SequenceStyleGenerator more extension-friendly<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3471] - Provide true-false type that maps to int values<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3515] - Introduce EntityNameResolver interface<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3517] - Allow definition of the default tuplizer class to use<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3518] - Remove Suite classes from testsuite module<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3532] - schema update task should look for foreign key signature<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3712] - Reorganize the Sybase dialect class hierarchy, add SybaseASE15Dialect, and mark SybaseDialect as deprecated<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3750] - Allow dialects to handle difference in how Query.setFirstResult() should be interpreted<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3751] - Enable Antlr tree parser tracing for HqlSqlWalker and SqlGenerator (tree parsers)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3886] - Update database credentials for QA Lab<br />\n		<br />\n		** New Feature<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3343] - Postgres Plus Dialect<br />\n		<br />\n		** Patch<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-530] - Allow application of filters on subqueries<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3294] - Version incorrectly incremented for unchanged persistent entity that is parent of a one to many relationship<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3401] - H2 Database Dialect Fixes<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3450] - Include SingletonEhCacheProvider as an additional caching provider (Greg Luck)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3650] - TableGenerator doesn&#39;t marks the &quot;primary key&quot; as not null, causing errors in some RDBMS&#39;s which expects the PK to be not-null<br />\n		<br />\n		** Task<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3214] - Update unit tests and config files to use non-depracated Oracle dialects<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3760] - Document EntityNameResolver</p>\n</blockquote>\n', 'Hibernate 3.2.7.GA 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、法语版本），是开发人员的必备工具。', 1284393600000, '3.2.7.GA', '道长A', '', 'jboss.org', '', '官方下载-http://jaist.dl.sourceforge.net/project/hibernate/hibernate3/3.2.7.ga/hibernate-3.2.7.ga.zip\n本站下载-http://story.ajava.org/hibernate/3.2.7.ga.zip', '25M', 'Windows', 'LGPL', '英文', 1284481312372, 1284545860443, 'admin'),
('000000002b1101b3012b111662120011', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.2.7.GA API文档下载', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 3.2.7.GA 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole 、James Cobb (Graphic Design) 、 Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.antlr</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jmx</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>\n', 'Hibernate 3.2.7.GA 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole 、James Cobb (Graphic Design) 、 Cheyenne Weaver (Graphic Design)等人编写。', 1284393600000, '3.2.7.GA', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.2.7.ga-javadoc-en-html.zip', '7M', 'Windows', 'LGPL', '英文', 1284481901074, 1284571037675, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b1101b3012b13ddca8f002d', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.3.2.GA 参考手册 PDF下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	&nbsp;Hibernate 3.3.2.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>', ' Hibernate 3.3.2.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。', 1284480000000, '3.3.2.GA', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.3.2.ga-manual-zh-pdf.zip', '1M', '所有系统', 'LGPL', '中文', 1284528523919, 1284546011762, 'admin'),
('000000002b1101b3012b13e0f6fa0033', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.3.2.GA 参考手册 HTML下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.3.2.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>', 'Hibernate 3.3.2.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。', 1284480000000, '3.3.2.GA', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.3.2.ga-manual-zh-html.zip', '1M', '所有系统', 'LGPL', '中文', 1284528731898, 1284546039279, 'admin'),
('000000002b1101b3012b14097fc00047', '000000002b0c282d012b0f725939001d', 'Hibernate 3.2.7.GA 在线Java源码', '在线查看Hibernate源代码', NULL, '<p>\n	Hibernate 3.2.7.GA 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.antlr</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jmx</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.2.7.ga-src/" target="_blank">Hibernate 3.2.7.GA 在线Java源码</a></p>\n', 'Hibernate 3.2.7.GA 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。', 1284480000000, '3.2.7.GA', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '英文', 1284531388352, 1286873205204, 'admin'),
('000000002b1101b3012b141246ef004d', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.2.7.GA 参考手册 PDF下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	&nbsp;Hibernate 3.2.7.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>', ' Hibernate 3.2.7.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。\n', 1284480000000, '3.2.7.GA', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.2.7.ga-manual-zh-pdf.zip', '991K', '所有系统', 'LGPL', '中文', 1284531963631, 1284546104169, 'admin'),
('000000002b1101b3012b1414064c0051', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.2.7.GA 参考手册 HTML下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.2.7.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>', 'Hibernate 3.2.7.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。', 1284480000000, '3.2.7.GA', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.2.7.ga-manual-zh-html.zip', '324K', 'Windows', 'LGPL', '中文', 1284532078156, 1284546121048, 'admin'),
('000000002b1101b3012b141557110055', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.2.7.GA 参考手册 CHM下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.2.7.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为CHM，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>', 'Hibernate 3.2.7.GA 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为CHM，是开发人员的必备文档。', 1284480000000, '3.2.7.GA', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.2.7.ga-manual-zh-chm.zip', '278K', '所有系统', 'LGPL', '中文', 1284532164370, 1284545906749, 'admin'),
('000000002b1101b3012b14bd9d520059', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 3.5.5.Final 在线API文档', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 3.5.5.Final 官方api的javadoc，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.annotations</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cache.infinispan</li>\n		<li>\n			org.hibernate.cache.infinispan.access</li>\n		<li>\n			org.hibernate.cache.infinispan.collection</li>\n		<li>\n			org.hibernate.cache.infinispan.entity</li>\n		<li>\n			org.hibernate.cache.infinispan.impl</li>\n		<li>\n			org.hibernate.cache.infinispan.query</li>\n		<li>\n			org.hibernate.cache.infinispan.timestamp</li>\n		<li>\n			org.hibernate.cache.infinispan.tm</li>\n		<li>\n			org.hibernate.cache.infinispan.util</li>\n		<li>\n			org.hibernate.cache.jbc</li>\n		<li>\n			org.hibernate.cache.jbc.access</li>\n		<li>\n			org.hibernate.cache.jbc.builder</li>\n		<li>\n			org.hibernate.cache.jbc.collection</li>\n		<li>\n			org.hibernate.cache.jbc.entity</li>\n		<li>\n			org.hibernate.cache.jbc.query</li>\n		<li>\n			org.hibernate.cache.jbc.timestamp</li>\n		<li>\n			org.hibernate.cache.jbc.util</li>\n		<li>\n			org.hibernate.cache.jbc2</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.cfg.annotations</li>\n		<li>\n			org.hibernate.cfg.annotations.reflection</li>\n		<li>\n			org.hibernate.cfg.beanvalidation</li>\n		<li>\n			org.hibernate.cfg.search</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.ejb</li>\n		<li>\n			org.hibernate.ejb.connection</li>\n		<li>\n			org.hibernate.ejb.criteria</li>\n		<li>\n			org.hibernate.ejb.criteria.expression</li>\n		<li>\n			org.hibernate.ejb.criteria.expression.function</li>\n		<li>\n			org.hibernate.ejb.criteria.path</li>\n		<li>\n			org.hibernate.ejb.criteria.predicate</li>\n		<li>\n			org.hibernate.ejb.event</li>\n		<li>\n			org.hibernate.ejb.instrument</li>\n		<li>\n			org.hibernate.ejb.metamodel</li>\n		<li>\n			org.hibernate.ejb.packaging</li>\n		<li>\n			org.hibernate.ejb.transaction</li>\n		<li>\n			org.hibernate.ejb.util</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.jdbc</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.profile</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.envers</li>\n		<li>\n			org.hibernate.envers.ant</li>\n		<li>\n			org.hibernate.envers.configuration</li>\n		<li>\n			org.hibernate.envers.configuration.metadata</li>\n		<li>\n			org.hibernate.envers.configuration.metadata.reader</li>\n		<li>\n			org.hibernate.envers.entities</li>\n		<li>\n			org.hibernate.envers.entities.mapper</li>\n		<li>\n			org.hibernate.envers.entities.mapper.id</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.component</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.initializor</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.proxy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.query</li>\n		<li>\n			org.hibernate.envers.event</li>\n		<li>\n			org.hibernate.envers.exception</li>\n		<li>\n			org.hibernate.envers.query</li>\n		<li>\n			org.hibernate.envers.query.criteria</li>\n		<li>\n			org.hibernate.envers.query.impl</li>\n		<li>\n			org.hibernate.envers.query.order</li>\n		<li>\n			org.hibernate.envers.query.projection</li>\n		<li>\n			org.hibernate.envers.query.property</li>\n		<li>\n			org.hibernate.envers.reader</li>\n		<li>\n			org.hibernate.envers.revisioninfo</li>\n		<li>\n			org.hibernate.envers.synchronization</li>\n		<li>\n			org.hibernate.envers.synchronization.work</li>\n		<li>\n			org.hibernate.envers.tools</li>\n		<li>\n			org.hibernate.envers.tools.graph</li>\n		<li>\n			org.hibernate.envers.tools.query</li>\n		<li>\n			org.hibernate.envers.tools.reflection</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.factory</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.junit</li>\n		<li>\n			org.hibernate.junit.functional</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.sql.ordering.antlr</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.test.annotations</li>\n		<li>\n			org.hibernate.test.cache</li>\n		<li>\n			org.hibernate.test.tm</li>\n		<li>\n			org.hibernate.tool.ant</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-javadoc-en/" target="_blank">Hibernate 3.5.5.Final&nbsp; 在线API文档</a></p>', 'Hibernate 3.5.5.Final 官方api的javadoc，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。', 1284480000000, '3.5.5.Final', '道长A', '', 'jboss.org', '', '', '', 'Windows', 'LGPL', '英文', 1284543192402, 1284545800057, 'admin'),
('000000002b1101b3012b14c5bef5005d', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 3.5.5.Final 在线参考手册', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.5.5.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、日文、德语、法语、西班牙语、葡萄牙语的版本，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			只读实体</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/zh-CN/html/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 中文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/zh-CN/html_single/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 中文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/en-US/html/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 英文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/en-US/html_single/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 英文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/ja-JP/html/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 日文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/ja-JP/html_single/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 日文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/de-DE/html/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 德语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/de-DE/html_single/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 德语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/fr-FR/html/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 法语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/fr-FR/html_single/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 法语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/es-ES/html/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 西班牙语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/es-ES/html_single/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 西班牙语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/pt-BR/html/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 葡萄牙语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-manual-ml/pt-BR/html_single/" target="_blank">Hibernate 3.5.5.Final 在线参考手册 葡萄牙语版本 单页</a></p>\n<p>\n	&nbsp;</p>', 'Hibernate 3.5.5.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、日文、德语、法语、西班牙语、葡萄牙语的版本，是开发人员的必备文档。', 1284480000000, '3.5.5.Final', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '中文', 1284543725301, 1284543891018, 'admin'),
('000000002b1101b3012b14cc01300065', '000000002b0c282d012b0f725939001d', 'Hibernate 3.5.5.Final 在线Java源码', '在线查看Hibernate源代码', NULL, '<p>\n	&nbsp;Hibernate 3.5.5.Final 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.annotations</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cache.infinispan</li>\n		<li>\n			org.hibernate.cache.infinispan.access</li>\n		<li>\n			org.hibernate.cache.infinispan.collection</li>\n		<li>\n			org.hibernate.cache.infinispan.entity</li>\n		<li>\n			org.hibernate.cache.infinispan.impl</li>\n		<li>\n			org.hibernate.cache.infinispan.query</li>\n		<li>\n			org.hibernate.cache.infinispan.timestamp</li>\n		<li>\n			org.hibernate.cache.infinispan.tm</li>\n		<li>\n			org.hibernate.cache.infinispan.util</li>\n		<li>\n			org.hibernate.cache.jbc</li>\n		<li>\n			org.hibernate.cache.jbc.access</li>\n		<li>\n			org.hibernate.cache.jbc.builder</li>\n		<li>\n			org.hibernate.cache.jbc.collection</li>\n		<li>\n			org.hibernate.cache.jbc.entity</li>\n		<li>\n			org.hibernate.cache.jbc.query</li>\n		<li>\n			org.hibernate.cache.jbc.timestamp</li>\n		<li>\n			org.hibernate.cache.jbc.util</li>\n		<li>\n			org.hibernate.cache.jbc2</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.cfg.annotations</li>\n		<li>\n			org.hibernate.cfg.annotations.reflection</li>\n		<li>\n			org.hibernate.cfg.beanvalidation</li>\n		<li>\n			org.hibernate.cfg.search</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.ejb</li>\n		<li>\n			org.hibernate.ejb.connection</li>\n		<li>\n			org.hibernate.ejb.criteria</li>\n		<li>\n			org.hibernate.ejb.criteria.expression</li>\n		<li>\n			org.hibernate.ejb.criteria.expression.function</li>\n		<li>\n			org.hibernate.ejb.criteria.path</li>\n		<li>\n			org.hibernate.ejb.criteria.predicate</li>\n		<li>\n			org.hibernate.ejb.event</li>\n		<li>\n			org.hibernate.ejb.instrument</li>\n		<li>\n			org.hibernate.ejb.metamodel</li>\n		<li>\n			org.hibernate.ejb.packaging</li>\n		<li>\n			org.hibernate.ejb.transaction</li>\n		<li>\n			org.hibernate.ejb.util</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.jdbc</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.profile</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.envers</li>\n		<li>\n			org.hibernate.envers.ant</li>\n		<li>\n			org.hibernate.envers.configuration</li>\n		<li>\n			org.hibernate.envers.configuration.metadata</li>\n		<li>\n			org.hibernate.envers.configuration.metadata.reader</li>\n		<li>\n			org.hibernate.envers.entities</li>\n		<li>\n			org.hibernate.envers.entities.mapper</li>\n		<li>\n			org.hibernate.envers.entities.mapper.id</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.component</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.initializor</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.proxy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.query</li>\n		<li>\n			org.hibernate.envers.event</li>\n		<li>\n			org.hibernate.envers.exception</li>\n		<li>\n			org.hibernate.envers.query</li>\n		<li>\n			org.hibernate.envers.query.criteria</li>\n		<li>\n			org.hibernate.envers.query.impl</li>\n		<li>\n			org.hibernate.envers.query.order</li>\n		<li>\n			org.hibernate.envers.query.projection</li>\n		<li>\n			org.hibernate.envers.query.property</li>\n		<li>\n			org.hibernate.envers.reader</li>\n		<li>\n			org.hibernate.envers.revisioninfo</li>\n		<li>\n			org.hibernate.envers.synchronization</li>\n		<li>\n			org.hibernate.envers.synchronization.work</li>\n		<li>\n			org.hibernate.envers.tools</li>\n		<li>\n			org.hibernate.envers.tools.graph</li>\n		<li>\n			org.hibernate.envers.tools.query</li>\n		<li>\n			org.hibernate.envers.tools.reflection</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.factory</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.junit</li>\n		<li>\n			org.hibernate.junit.functional</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.sql.ordering.antlr</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.test.annotations</li>\n		<li>\n			org.hibernate.test.cache</li>\n		<li>\n			org.hibernate.test.tm</li>\n		<li>\n			org.hibernate.tool.ant</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.5.final-src/" target="_blank">Hibernate 3.5.5.Final 在线Java源码</a></p>\n', 'Hibernate 3.5.5.Final 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。', 1284480000000, '3.5.5.Final', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '英文', 1284544135472, 1286873241201, 'admin'),
('000000002b1101b3012b14dd2e760069', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.5.5.Final 下载', '最稳定的Hibernate 3.5.X 版本', NULL, '<p>\n	Hibernate 3.5.5.Final 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、日文、德语、法语、西班牙语、葡萄牙语的版本），是开发人员的必备工具。</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<p>\n	本版本的Changelog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 3.5.5 (2010.08.18)<br />\n		-------------------------------------------<br />\n		http://opensource.atlassian.com/projects/hibernate/browse/HHH/fixforversion/11134<br />\n		<br />\n		** Bug<br />\n		* [HHH-1643] - Sub-query as function parameter - either sub-query is missed from SQL or NullPointerException raised<br />\n		* [HHH-4011] - ChainedPropertyAccessor is not serializable, which breaks caching to disk and replicated caches.<br />\n		* [HHH-5097] - Bug in ParameterizedFunctionExpression with two or more parameters: IllegalArgumentException<br />\n		* [HHH-5296] - AbstractFromImpl::getJoin() shall return empty set, not null<br />\n		* [HHH-5355] - org.hibernate.test.id.uuid.sqlrep.sqlchar.UUIDCharTest errors with IngresDialect<br />\n		* [HHH-5408] - Revise JPA compliance wording used in documentation according to Oracle policies<br />\n		* [HHH-5425] - PropertyAccessException when caching results from a Query with a ResultTransformer that as 1 value per row<br />\n		* [HHH-5426] - HQL update/delete does not invalidate the query cache<br />\n		* [HHH-5431] - Infinispan&#39;s CacheAdapterImpl.putAllowingTimeout not using silent flag<br />\n		* [HHH-5449] - Versioned HQL update might issue incorrect SQL<br />\n		* [HHH-5469] - HHH-3659 is only half done, due to HHH-4989 (i.e. no HQL performance log when running Java 5)<br />\n		* [HHH-5473] - Default for CHECK_NULLABILITY does not allow merge retries<br />\n		<br />\n		** Improvement<br />\n		* [HHH-2510] - override equals() and fix hashCode() in AliasToBeanResultTransformer<br />\n		* [HHH-5295] - Rendered JPAQL query shall be the same all the times, aliases shall not have random indexes<br />\n		* [HHH-5420] - introducing new dialect for ms sql server 2008 with jdbc 3.0 and above<br />\n		* [HHH-5424] - ResultTransformer should only be set in the QueryKey if putting/getting data that is actually transformed<br />\n		* [HHH-5438] - Skip deployment of &quot;irrelevant&quot; modules<br />\n		* [HHH-5439] - Deployment of site.xml<br />\n		<br />\n		** Patch<br />\n		* [HHH-5349] - CriteriaHQLAlignmentTest fails with an error running with the Ingres dialect<br />\n		* [HHH-5401] - Update to HHH-5381 HSQLDB new dialect (Fred Toussi)<br />\n		* [HHH-5435] - Add identity column support to the Ingres10Dialect<br />\n		<br />\n		** Task<br />\n		* [HHH-5259] - Invalid reflection optimization configuration property name in Hibernate documentation.<br />\n		* [HHH-5451] - deprecate cglib as bytecode provider</p>\n</blockquote>\n', 'Hibernate 3.5.5.Final 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、日文、德语、法语、西班牙语、葡萄牙语的版本），是开发人员的必备工具。', 1284480000000, '3.5.5.Final', '道长A', '', 'jboss.org', '', '官方下载-http://nchc.dl.sourceforge.net/project/hibernate/hibernate3/3.5.5-Final/hibernate-distribution-3.5.5-Final-dist.zip\n本站下载-http://story.ajava.org/hibernate/3.5.5.final.zip', '64M', '所有系统', 'LGPL', '英文', 1284545261174, 1284545361912, 'admin'),
('000000002b1101b3012b14e3f9c30074', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.5.5.Final API文档下载', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 3.5.5.Final 官方api的javadoc，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.annotations</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cache.infinispan</li>\n		<li>\n			org.hibernate.cache.infinispan.access</li>\n		<li>\n			org.hibernate.cache.infinispan.collection</li>\n		<li>\n			org.hibernate.cache.infinispan.entity</li>\n		<li>\n			org.hibernate.cache.infinispan.impl</li>\n		<li>\n			org.hibernate.cache.infinispan.query</li>\n		<li>\n			org.hibernate.cache.infinispan.timestamp</li>\n		<li>\n			org.hibernate.cache.infinispan.tm</li>\n		<li>\n			org.hibernate.cache.infinispan.util</li>\n		<li>\n			org.hibernate.cache.jbc</li>\n		<li>\n			org.hibernate.cache.jbc.access</li>\n		<li>\n			org.hibernate.cache.jbc.builder</li>\n		<li>\n			org.hibernate.cache.jbc.collection</li>\n		<li>\n			org.hibernate.cache.jbc.entity</li>\n		<li>\n			org.hibernate.cache.jbc.query</li>\n		<li>\n			org.hibernate.cache.jbc.timestamp</li>\n		<li>\n			org.hibernate.cache.jbc.util</li>\n		<li>\n			org.hibernate.cache.jbc2</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.cfg.annotations</li>\n		<li>\n			org.hibernate.cfg.annotations.reflection</li>\n		<li>\n			org.hibernate.cfg.beanvalidation</li>\n		<li>\n			org.hibernate.cfg.search</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.ejb</li>\n		<li>\n			org.hibernate.ejb.connection</li>\n		<li>\n			org.hibernate.ejb.criteria</li>\n		<li>\n			org.hibernate.ejb.criteria.expression</li>\n		<li>\n			org.hibernate.ejb.criteria.expression.function</li>\n		<li>\n			org.hibernate.ejb.criteria.path</li>\n		<li>\n			org.hibernate.ejb.criteria.predicate</li>\n		<li>\n			org.hibernate.ejb.event</li>\n		<li>\n			org.hibernate.ejb.instrument</li>\n		<li>\n			org.hibernate.ejb.metamodel</li>\n		<li>\n			org.hibernate.ejb.packaging</li>\n		<li>\n			org.hibernate.ejb.transaction</li>\n		<li>\n			org.hibernate.ejb.util</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.jdbc</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.profile</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.envers</li>\n		<li>\n			org.hibernate.envers.ant</li>\n		<li>\n			org.hibernate.envers.configuration</li>\n		<li>\n			org.hibernate.envers.configuration.metadata</li>\n		<li>\n			org.hibernate.envers.configuration.metadata.reader</li>\n		<li>\n			org.hibernate.envers.entities</li>\n		<li>\n			org.hibernate.envers.entities.mapper</li>\n		<li>\n			org.hibernate.envers.entities.mapper.id</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.component</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.initializor</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.proxy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.query</li>\n		<li>\n			org.hibernate.envers.event</li>\n		<li>\n			org.hibernate.envers.exception</li>\n		<li>\n			org.hibernate.envers.query</li>\n		<li>\n			org.hibernate.envers.query.criteria</li>\n		<li>\n			org.hibernate.envers.query.impl</li>\n		<li>\n			org.hibernate.envers.query.order</li>\n		<li>\n			org.hibernate.envers.query.projection</li>\n		<li>\n			org.hibernate.envers.query.property</li>\n		<li>\n			org.hibernate.envers.reader</li>\n		<li>\n			org.hibernate.envers.revisioninfo</li>\n		<li>\n			org.hibernate.envers.synchronization</li>\n		<li>\n			org.hibernate.envers.synchronization.work</li>\n		<li>\n			org.hibernate.envers.tools</li>\n		<li>\n			org.hibernate.envers.tools.graph</li>\n		<li>\n			org.hibernate.envers.tools.query</li>\n		<li>\n			org.hibernate.envers.tools.reflection</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.factory</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.junit</li>\n		<li>\n			org.hibernate.junit.functional</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.sql.ordering.antlr</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.test.annotations</li>\n		<li>\n			org.hibernate.test.cache</li>\n		<li>\n			org.hibernate.test.tm</li>\n		<li>\n			org.hibernate.tool.ant</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n	</ol>\n</blockquote>', 'Hibernate 3.5.5.Final 官方api的javadoc，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。', 1284480000000, '3.5.5.Final', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.5.5.final-javadoc-en-html.zip', '13M', '所有系统', 'LGPL', '英文', 1284545706435, 1284545913085, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b1101b3012b14ede6d3009d', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.5.5.Final 参考手册 PDF下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.5.5.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<br />\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			只读实体</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>\n', 'Hibernate 3.5.5.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。', 1284480000000, '3.5.5.Final', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.5.5.final-manual-zh-pdf.zip', '1M', '所有系统', 'LGPL', '中文', 1284546356947, 1284546356947, 'admin'),
('000000002b1101b3012b14f1daae00a1', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.5.5.Final 参考手册 HTML下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.5.5.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			只读实体</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>', 'Hibernate 3.5.5.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。', 1284480000000, '3.5.5.Final', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.5.5.final-manual-zh-html.zip', '1M', '所有系统', 'LGPL', '中文', 1284546615982, 1284546628878, 'admin'),
('000000002b151467012b1534eb370002', '000000002b0bf62e012b0bfbf7b80002', '《MyEclipse Hibernate快速入门》PDF下载', '开发简单的Hibernate应用', NULL, '<p>\n	这个快速入门展示了使用 MyEclipse Enterprise Workbench 开发 Hibernate 的基本功能，概念和技术。 我们将全程带领你来开发一个非常简单的 Java Hibernate 应用。</p>\n<p>\n	本书原文为HTML，为方便大家阅读，道长A将它转换为PDF。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			准备工作</li>\n		<li>\n			介绍</li>\n		<li>\n			Hibernate 一览</li>\n		<li>\n			创建 HibernateDemo 项目<br />\n			创建 HibernateDemo Java Project<br />\n			添加 Hibernate Capabilities<br />\n			自定义 Hibernate 配置文件<br />\n			创建 Hibernate Java 表映射<br />\n			使用模版调整生成更好的代码<br />\n			使用自定义反向工程策略<br />\n			编辑映射文件</li>\n		<li>\n			使用 HQL 编辑器</li>\n		<li>\n			测试 HibernateDemo 应用</li>\n		<li>\n			使用示例 HibernateDemo 项目</li>\n		<li>\n			总结</li>\n		<li>\n			用户反馈</li>\n		<li>\n			资源</li>\n	</ol>\n</blockquote>', '这个快速入门展示了使用 MyEclipse Enterprise Workbench 开发 Hibernate 的基本功能，概念和技术。 我们将全程带领你来开发一个非常简单的 Java Hibernate 应用。', 1284480000000, '1.0', '刘长炯', '', 'blogjava.net', 'http://www.blogjava.net/beansoft/', '本站下载-http://story.ajava.org/hibernate/myeclipse-hibernate-quickstart-zh-pdf.zip', '740K', '所有系统', 'CC3', '中文', 1284551011127, 1284552072751, 'admin'),
('000000002b151467012b1551a8c30012', '000000002b0bf62e012b0bfbf7b80002', '《用Hibernate和Spring开发持久层》PDF下载', '简单的示例', NULL, '<p>\n	在本文中，用一个真实世界的例子向您介绍两个最激动人心的企业新技术。Hibernate 是一个对象关系映射工具，而 Spring&nbsp; 是一个 AOP&nbsp; 框架和 IOC&nbsp; 容器。介绍了如何结合这两者，为企业应用程序构建一个事务持久层。在本文中，通过具体介绍使用 Hibernate&nbsp; 和 Spring 在企业应用程序中构建一个事务持久层，您会认识到这些技术。</p>', '在本文中，用一个真实世界的例子向您介绍两个最激动人心的企业新技术。Hibernate 是一个对象关系映射工具，而 Spring  是一个 AOP  框架和 IOC  容器。介绍了如何结合这两者，为企业应用程序构建一个事务持久层。在本文中，通过具体介绍使用 Hibernate  和 Spring 在企业应用程序中构建一个事务持久层，您会认识到这些技术。', 1284480000000, '1.0', '胡昌龙', '', 'AJava', '', '本站下载-http://story.ajava.org/hibernate/hibernate-spring-develop-persistence-zh-pdf.zip', '293K', '所有系统', 'CC3', '中文', 1284552894659, 1284552977705, 'admin'),
('000000002b151467012b15f9ee680018', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 2.1.8 在线参考手册', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 2.1.8 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、日文、法语、意大利语、俄语的版本，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			在Tomcat中快速上手</li>\n		<li>\n			体系结构</li>\n		<li>\n			SessionFactory配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			O/R Mapping基础</li>\n		<li>\n			集合类(Collections)映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射(Inheritance Mappings)</li>\n		<li>\n			操作持久化数据(Manipulating Persistent Data)</li>\n		<li>\n			事务和并行（Transactions And Concurrency）</li>\n		<li>\n			Hibernate查询语言(Query Language), 即HQL</li>\n		<li>\n			条件查询(Criteria Query)</li>\n		<li>\n			原生SQL查询</li>\n		<li>\n			性能提升（Improving performance）</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：不同的映射</li>\n		<li>\n			最佳实践(Best Practices)</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/zh/html/" target="_blank">Hibernate 2.1.8 在线参考手册 中文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/zh/html_single/" target="_blank">Hibernate 2.1.8 在线参考手册 中文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/en/html/" target="_blank">Hibernate 2.1.8 在线参考手册 英文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/en/html_single/" target="_blank">Hibernate 2.1.8 在线参考手册 英文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/ja/html/" target="_blank">Hibernate 2.1.8 在线参考手册 日文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/ja/html_single/" target="_blank">Hibernate 2.1.8 在线参考手册 日文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/it/html/" target="_blank">Hibernate 2.1.8 在线参考手册 意大利版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/it/html_single/" target="_blank">Hibernate 2.1.8 在线参考手册 意大利版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/fr/html/" target="_blank">Hibernate 2.1.8 在线参考手册 法语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/fr/html_single/" target="_blank">Hibernate 2.1.8 在线参考手册 法语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/ru/html/" target="_blank">Hibernate 2.1.8 在线参考手册 俄语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-manual-ml/ru/html_single/" target="_blank">Hibernate 2.1.8 在线参考手册 俄语版本 单页</a></p>\n', 'Hibernate 2.1.8 官方参考手册，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、日文、法语、意大利语、俄罗斯语的版本，是开发人员的必备文档。', 1284480000000, '2.1.8', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '中文', 1284563922536, 1284563922536, 'admin'),
('000000002b151467012b1600aa820020', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 2.1.8 在线API文档', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 2.1.8 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			net.sf.hibernate</li>\n		<li>\n			net.sf.hibernate.cache</li>\n		<li>\n			net.sf.hibernate.cfg</li>\n		<li>\n			net.sf.hibernate.collection</li>\n		<li>\n			net.sf.hibernate.connection</li>\n		<li>\n			net.sf.hibernate.dialect</li>\n		<li>\n			net.sf.hibernate.engine</li>\n		<li>\n			net.sf.hibernate.exception</li>\n		<li>\n			net.sf.hibernate.expression</li>\n		<li>\n			net.sf.hibernate.hql</li>\n		<li>\n			net.sf.hibernate.id</li>\n		<li>\n			net.sf.hibernate.impl</li>\n		<li>\n			net.sf.hibernate.jca</li>\n		<li>\n			net.sf.hibernate.jmx</li>\n		<li>\n			net.sf.hibernate.loader</li>\n		<li>\n			net.sf.hibernate.lob</li>\n		<li>\n			net.sf.hibernate.mapping</li>\n		<li>\n			net.sf.hibernate.metadata</li>\n		<li>\n			net.sf.hibernate.odmg</li>\n		<li>\n			net.sf.hibernate.persister</li>\n		<li>\n			net.sf.hibernate.property</li>\n		<li>\n			net.sf.hibernate.proxy</li>\n		<li>\n			net.sf.hibernate.sql</li>\n		<li>\n			net.sf.hibernate.tool.hbm2ddl</li>\n		<li>\n			net.sf.hibernate.transaction</li>\n		<li>\n			net.sf.hibernate.transform</li>\n		<li>\n			net.sf.hibernate.type</li>\n		<li>\n			net.sf.hibernate.util</li>\n		<li>\n			net.sf.hibernate.xml</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-javadoc-en/" target="_blank">Hibernate 2.1.8 在线API文档</a></p>\n', 'Hibernate 2.1.8 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。', 1284480000000, '2.1.8', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '英文', 1284564363906, 1284564363906, 'admin'),
('000000002b151467012b1603b3390024', '000000002b0c282d012b0f725939001d', 'Hibernate 2.1.8 在线Java源码', '在线查看Hibernate源代码', NULL, '<p>\n	Hibernate 2.1.8 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			net.sf.hibernate</li>\n		<li>\n			net.sf.hibernate.cache</li>\n		<li>\n			net.sf.hibernate.cfg</li>\n		<li>\n			net.sf.hibernate.collection</li>\n		<li>\n			net.sf.hibernate.connection</li>\n		<li>\n			net.sf.hibernate.dialect</li>\n		<li>\n			net.sf.hibernate.engine</li>\n		<li>\n			net.sf.hibernate.exception</li>\n		<li>\n			net.sf.hibernate.expression</li>\n		<li>\n			net.sf.hibernate.hql</li>\n		<li>\n			net.sf.hibernate.id</li>\n		<li>\n			net.sf.hibernate.impl</li>\n		<li>\n			net.sf.hibernate.jca</li>\n		<li>\n			net.sf.hibernate.jmx</li>\n		<li>\n			net.sf.hibernate.loader</li>\n		<li>\n			net.sf.hibernate.lob</li>\n		<li>\n			net.sf.hibernate.mapping</li>\n		<li>\n			net.sf.hibernate.metadata</li>\n		<li>\n			net.sf.hibernate.odmg</li>\n		<li>\n			net.sf.hibernate.persister</li>\n		<li>\n			net.sf.hibernate.property</li>\n		<li>\n			net.sf.hibernate.proxy</li>\n		<li>\n			net.sf.hibernate.sql</li>\n		<li>\n			net.sf.hibernate.tool.hbm2ddl</li>\n		<li>\n			net.sf.hibernate.transaction</li>\n		<li>\n			net.sf.hibernate.transform</li>\n		<li>\n			net.sf.hibernate.type</li>\n		<li>\n			net.sf.hibernate.util</li>\n		<li>\n			net.sf.hibernate.xml</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/2.1.8-src/" target="_blank">Hibernate 2.1.8 在线Java源码</a></p>\n', 'Hibernate 2.1.8 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。', 1284480000000, '2.1.8', '道长A', '', 'AJava', '', '', '', '所有系统', 'LGPL', '英文', 1284564562745, 1286873187543, 'admin'),
('000000002b151467012b160927e6002e', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 2.1.8 参考手册 PDF下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	&nbsp;Hibernate 2.1.8 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			在Tomcat中快速上手</li>\n		<li>\n			体系结构</li>\n		<li>\n			SessionFactory配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			O/R Mapping基础</li>\n		<li>\n			集合类(Collections)映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射(Inheritance Mappings)</li>\n		<li>\n			操作持久化数据(Manipulating Persistent Data)</li>\n		<li>\n			事务和并行（Transactions And Concurrency）</li>\n		<li>\n			Hibernate查询语言(Query Language), 即HQL</li>\n		<li>\n			条件查询(Criteria Query)</li>\n		<li>\n			原生SQL查询</li>\n		<li>\n			性能提升（Improving performance）</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：不同的映射</li>\n		<li>\n			最佳实践(Best Practices)</li>\n	</ol>\n</blockquote>\n', ' Hibernate 2.1.8 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。', 1284480000000, '2.1.8', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/2.1.8-manual-zh-pdf.zip', '700K', '所有系统', 'LGPL', '中文', 1284564920294, 1284564920294, 'admin'),
('000000002b151467012b161762840032', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 2.1.8 参考手册 HTML下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 2.1.8 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			在Tomcat中快速上手</li>\n		<li>\n			体系结构</li>\n		<li>\n			SessionFactory配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			O/R Mapping基础</li>\n		<li>\n			集合类(Collections)映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射(Inheritance Mappings)</li>\n		<li>\n			操作持久化数据(Manipulating Persistent Data)</li>\n		<li>\n			事务和并行（Transactions And Concurrency）</li>\n		<li>\n			Hibernate查询语言(Query Language), 即HQL</li>\n		<li>\n			条件查询(Criteria Query)</li>\n		<li>\n			原生SQL查询</li>\n		<li>\n			性能提升（Improving performance）</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：不同的映射</li>\n		<li>\n			最佳实践(Best Practices)</li>\n	</ol>\n</blockquote>\n', 'Hibernate 2.1.8 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。', 1284480000000, '2.1.8', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/2.1.8-manual-zh-html.zip', '375K', '所有系统', 'LGPL', '中文', 1284565852805, 1284565852805, 'admin'),
('000000002b151467012b161c00d50036', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 2.1.8 API文档下载', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 2.1.8 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			net.sf.hibernate</li>\n		<li>\n			net.sf.hibernate.cache</li>\n		<li>\n			net.sf.hibernate.cfg</li>\n		<li>\n			net.sf.hibernate.collection</li>\n		<li>\n			net.sf.hibernate.connection</li>\n		<li>\n			net.sf.hibernate.dialect</li>\n		<li>\n			net.sf.hibernate.engine</li>\n		<li>\n			net.sf.hibernate.exception</li>\n		<li>\n			net.sf.hibernate.expression</li>\n		<li>\n			net.sf.hibernate.hql</li>\n		<li>\n			net.sf.hibernate.id</li>\n		<li>\n			net.sf.hibernate.impl</li>\n		<li>\n			net.sf.hibernate.jca</li>\n		<li>\n			net.sf.hibernate.jmx</li>\n		<li>\n			net.sf.hibernate.loader</li>\n		<li>\n			net.sf.hibernate.lob</li>\n		<li>\n			net.sf.hibernate.mapping</li>\n		<li>\n			net.sf.hibernate.metadata</li>\n		<li>\n			net.sf.hibernate.odmg</li>\n		<li>\n			net.sf.hibernate.persister</li>\n		<li>\n			net.sf.hibernate.property</li>\n		<li>\n			net.sf.hibernate.proxy</li>\n		<li>\n			net.sf.hibernate.sql</li>\n		<li>\n			net.sf.hibernate.tool.hbm2ddl</li>\n		<li>\n			net.sf.hibernate.transaction</li>\n		<li>\n			net.sf.hibernate.transform</li>\n		<li>\n			net.sf.hibernate.type</li>\n		<li>\n			net.sf.hibernate.util</li>\n		<li>\n			net.sf.hibernate.xml</li>\n	</ol>\n</blockquote>\n', 'Hibernate 2.1.8 官方api的javadoc，由Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard、Steve Ebersole、 James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。', 1284480000000, '2.1.8', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/2.1.8-javadoc-en-html.zip', '3M', '所有系统', 'LGPL', '英文', 1284566155477, 1284566155477, 'admin'),
('000000002b151467012b162708f0003a', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 2.1.8 下载', '最稳定的Hibernate 2.1.X 版本', NULL, '<p>\n	Hibernate 2.1.8 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、日文、法语、德语、俄语的版本），是开发人员的必备工具。</p>\n<p>\n	本版本的Changelog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 2.1.8 (30.1.2005)<br />\n		------------------------------------<br />\n		* fixed a bad bug in saveOrUpdateCopy() that caused NonUniqueObjectExceptions<br />\n		* fixed problems with long types in Oracle DDL generation<br />\n		* fixed a memory management problem when deleting collections<br />\n		* schema export now uses hibernate.default_schema (Michael Gloegl)<br />\n		* fixed broken query cache invalidation from 2.1.7<br />\n		* fixed a problem with schema update on some databases<br />\n		* support MySQL rlike operator in HQL<br />\n		* fixed a minor problem with Hibernate Clobs and Blobs<br />\n		* added support for WebSphere&#39;s weird TxManagerLookup<br />\n		* Add LockAcquisitionErrorCodes to MySQL dialect (Jesse Barnum, Emmanuel Bernard)</p>\n</blockquote>\n', 'Hibernate 2.1.8 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、日文、法语、德语、俄语的版本），是开发人员的必备工具。', 1284480000000, '2.1.8', '道长A', '', 'jboss.org', '', '官方下载-http://nchc.dl.sourceforge.net/project/hibernate/hibernate2/2.1.8/hibernate-2.1.8.zip\n本站下载-http://story.ajava.org/hibernate/2.1.8.zip', '19M', '所有系统', 'LGPL', '英文', 1284566878448, 1284566878448, 'admin'),
('000000002b151467012b1f66578b0042', '000000002b0bf62e012b0bfbf7b80002', '《Struts，Hibernate，Spring集成开发宝典》PDF下载', '介绍SSH集成开发', NULL, '<blockquote>\n	<p>\n		本书为PDF扫描版本。如果您想购买此书，可到<a href="http://www.china-pub.com/32835">http://www.china-pub.com/32835</a></p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook30001-35000/32835/shupi.jpg" style="width: 287px; height: 400px;" /></p>\n<p>\n	本书以Struts，Hibernate，Spring为核心详细地讲解了这三个组件的基础知识和基本使用方法，并通过一系列集成开发实例讲解了这三个组件在J2EE项目中的应用。</p>\n<p>\n	本书对每一个组件的讲解都是以入门级实例开始的，然后对组件的架构以及各方面的功能进行了深入的探讨。这样安排的好处是使读者在具备了初步知识的基础上对组件进行更深入的理解，并通过一系列贴近实际的实例来提高读者对组件的把握能力以及迅速丰富开发经验。</p>\n<p>\n	本书的配套光盘中包含了本书所有实例的完整源代码以及开发中需要使用到的辅助工具。另外，作者还提供了交流空间(http://programbible.spaces.live.com)为广大读者解答学习中遇到的各种问题。</p>\n<p>\n	本书适用于使用基于Struts，Hibernate，Spring的Java应用程序进行开发的技术人员，同时也非常适合对这三种技术感兴趣的读者进行学习和提高。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第1章 Struts简介 1<br />\n		1.1 Struts项目的组成 1<br />\n		1.2 获得Struts 2<br />\n		1.2.1 Struts发行包的分类及简介 3<br />\n		1.2.2 Struts的运行环境 3<br />\n		1.3 运行Struts的样例程序 5<br />\n		1.3.1 安装JDK 5<br />\n		1.3.2 安装Tomcat 6<br />\n		1.3.3 部署Struts的样例程序 7<br />\n		1.4 小结 10<br />\n		第2章 Struts入门 12<br />\n		2.1 实例简介 12<br />\n		2.2 准备工作 13<br />\n		2.2.1 配置Ant 13<br />\n		2.2.2 数据库的安装 13<br />\n		2.3 使用Struts初始化一个Web应用项目 14<br />\n		2.3.1 构建基础目录结构 14<br />\n		2.3.2 修改Ant的构建文件 14<br />\n		2.4 编写第一个Action 17<br />\n		2.5 编写第一个页面 19<br />\n		.2.5.1 设置文件的编码格式 19<br />\n		2.5.2 对国际化的支持 20<br />\n		2.5.3 编写JSP页面 22<br />\n		2.6 配置Action和forward 23<br />\n		2.6.1 配置web.xml文件 23<br />\n		2.6.2 配置Struts的配置文件 25<br />\n		2.7 编译、部署和测试Struts应用程序 26<br />\n		2.8 编写第一个ActionForm 28<br />\n		2.8.1 定义一个ActionForm类 29<br />\n		2.8.2 定义ActionForm的属性 29<br />\n		2.8.3 覆盖reset()方法 30<br />\n		2.8.4 实现validate()方法 31<br />\n		2.9 编写第一个输入页面 32<br />\n		2.10 在Action中增加对取消按钮的处理 39<br />\n		2.11 在Struts中更新数据库 41<br />\n		2.11.1 建立数据库的辅助工具类 41<br />\n		2.11.2 初始化数据库表 44<br />\n		2.11.3 修改Action的execute()方法 45<br />\n		2.12 Struts中的异常处理 46<br />\n		2.12.1 定义异常信息 47<br />\n		2.12.2 定义对异常的处理 47<br />\n		2.12.3 测试 48<br />\n		2.13 使用Struts标记来显示对象 49<br />\n		2.13.1 定义对象名称 49<br />\n		2.13.2 修改注册成功页面 50<br />\n		2.14 使用Logic标记来显示用户 52<br />\n		2.14.1 实现用户对象 52<br />\n		2.14.2 编写后台Action以获得所有的用户信息 53<br />\n		2.14.3 配置Action 54<br />\n		2.14.4 实现用户列表页面 55<br />\n		2.15 小结 56<br />\n		第3章 Struts的框架结构 57<br />\n		3.1 MVC简介 57<br />\n		3.2 JSP开发模式 58<br />\n		3.3 Struts的结构 59<br />\n		3.3.1 Struts概览 60<br />\n		3.3.2 Struts的组成 60<br />\n		3.3.3 HTTP请求处理的顺序 63<br />\n		3.4 基于Struts的开发方法 66<br />\n		3.5 小结 67<br />\n		第4章 使用Eclipse和MyEclipse开发Struts应用程序 68<br />\n		4.1 Eclipse简介 68<br />\n		4.2 MyEclipse简介 69<br />\n		4.3 使用MyEclipse开发Struts应用实例 70<br />\n		4.3.1 创建一个新的项目 70<br />\n		4.3.2 增加Struts组件到项目中 72<br />\n		4.3.3 增加类库到项目构建的路径中 73<br />\n		4.3.4 Struts配置文件编辑器 75<br />\n		4.3.5 开发一个简单的Struts应用程序 76<br />\n		4.4 小结 85<br />\n		第5章 用户界面开发基础 86<br />\n		5.1 用户界面开发概述 86<br />\n		5.2 Struts标记库 88<br />\n		5.2.1 Bean标记库 88<br />\n		5.2.2 HTML标记库 96<br />\n		5.2.3 标记库的配置和使用方法 106<br />\n		5.3 Java标准标记库 106<br />\n		5.3.1 JSTL简介 107<br />\n		5.3.2 JSTL的组成 107<br />\n		5.3.3 JSTL的安装 107<br />\n		5.3.4 JSTL的使用 108<br />\n		5.4 表达式语言 108<br />\n		5.4.1 表达式语言简介 108<br />\n		5.4.2 变量的作用域 109<br />\n		5.4.3 隐式对象 110<br />\n		5.4.4 存取器 111<br />\n		5.4.5 运算符 112<br />\n		5.5 显示柱状图 113<br />\n		5.5.1 柱状图显示实例的功能简介 113<br />\n		5.5.2 柱状图的实现原理 114<br />\n		5.5.3 实现柱状图的显示功能 114<br />\n		5.6 实现表格隔行使用相同样式 121<br />\n		5.6.1 实例功能简介 121<br />\n		5.6.2 改变表格行样式的方法 122<br />\n		5.6.3 动态使用表格行样式 122<br />\n		5.7 数据的分页显示 124<br />\n		5.7.1 数据分页显示的功能 125<br />\n		5.7.2 数据分页的实现方法 125<br />\n		5.7.3 数据分页功能的具体实现 126<br />\n		5.8 对用户输入文本的处理 133<br />\n		5.8.1 文本处理的原则 134<br />\n		5.8.2 文本输出的方式 134<br />\n		5.8.3 自定义编码方法 136<br />\n		5.9 小结 136<br />\n		第6章 各种各样的ActionForm 137<br />\n		6.1 ActionForm简介 137<br />\n		6.2 ActionForm的生命周期 138<br />\n		6.3 在ActionForm中使用列表属性 139<br />\n		6.3.1 功能简介 140<br />\n		6.3.2 实现方法 140<br />\n		6.3.3 在ActionForm中使用列表属性的实例 140<br />\n		6.4 在ActionForm中使用Map属性 147<br />\n		6.4.1 功能简介 147<br />\n		6.4.2 实现方法 147<br />\n		6.4.3 在ActionForm中使用Map属性的实例 147<br />\n		6.5 使用动态ActionForm 153<br />\n		6.5.1 功能简介 153<br />\n		6.5.2 实现方法 153<br />\n		6.5.3 使用动态ActionForm的实例 155<br />\n		6.6 使用Lazy动态ActionForm 159<br />\n		6.6.1 功能简介 159<br />\n		6.6.2 实现方法 159<br />\n		6.6.3 使用Lazy ActionForm的实例 159<br />\n		6.7 自定义赋值转换方法 161<br />\n		6.8 小结 162<br />\n		第7章 使用多样性的Action 163<br />\n		7.1 Action简介 163<br />\n		7.2 Action的开发步骤 163<br />\n		7.3 各种各样的Action 165<br />\n		7.3.1 ForwardAction 166<br />\n		7.3.2 IncludeAction 167<br />\n		7.3.3 DispatchAction 168<br />\n		7.3.4 DownloadAction 174<br />\n		7.3.5 SwitchAction 174<br />\n		7.3.6 LocaleAction 174<br />\n		7.4 解决用户重复提交的问题 174<br />\n		7.4.1 功能简介 175<br />\n		7.4.2 Struts解决用户重复提交的实现原理 175<br />\n		7.4.3 在Struts中避免重复响应用户的请求 176<br />\n		7.4.4 使用JavaScript解决用户重复提交的问题 181<br />\n		7.5 在Struts中输出XML文件 183<br />\n		7.5.1 功能简介 183<br />\n		7.5.2 Struts输出XML文件的原理和方法 183<br />\n		7.5.3 Struts中输出XML文件的实例 184<br />\n		7.6 文件上传和下载功能的实现 186<br />\n		7.6.1 功能简介 186<br />\n		7.6.2 实现方法 186<br />\n		7.6.3 文件上传功能的实现 187<br />\n		7.6.4 文件下载功能的实现 193<br />\n		7.7 小结 195<br />\n		第8章 Validator的使用 196<br />\n		8.1 Validator框架简介 196<br />\n		8.1.1 Validator的作用 196<br />\n		8.1.2 Validator的优点 197<br />\n		8.1.3 Struts与Validator的关系 197<br />\n		8.1.4 Validator的组成 197<br />\n		8.2 Validator的使用 202<br />\n		8.2.1 在Struts中使用Validator 202<br />\n		8.2.2 在独立的应用中使用Validator 209<br />\n		8.3 日期的验证 216<br />\n		8.4 验证两个输入域是否相等 218<br />\n		8.5 使用正则表达式进行验证 219<br />\n		8.6 小结 220<br />\n		第9章 Struts的扩展与高级技巧 221<br />\n		9.1 使用Struts的PlugIn进行Web应用的扩展 221<br />\n		9.2 扩展Struts的RequestProcessor 225<br />\n		9.2.1 RequestProcessor简介 225<br />\n		9.2.2 RequestProcessor的扩展 227<br />\n		9.3 ActionServlet的扩展 228<br />\n		9.4 Struts的国际化 229<br />\n		9.4.1 检查浏览器的语言设置 229<br />\n		9.4.2 在Struts中使用多语言的信息 230<br />\n		9.5 基于Struts框架的系统安全 233<br />\n		9.5.1 准备工作 233<br />\n		9.5.2 对于Action的权限校验 233<br />\n		9.5.3 在页面中进行权限校验 235<br />\n		9.5.4 使用Filter进行权限的验证 236<br />\n		9.6 应用中的异常处理 236<br />\n		9.6.1 异常处理的原则 236<br />\n		9.6.2 业务异常的设计 237<br />\n		9.6.3 在Servlet容器中处理异常 238<br />\n		9.6.4 Struts的异常处理机制 241<br />\n		9.6.5 利用扩展Action的方法实现对异常的处理 243<br />\n		9.7 小结 245<br />\n		第10章 Hibernate简介 246<br />\n		10.1 持久化技术 246<br />\n		10.2 持久层技术 246<br />\n		10.3 持久层技术的实现 249<br />\n		10.4 ORM概述 251<br />\n		10.5 Hibernate简介 251<br />\n		10.6 获得Hibernate 252<br />\n		10.6.1 Hibernate Core 252<br />\n		10.6.2 Hibernate Annotations 253<br />\n		10.6.3 Hibernate EntityManager 254<br />\n		10.6.4 Hibernate Tools 254<br />\n		10.6.5 NHibernate 254<br />\n		10.6.6 JBoss Seam 254<br />\n		10.7 Hibernate Core软件包的组成 254<br />\n		10.7.1 运行样例程序和测试程序 255<br />\n		10.7.2 Hibernate的依赖组件 255<br />\n		10.8 小结 257<br />\n		第11章 Hibernate入门 258<br />\n		11.1 项目的体系结构 258<br />\n		11.2 项目开发概述 260<br />\n		11.2.1 功能介绍 260<br />\n		11.2.2 应用的主要技术 262<br />\n		11.2.3 开发步骤和方法 263<br />\n		11.3 开发博客管理系统 264<br />\n		11.3.1 创建一个新项目 264<br />\n		11.3.2 分析和建模 268<br />\n		11.3.3 实现域模型 271<br />\n		11.3.4 编写数据库脚本 283<br />\n		11.3.5 定义映射文件 285<br />\n		11.3.6 编写Hibernate的配置文件 288<br />\n		11.3.7 Hibernate工具类的实现 295<br />\n		11.3.8 Hibernate Filter的实现 306<br />\n		11.3.9 定义和实现系统的异常 311<br />\n		11.3.10 定义和实现DAO 314<br />\n		11.3.11 完成用户注册和登录功能 343<br />\n		11.3.12 博客管理功能的实现 358<br />\n		11.3.13 博客主页的实现 374<br />\n		11.4 小结 383<br />\n		第12章 Hibernate的体系结构 384<br />\n		12.1 Hibernate的体系结构 384<br />\n		12.1.1 Hibernate在应用程序中的位置 384<br />\n		12.1.2 Hibernate的体系结构 385<br />\n		12.2 Hibernate实体对象的生命周期 387<br />\n		12.2.1 Transient（瞬态） 387<br />\n		12.2.2 Persistent（持久态） 388<br />\n		12.2.3 Detached（游离态） 389<br />\n		12.2.4 实体对象的状态转换 390<br />\n		12.3 Hibernate API简介 397<br />\n		12.3.1 Configuration类 397<br />\n		12.3.2 SessionFactory接口 398<br />\n		12.3.3 Session接口 398<br />\n		12.3.4 Transaction接口 403<br />\n		12.3.5 Query接口 404<br />\n		12.3.6 Criteria接口 414<br />\n		12.4 小结 418<br />\n		第13章 Hibernate的映射技巧 419<br />\n		13.1 映射文件的配置 419<br />\n		13.1.1 [hibernate-mapping]的说明 419<br />\n		13.1.2 [class]元素 421<br />\n		13.1.3 [id]元素 424<br />\n		13.1.4 [property]元素 426<br />\n		13.2 集合类的映射 428<br />\n		13.2.1 Java的集合类 428<br />\n		13.2.2 集合类的映射 432<br />\n		13.3 实体对象关联关系的映射 436<br />\n		13.3.1 一对一关联关系的映射 437<br />\n		13.3.2 一对多关联关系的映射 440<br />\n		13.3.3 多对一关联关系的映射 441<br />\n		13.3.4 多对多关联关系的映射 442<br />\n		13.4 实体对象继承的映射 444<br />\n		13.4.1 每个具体类一张表 444<br />\n		13.4.2 每个类分层结构一张表 447<br />\n		13.4.3 每个子类一张表 448<br />\n		13.4.4 对象继承的映射方法总结 450<br />\n		13.5 映射中的inverse和cascade 450<br />\n		13.5.1 inverse属性 451<br />\n		13.5.2 cascade属性 454<br />\n		13.5.3 inverse与cascade的区别 455<br />\n		13.6 小结 455<br />\n		第14章 Hibernate事务处理、缓存以及性能优化 456<br />\n		14.1 Hibernate的事务处理 456<br />\n		14.1.1 事务的基本概念 456<br />\n		14.1.2 数据库的隔离级别 457<br />\n		14.1.3 Hibernate中的事务处理 458<br />\n		14.1.4 并发控制 459<br />\n		14.2 Hibernate缓存 467<br />\n		14.2.1 什么是缓存 467<br />\n		14.2.2 一级缓存 468<br />\n		14.2.3 二级缓存 468<br />\n		14.2.4 Hibernate查询方法与缓存的关系 477<br />\n		14.3 Hibernate的性能优化 478<br />\n		14.3.1 设计阶段的考虑问题 478<br />\n		14.3.2 批量插入、更新和删除 479<br />\n		14.3.3 提升数据库查询的性能 480<br />\n		14.4 小结 484<br />\n		第15章 Spring简介 485<br />\n		15.1 Spring简介 485<br />\n		15.2 控制反转（Inversion of Control） 487<br />\n		15.3 依赖注入 488<br />\n		15.4 面向切面的编程 489<br />\n		15.5 Spring框架简介 491<br />\n		15.6 获得Spring 492<br />\n		15.7 小结 492<br />\n		第16章 Spring的核心技术 493<br />\n		16.1 IoC容器 493<br />\n		16.1.1 IoC容器和Bean 494<br />\n		16.1.2 Bean的基本配置 499<br />\n		16.1.3 Bean的其他特性 521<br />\n		16.2 资源 526<br />\n		16.2.1 Resource接口 527<br />\n		16.2.2 Resource的实现 527<br />\n		16.2.3 ResourceLoader接口 528<br />\n		16.2.4 资源小结 529<br />\n		16.3 数据绑定功能 529<br />\n		16.3.1 BeanWrapper类 529<br />\n		16.3.2 PropertyEditor 533<br />\n		16.3.3 实现自定义的PropertyEditor 534<br />\n		16.3.4 数据绑定功能小结 538<br />\n		16.4 面向切面的编程 538<br />\n		16.4.1 AOP的思想和本质 538<br />\n		16.4.2 AOP的基本概念 539<br />\n		16.4.3 Spring AOP的功能 540<br />\n		16.4.4 基于配置的AOP 541<br />\n		16.4.5 基于@AspectJ的AOP 548<br />\n		16.5 小结 555<br />\n		第17章 基于Struts的数据访问 556<br />\n		17.1 事务管理 556<br />\n		17.1.1 事务管理的框架 556<br />\n		17.1.2 声明式事务管理 558<br />\n		17.1.3 注解式事务管理 560<br />\n		17.2 使用JDBC访问数据库 561<br />\n		17.2.1 Spring JDBC简介 562<br />\n		17.2.2 Spring JDBC核心包的使用 562<br />\n		17.2.3 Spring JDBC数据源包 569<br />\n		17.2.4 Spring JDBC对象包 570<br />\n		17.2.5 Spring JDBC支持包 570<br />\n		17.3 使用Hibernate访问数据库 572<br />\n		17.3.1 Hibernate数据库访问流程 572<br />\n		17.3.2 利用Spring的IoC容器创建SessionFactory 573<br />\n		17.3.3 DAO的开发 575<br />\n		17.3.4 Hibernate的事务管理 578<br />\n		17.3.5 OpenSessionInView模式 579<br />\n		17.4 小结 580<br />\n		第18章 Spring MVC入门 581<br />\n		18.1 简介 581<br />\n		18.2 准备工作 581<br />\n		18.2.1 初始化项目 581<br />\n		18.2.2 编写Ant构建文件 582<br />\n		18.3 使用Spring的MVC 589<br />\n		18.3.1 Spring MVC简介 589<br />\n		18.3.2 配置DispatcherServlet 590<br />\n		18.3.3 创建自己的控制器 591<br />\n		18.3.4 页面视图的实现 592<br />\n		18.3.5 配置控制器的映射 593<br />\n		18.3.6 增加业务逻辑 596<br />\n		18.3.7 增加前台提交数据的处理功能 603<br />\n		18.3.8 数据保存功能的实现 618<br />\n		18.4 小结 625<br />\n		第19章 Spring的Web集成 626<br />\n		19.1 视图集成技术 626<br />\n		19.1.1 视图和视图解析器 626<br />\n		19.1.2 集成前的准备工作 627<br />\n		19.1.3 JSP和JSTL的使用 629<br />\n		19.1.4 XSLT的使用 630<br />\n		19.1.5 PDF的输出 632<br />\n		19.1.6 Excel文件的输出 634<br />\n		19.1.7 视图集成技术小结 636<br />\n		19.2 Web框架集成技术 636<br />\n		19.2.1 通用配置 636<br />\n		19.2.2 Struts集成 637<br />\n		19.3 小结 639<br />\n		第20章 使用Struts+Spring+Hibernate架构开发订货系统 640<br />\n		20.1 Web应用的体系结构 641<br />\n		20.1.1 表示层 641<br />\n		20.1.2 持久层 642<br />\n		20.1.3 业务层 642<br />\n		20.1.4 域模型层 643<br />\n		20.2 项目初始化 643<br />\n		20.3 开发订货系统 644<br />\n		20.3.1 域模型层的配置 645<br />\n		20.3.2 持久层的配置 647<br />\n		20.3.3 业务层的开发和配置 648<br />\n		20.3.4 编写服务Locator类 659<br />\n		20.3.5 UI层（表示层）实现 659<br />\n		20.4 小结 676</p>\n</blockquote>\n', '本书以Struts，Hibernate，Spring为核心详细地讲解了这三个组件的基础知识和基本使用方法，并通过一系列集成开发实例讲解了这三个组件在J2EE项目中的应用。\n本书对每一个组件的讲解都是以入门级实例开始的，然后对组件的架构以及各方面的功能进行了深入的探讨。这样安排的好处是使读者在具备了初步知识的基础上对组件进行更深入的理解，并通过一系列贴近实际的实例来提高读者对组件的把握能力以及迅速丰富开发经验。', 1284652800000, '1.0', '陈天河', '', '电子工业出版社', '', '本站下载-http://story.ajava.org/hibernate/struts-spring-hibernate-development-zh-pdf.zip', '44M', '所有系统', 'CC3', '中文', 1284722022283, 1284722429002, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b151467012b1f7416ad004d', '000000002b0bf62e012b0bfbf7b80002', '《深入浅出Hibernate》PDF下载', '国内第一本重量级Hibernate图书', NULL, '<blockquote>\n	<p>\n		本书为PDF扫描版本。如果您想购买此书，可到<a href="http://www.china-pub.com/24500">http://www.china-pub.com/24500</a></p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook20001-25000/24500/shupi.jpg" style="width: 320px; height: 400px;" /></p>\n<p>\n	本书由互联网上影响广泛的开放文档OpenDoc系列自由文献首份文档&ldquo;Hibernate开发指南&rdquo;发展而来。在编写过程中，进行了重新构思与组织，同 时对内容的深度与广度进行了重点强化。</p>\n<p>\n	本书从持久层入手，引出对象/关系数据库映射的由来，接下来聚焦于目前最完善、最强悍的ORM产品&mdash;&mdash; Hibernate。从一个基础程序入手，讲述Hibernate的基本语法与配置，慢慢升高到缓存、延迟加载等高级特性。</p>\n<p>\n	本书内容深入浅出，先讲述持久 层设计与ORM，再由Hibernate概述、Hibernate基础Hibernate高级特性顺序展开，直至Hibernate实战，重点讲述了 Hibernate的基础语法、基础配置、O/R映射、数据关联、数据检索、HQL实用技术、自定义持久化实现、Hibernate回调与拦截、 Hibernate分页等实用技术，Hibernate实战部分则用一个真实论坛的创建演示了Hibernate的强大功能。本书有丰富的附录部，在附录 中讲述了Hibernate常用的映射配置，Hibernate工具、XDoclet模板配置以及Hibernate的益友iBatis用法，还以卡片的 形式列出了本书中所用的工具及软件，附录最后一部分是&ldquo;快速启动代码&rdquo;，供读者对比与参考，也给初学者提供了一个快带起步的基础。</p>\n<p>\n	本书适合于Hibernate的各个阶层的读者。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第1部分 持久层<br />\n		第1章 面向应用的持久层设计 3<br />\n		1.1 持久层概述 4<br />\n		1.2 持久层设计 7<br />\n		1.2.1 持久层设计与解耦合 7<br />\n		1.2.2 持久层设计与资源管理模式 28<br />\n		1.3 持久层设计与ORM 42<br />\n		1.3.1 ORM概述 43<br />\n		1.3.2 持久层实现类型 44<br />\n		1.4 持久层框架概述 47<br />\n		1.4.1 主流持久层框架纵览 48<br />\n		第2部分 Hibernate<br />\n		第2章 Hibernate概述 53<br />\n		第3章 快速起步 57<br />\n		3.1 准备工作 58<br />\n		3.1.1 创建示例数据库 59<br />\n		3.1.2 构建Hibernate基础代码 59<br />\n		3.1.3 由数据库产生基础代码 61<br />\n		3.2 Hibernate配置 68<br />\n		3.3 日志配置 71<br />\n		.3.4 第一段代码 71<br />\n		3.5 代码初解 77<br />\n		第4章 Hibernate基础 79<br />\n		4.1 Hibernate基础语义 80<br />\n		4.1.1 Configuration 80<br />\n		4.1.2 SessionFactory 81<br />\n		4.1.3 Session 81<br />\n		4.2 基础配置 83<br />\n		4.2.1 SessionFactory配置 84<br />\n		4.2.2 事务管理 87<br />\n		4.3 Hibernate O/R映射 91<br />\n		4.3.1 Hibernate基本数据类型 91<br />\n		4.3.2 实体映射 93<br />\n		4.3.3 高级映射技术 103<br />\n		4.3.4 复合主键 111<br />\n		4.3.5 Blob、Clob字段的映射 116<br />\n		4.3.6 实体映射策略 126<br />\n		4.4 数据关联 146<br />\n		4.4.1 一对一关联 146<br />\n		4.4.2 一对多关联 153<br />\n		4.4.3 多对多关联 160<br />\n		4.5 Hibernate数据检索 164<br />\n		4.5.1 Criteria Query 164<br />\n		4.5.2 DetachedCriteria 170<br />\n		4.5.3 Hibernate Query Language (HQL) 173<br />\n		4.6 HQL实用技术 174<br />\n		4.6.1 实体查询 174<br />\n		4.6.2 属性查询 176<br />\n		4.6.3 实体更新与删除 178<br />\n		4.6.4 分组与排序 179<br />\n		4.6.5 参数绑定 180<br />\n		4.6.6 引用查询 183<br />\n		4.6.7 联合查询 184<br />\n		4.6.8 子查询 189<br />\n		4.6.9 数据加载方式 190<br />\n		4.6.10 SQL查询 194<br />\n		4.7 自定义持久化实现 197<br />\n		第5章 Hibernate高级特性 201<br />\n		5.1 Hibernate持久化实现 202<br />\n		5.1.1 实体对象生命周期 202<br />\n		5.1.2 实体对象识别 208<br />\n		5.1.3 数据缓存 222<br />\n		5.1.4 Hibernate数据缓存 225<br />\n		5.1.5 事务管理 231<br />\n		5.1.6 持久层操作 245<br />\n		5.1.7 Collection 283<br />\n		5.1.8 结果集排序 289<br />\n		5.2 Hibernate回调与拦截机制 292<br />\n		5.2.1 Lifecyle与Validatable 292<br />\n		5.2.2 Interceptor 294<br />\n		5.2.3 Interceptor典型应用 296<br />\n		5.3 Hibernate实用技术 300<br />\n		5.3.1 Hibernate分页 300<br />\n		5.3.2 Session管理 302<br />\n		5.3.3 Hibernate与Spring Framework 306<br />\n		5.3.4 Hibernate性能优化 312<br />\n		第6章 Hibernate 实战&mdash;&mdash;创建RedSaga论坛 321<br />\n		6.1 目标 322<br />\n		6.1.1 成品预览 325<br />\n		6.2 E-R建模还是对象建模 326<br />\n		6.3 E-R建模及工具集 330<br />\n		6.3.1 Middlegen 331<br />\n		6.3.2 Hibernate Synchronizer 339<br />\n		6.4 对象建模 345<br />\n		6.5 项目的目录组织和基础设施 345<br />\n		6.5.1 目录结构 345<br />\n		6.5.2 build 系统 347<br />\n		6.5.3 Hibernate Console基础工具 347<br />\n		6.5.4 Tomcat 装载器 350<br />\n		6.5.5 对映射关系的审视 350<br />\n		6.5.6 类继承树 351<br />\n		6.6 测试优先 352<br />\n		6.6.1 开发团队的内部契约与为什么需要测试 353<br />\n		6.6.2 第一个测试 354<br />\n		6.6.3 对第一个测试的分析 358<br />\n		6.6.4 快速实现测试接口 360<br />\n		6.7 容器，session与事务 362<br />\n		6.8 HibernateException，Checked 366<br />\n		6.9 Template/Callback 简化业务方法 374<br />\n		6.10 版面：一棵自身循环的树 377<br />\n		6.11 版面与帖子：Master/Detail 主从关系 381<br />\n		6.12 帖子树及其分页 385<br />\n		6.13 与Web层交互 394<br />\n		6.14 帖子的多形扩展：投票 400<br />\n		6.15 移植到Hibernate 3 405<br />\n		6.16 结束语： 408<br />\n		第3部分 附 录<br />\n		第7章 常用Hibernate映射配置说明 411<br />\n		7.1 hibernate-mapping节点 411<br />\n		7.2 class节点定义 413<br />\n		7.3 id节点定义 415<br />\n		7.4 属性/字段映射配置 419<br />\n		第8章 Hibernate工具 427<br />\n		8.1 准备工作 429<br />\n		8.2 根据数据库定义生成映射文件&mdash;&mdash;MiddleGen 430<br />\n		8.2.1 运行MiddleGen 432<br />\n		8.2.2 修改表的映射属性 435<br />\n		8.2.3 修改表字段的映射属性 437<br />\n		8.2.4 修改表关联关系的映射属性 439<br />\n		8.3 Hibernate官方工具 443<br />\n		8.3.1 根据HBM映射文件生成POJO－hbm2java 444<br />\n		8.3.2 根据HBM映射文件生成数据库脚本&mdash;&mdash;Hibernate SchemaExport 446<br />\n		8.3.3 Hibernate-Extentions控制台 447<br />\n		8.4 XDoclet-同步Hibernate基础代码 453<br />\n		8.4.1 运行Hibernate-Doclet 455<br />\n		8.4.2 常用Hibernate-Doclet Tag介绍 456<br />\n		8.5 工具的使用周期 461<br />\n		第9章 Hibernate XDoclet模板配置 463<br />\n		9.1 IDEA 463<br />\n		9.2 Eclipse 464<br />\n		第10章 Hibernate益友&mdash;&mdash;iBatis 467<br />\n		10.1 Ibatis 概述 467<br />\n		10.2 快速起步 4699<br />\n		10.2.1 准备工作 469<br />\n		10.2.2 构建iBatis基础代码 469<br />\n		10.3 IBatis 基础 474<br />\n		10.3.1 iBatis配置 474<br />\n		10.3.2 iBatis基础组件 480<br />\n		10.4 iBatis高级特性 491<br />\n		10.4.1 数据关联 491<br />\n		10.4.2 延迟加载 495<br />\n		10.4.3 动态映射 496<br />\n		10.4.4 事务管理 500<br />\n		10.5 IBatis周边 512<br />\n		10.5.1 iBatis in Spring 512<br />\n		第11章 工具卡片和软件 519<br />\n		11.1 工具卡片 519<br />\n		11.2 Eclipse安装和基本使用方法 524<br />\n		11.2.1 Eclipse安装 524<br />\n		11.2.2 新建项目 526<br />\n		11.2.3 在Eclipse项目中加载jar包 527<br />\n		11.2.4 在Eclipse中运行Ant任务 528<br />\n		11.2.5 运行JUnit的TestCase 530<br />\n		11.3 快速启动代码 532<br />\n		参 考 资 料 547</p>\n</blockquote>', '本书由互联网上影响广泛的开放文档OpenDoc系列自由文献首份文档“Hibernate开发指南”发展而来。在编写过程中，进行了重新构思与组织，同时对内容的深度与广度进行了重点强化。\n本书从持久层入手，引出对象/关系数据库映射的由来，接下来聚焦于目前最完善、最强悍的ORM产品—— Hibernate。从一个基础程序入手，讲述Hibernate的基本语法与配置，慢慢升高到缓存、延迟加载等高级特性。本书内容深入浅出，先讲述持久层设计与ORM，再由Hibernate概述、Hibernate基础Hibernate高级特性顺序展开，直至Hibernate实战，重点讲述了 Hibernate的基础语法、基础配置、O/R映射、数据关联、数据检索、HQL实用技术、自定义持久化实现、Hibernate回调与拦截、 Hibernate分页等实用技术，Hibernate实战部分则用一个真实论坛的创建演示了Hibernate的强大功能。', 1284652800000, '1.0', '夏昕 曹晓钢 唐勇', '', '电子工业出版社', '', '本站下载-http://story.ajava.org/hibernate/step-by-step-hibernate-zh-pdf.zip', '24M', '所有系统', 'CC3', '中文', 1284722923181, 1286090365648, 'admin'),
('000000002b151467012b1f7cf4200051', '000000002b0bf62e012b0bfbf7b80002', '《轻量级J2EE企业应用实战》PDF下载', 'Struts+Spring+Hibernate整合开发', NULL, '<blockquote>\n	<p>\n		本书为PDF扫描版本。如果您想购买此书，可到<a href="http://www.china-pub.com/34665">http://www.china-pub.com/34665</a></p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook30001-35000/34665/shupi.jpg" style="width: 385px; height: 550px;" /></p>\n<p>\n	本书所介绍的内容是作者多年J2EE开发经验的总结，内容涉及三个开源框架：Struts、Hibernate和Spring，还介绍了Tomcat和Jetty两个开源Web服务器的详细用法，以及J2EE应用的几种常用架构。</p>\n<p>\n	本书不仅仅是一本J2EE入门图书，还详尽而细致地介绍了JSP各个方面，包括JSP 2.0的规范、Struts的各种用法、Hibernate的详细用法，以及Spring的基本用法。书中所介绍的轻量级J2EE应用，是目前最流行、最 规范的J2EE架构，分层极为清晰，各层之间以松耦合的方法组织在一起。书的最后配备了两个实例，均采用了贫血模式的架构设计，以便于读者更快地进入 J2EE应用开发。而第8章所介绍的其他架构模式则可作为读者对架构有更好把握后的提高部分。本书配套光盘包括各章内容所用的代码，以及整个应用所需要的 开源类库等相关项目文件。</p>\n<p>\n	本书适用于有较好的Java编程基础，有初步的J2EE编程基础的读者。本书既可以作为J2EE初学者的入门书籍，也可作为J2EE应用开发者的提高指导。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第1章 J2EE应用运行及开发环境的安装与配置<br />\n		　1.1 JDK的下载和安装<br />\n		　1.2 Tomcat的下载和安装<br />\n		　1.3 Jetty的下载和安装<br />\n		　1.4 Eclipse的安装和使用<br />\n		　本章小结<br />\n		第2章 传统表现JSP<br />\n		　2.1 JSP的技术原理<br />\n		　2.2 JSP注释<br />\n		　2.3 JSP声明<br />\n		　2.4 JSP表达式<br />\n		　2.5 JSP脚本<br />\n		　2.6 JSP的三个编译指令<br />\n		　2.7 JSP的7个动作指令<br />\n		　2.8 JSP的9个内置对象<br />\n		　2.9 Servlet介绍<br />\n		　2.10 自定义标签库<br />\n		　2.11 Filter介绍<br />\n		　2.12 Listener介绍<br />\n		　2.13 JSP2.0的新特性<br />\n		.　本章小结<br />\n		第3章 经典MVC框架Struts<br />\n		　3.1 MVC简介<br />\n		　3.2 Struts概述<br />\n		　3.3 Struts的下载和安装<br />\n		　3.4 Struts入门<br />\n		　3.5 Struts的配置<br />\n		　3.6 Struts程序的国际化<br />\n		　3.7 使用动态Action Form<br />\n		　3.8 Struts的标签库<br />\n		　3.9 Struts的数据校验<br />\n		　3.10 Struts的异常框架<br />\n		　3.11 几种常用的Action<br />\n		　3.12 Struts的常见扩展方法<br />\n		　本章小结<br />\n		第4章 使用Hibernate完成持久化<br />\n		第5章 Spring介绍<br />\n		第6章 Spring与Hibernate的整合<br />\n		第7章 Spring与Struts的整合<br />\n		第8章 企业应用开发的思考与策略<br />\n		第9章 完整实例：消息发布系统<br />\n		第10章 完整应用：简单工作流系统</p>\n</blockquote>\n', '本书所介绍的内容是作者多年J2EE开发经验的总结，内容涉及三个开源框架：Struts、Hibernate和Spring，还介绍了Tomcat和Jetty两个开源Web服务器的详细用法，以及J2EE应用的几种常用架构。\n本书不仅仅是一本J2EE入门图书，还详尽而细致地介绍了JSP各个方面，包括JSP 2.0的规范、Struts的各种用法、Hibernate的详细用法，以及Spring的基本用法。书中所介绍的轻量级J2EE应用，是目前最流行、最规范的J2EE架构，分层极为清晰，各层之间以松耦合的方法组织在一起。书的最后配备了两个实例，均采用了贫血模式的架构设计，以便于读者更快地进入 J2EE应用开发。而第8章所介绍的其他架构模式则可作为读者对架构有更好把握后的提高部分。本书配套光盘包括各章内容所用的代码，以及整个应用所需要的开源类库等相关项目文件。', 1284652800000, '1.0', '李刚', '', '电子工业出版社', '', '本站下载-http://story.ajava.org/hibernate/light-j2ee-struts-spring-hibernate-development-zh-pdf.zip', '21M', '所有系统', 'CC3', '中文', 1284723504160, 1284723527113, 'admin'),
('000000002b151467012b1f8266620059', '000000002b0bf62e012b0bfbf7b80002', '《精通Hibernate》PDF下载', 'Java对象持久化技术详解', NULL, '<blockquote>\n	<p>\n		本书为PDF扫描版本。如果您想购买此书，可到<a href="http://www.china-pub.com/24485">http://www.china-pub.com/24485</a></p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook20001-25000/24485/shupi.jpg" style="width: 282px; height: 400px;" /></p>\n<p>\n	如果说书的结构好比房屋的框架，书的内容则好比房屋的具体组成元素。计算机书的内容的形式分为：文字、 表格、图和范例。为了把某种知识讲清楚，常常需要综合使用这四种形式的元素...</p>\n<p>\n	Hibernate是一个基于Java的开放源代码的持久化中间件，它对JDBC作了轻量级封装，不仅提供ORM映射服务，还提供数据查询和数据缓存功能，Java开发人员可以方便的通过Hibernate API来操纵数据库。</p>\n<p>\n	现在，越来越多的Java开发人员把Hibernate作为企业应用和关系数据库之间的中间件，以节省和对象持久化有关的30%的JDBC编程工作量。 2005年，Hibernate作为优秀的类库和组件，荣获了第15届Jolt大奖。Hibernate之所以能够流行，归功于它特有的优势。</p>\n<p>\n	本书结合大量典型的实例，详细介绍了运用目前最成熟的Hibernate2.1版本进行Java对象持久化的技术。Hibernate是连接Java 对象模型和关系数据模型的桥梁，通过本书，读者不仅能掌握用Hibernate工具对这两种模型进行映射的技术，还能获得设计与开发Java对象模型和关 系数据模型的先进经验。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第1章 Java对象持久化技术概述 1<br />\n		1.1 应用程序的分层体系结构 1<br />\n		1.1.1 区分物理层和逻辑层 2<br />\n		1.1.2 软件层的特征 3<br />\n		1.1.3 软件分层的优点 4<br />\n		1.1.4 软件分层的缺点 4<br />\n		1.1.5 Java应用的持久化层 5<br />\n		1.2 软件的模型 6<br />\n		1.2.1 概念模型 7<br />\n		1.2.2 关系数据模型 8<br />\n		1.2.3 域模型 10<br />\n		1.2.4 域对象 10<br />\n		1.2.5 域对象之间的关系 11<br />\n		1.2.6 域对象的持久化概念 16<br />\n		1.3 直接通过JDBC API来持久<br />\n		化实体域对象 17<br />\n		1.4 ORM简介 25<br />\n		1.4.1 对象-关系映射的概念 27<br />\n		1.4.2 ORM中间件的基本<br />\n		使用方法 29<br />\n		.1.4.3 常用的ORM中间件 32<br />\n		1.5 实体域对象的其他持久化<br />\n		模式 32<br />\n		1.5.1 主动域对象模式 33<br />\n		1.5.2 JDO模式 35<br />\n		1.5.3 CMP模式 35<br />\n		1.6 Hibernate API简介 36<br />\n		1.6.1 Hibernate的核心接口 37<br />\n		1.6.2 回调接口 39<br />\n		1.6.3 Hibernate映射类型接口 40<br />\n		1.6.4 可供扩展的接口 41<br />\n		1.7 小结 42<br />\n		第2章 Hibernate入门 45<br />\n		2.1 创建Hibernate的配置文件 46<br />\n		2.2 创建持久化类 47<br />\n		2.3 创建数据库Schema 49<br />\n		2.4 创建对象-关系映射文件 50<br />\n		2.4.1 映射文件的文档类型<br />\n		定义（DTD） 51<br />\n		2.4.2 把Customer持久化类映射<br />\n		到CUSTOMERS表 52<br />\n		2.5 通过HibernateAPI操纵<br />\n		数据库 56<br />\n		2.5.1 Hibernate的初始化 59<br />\n		2.5.2 访问Hibernate的<br />\n		Session接口 61<br />\n		2.6 运行helloapp应用 65<br />\n		2.6.1 创建运行本书范例的<br />\n		系统环境 65<br />\n		2.6.2 创建helloapp应用的<br />\n		目录结构 69<br />\n		2.6.3 把helloapp应用作为<br />\n		独立应用程序运行 70<br />\n		2.6.4 把helloapp应用作为<br />\n		Java Web应用运行 74<br />\n		2.7 小结 76<br />\n		第3章 hbm2java和hbm2ddl工具 79<br />\n		3.1 创建对象-关系映射文件 79<br />\n		3.1.1 定制持久化类 81<br />\n		3.1.2 定制数据库表 84<br />\n		3.2 建立项目的目录结构 87<br />\n		3.3 运行hbm2java工具 90<br />\n		3.4 运行hbm2ddl工具 92<br />\n		3.5 小结 95<br />\n		第4章 对象-关系映射基础 97<br />\n		4.1 持久化类的属性及访问<br />\n		方法 97<br />\n		4.1.1 基本类型属性和包装<br />\n		类型属性 98<br />\n		4.1.2 Hibernate访问持久化类<br />\n		属性的策略 100<br />\n		2.4 创建对象-关系映射文件 50<br />\n		2.4.1 映射文件的文档类型<br />\n		定义（DTD） 51<br />\n		2.4.2 把Customer持久化类映射<br />\n		到CUSTOMERS表 52<br />\n		2.5 通过HibernateAPI操纵<br />\n		数据库 56<br />\n		2.5.1 Hibernate的初始化 59<br />\n		2.5.2 访问Hibernate的<br />\n		Session接口 61<br />\n		2.6 运行helloapp应用 65<br />\n		2.6.1 创建运行本书范例的<br />\n		系统环境 65<br />\n		2.6.2 创建helloapp应用的<br />\n		目录结构 69<br />\n		2.6.3 把helloapp应用作为<br />\n		独立应用程序运行 70<br />\n		2.6.4 把helloapp应用作为<br />\n		Java Web应用运行 74<br />\n		2.7 小结 76<br />\n		第3章 hbm2java和hbm2ddl工具 79<br />\n		3.1 创建对象-关系映射文件 79<br />\n		3.1.1 定制持久化类 81<br />\n		3.1.2 定制数据库表 84<br />\n		3.2 建立项目的目录结构 87<br />\n		3.3 运行hbm2java工具 90<br />\n		3.4 运行hbm2ddl工具 92<br />\n		3.5 小结 95<br />\n		第4章 对象-关系映射基础 97<br />\n		4.1 持久化类的属性及访问<br />\n		方法 97<br />\n		4.1.1 基本类型属性和包装<br />\n		类型属性 98<br />\n		4.1.2 Hibernate访问持久化类<br />\n		属性的策略 100<br />\n		<br />\n		2.4 创建对象-关系映射文件 50<br />\n		2.4.1 映射文件的文档类型<br />\n		定义（DTD） 51<br />\n		2.4.2 把Customer持久化类映射<br />\n		到CUSTOMERS表 52<br />\n		2.5 通过HibernateAPI操纵<br />\n		数据库 56<br />\n		2.5.1 Hibernate的初始化 59<br />\n		2.5.2 访问Hibernate的<br />\n		Session接口 61<br />\n		2.6 运行helloapp应用 65<br />\n		2.6.1 创建运行本书范例的<br />\n		系统环境 65<br />\n		2.6.2 创建helloapp应用的<br />\n		目录结构 69<br />\n		2.6.3 把helloapp应用作为<br />\n		独立应用程序运行 70<br />\n		2.6.4 把helloapp应用作为<br />\n		Java Web应用运行 74<br />\n		2.7 小结 76<br />\n		第3章 hbm2java和hbm2ddl工具 79<br />\n		3.1 创建对象-关系映射文件 79<br />\n		3.1.1 定制持久化类 81<br />\n		3.1.2 定制数据库表 84<br />\n		3.2 建立项目的目录结构 87<br />\n		3.3 运行hbm2java工具 90<br />\n		3.4 运行hbm2ddl工具 92<br />\n		3.5 小结 95<br />\n		第4章 对象-关系映射基础 97<br />\n		4.1 持久化类的属性及访问<br />\n		方法 97<br />\n		4.1.1 基本类型属性和包装<br />\n		类型属性 98<br />\n		4.1.2 Hibernate访问持久化类<br />\n		属性的策略 100<br />\n		4.1.3 在持久化类的访问方法中<br />\n		加入程序逻辑 100<br />\n		4.1.4 设置派生属性 103<br />\n		4.1.5 控制insert和update<br />\n		语句 104<br />\n		4.2 处理SQL引用标识符 105<br />\n		4.3 创建命名策略 106<br />\n		4.4 设置命名Schema 108<br />\n		4.5 设置类的包名 109<br />\n		4.6 运行本章的范例程序 110<br />\n		4.7 小结 117<br />\n		第5章 映射对象标识符 119<br />\n		5.1 关系数据库按主键区分<br />\n		不同的记录 119<br />\n		5.1.1 把主键定义为自动增长<br />\n		标识符类型 119<br />\n		5.1.2 从序列（Sequence）中获取<br />\n		自动增长的标识符 120<br />\n		5.2 Java语言按内存地址区分<br />\n		不同的对象 121<br />\n		5.3 Hibernate用对象标识符<br />\n		（OID）来区分对象 122<br />\n		5.4 Hibernate的内置标识符<br />\n		生成器的用法 124<br />\n		5.4.1 increment标识符生成器 127<br />\n		5.4.2 identity标识符生成器 130<br />\n		5.4.3 sequence标识符生成器 131<br />\n		5.4.4 hilo标识符生成器 132<br />\n		5.4.5 native标识符生成器 134<br />\n		5.5 映射自然主键 135<br />\n		5.5.1 映射单个自然主键 135<br />\n		5.5.2 映射复合自然主键 136<br />\n		5.6 小结 140<br />\n		第6章 映射一对多关联关系 141<br />\n		6.1 建立多对一的单向<br />\n		关联关系 142<br />\n		6.1.1 [many-to-one]元素的<br />\n		not-null属性 147<br />\n		6.1.2 级联保存和更新 149<br />\n		6.2 映射一对多双向关联关系 150<br />\n		6.2.1 [set]元素的inverse<br />\n		属性 155<br />\n		6.2.2 级联删除 158<br />\n		6.2.3 父子关系 158<br />\n		6.3 映射一对多双向自身<br />\n		关联关系 160<br />\n		6.4 改进持久化类 166<br />\n		6.5 小结 171<br />\n		第7章 操纵持久化对象 173<br />\n		7.1 Java对象在JVM中的<br />\n		生命周期 173<br />\n		7.2 理解Session的缓存 175<br />\n		7.3 在Hibernate应用中Java<br />\n		对象的状态 178<br />\n		7.3.1 临时对象的特征 179<br />\n		7.3.2 持久化对象的特征 180<br />\n		7.3.3 游离对象的特征 181<br />\n		7.4 Session的保存、更新、<br />\n		删除和查询方法 182<br />\n		7.4.1 Session的save()方法 182<br />\n		7.4.2 Session的update()方法 184<br />\n		7.4.3 Session的saveOrUpdate()<br />\n		方法 187<br />\n		7.4.4 Session的load()和get()<br />\n		方法 188<br />\n		7.4.5 Session的delete()方法 188<br />\n		7.5 级联操纵对象图 189<br />\n		7.5.1 级联保存临时对象 193<br />\n		7.5.2 更新持久化对象 194<br />\n		7.5.3 持久化临时对象 194<br />\n		7.5.4 更新游离对象 196<br />\n		7.5.5 遍历对象图 197<br />\n		7.6 与触发器协同工作 198<br />\n		7.7 利用拦截器（Interceptor）<br />\n		生成审计日志 200<br />\n		7.8 小结 207<br />\n		第8章 映射组成关系 209<br />\n		8.1 建立精粒度对象模型 210<br />\n		8.2 建立粗粒度关系数据模型 211<br />\n		8.3 映射组成关系 212<br />\n		8.3.1 区分值（Value）类型和<br />\n		实体（Entity）类型 215<br />\n		8.3.2 在应用程序中访问具有<br />\n		组成关系的持久化类 216<br />\n		8.4 映射复合组成关系 220<br />\n		8.5 小结 222<br />\n		第9章 Hibernate的映射类型 223<br />\n		9.1 Hibernate的内置映射类型 223<br />\n		9.1.1 Java基本类型的Hibernate<br />\n		映射类型 223<br />\n		9.1.2 Java时间和日期类型的<br />\n		Hibernate映射类型 224<br />\n		9.1.3 Java大对象类型的Hibernate映射类型 225<br />\n		9.1.4 JDK自带的个别Java类的<br />\n		Hibernate映射类型 226<br />\n		9.1.5 使用Hibernate内置映射<br />\n		类型 227<br />\n		9.2 客户化映射类型 229<br />\n		9.2.1 用客户化映射类型取代<br />\n		Hibernate组件 232<br />\n		9.2.2 用UserType映射枚举<br />\n		类型 235<br />\n		9.2.3 实现CompositeUserType<br />\n		接口 239<br />\n		9.3 运行本章范例程序 243<br />\n		9.4 小结 253<br />\n		第10章 Hibernate的检索策略 255<br />\n		10.1 Hibernate的检索策略<br />\n		简介 256<br />\n		10.2 类级别的检索策略 259<br />\n		10.2.1 立即检索 260<br />\n		10.2.2 延迟检索 260<br />\n		10.3 一对多和多对多关联的<br />\n		检索策略 263<br />\n		10.3.1 立即检索 264<br />\n		10.3.2 延迟检索 264<br />\n		10.3.3 批量延迟检索和<br />\n		批量立即检索 265<br />\n		10.3.4 迫切左外连接检索 267<br />\n		10.4 多对一和一对一关联的<br />\n		检索策略 268<br />\n		10.4.1 迫切左外连接检索 269<br />\n		10.4.2 延迟检索 271<br />\n		10.4.3 立即检索 272<br />\n		10.4.4 批量延迟检索和<br />\n		批量立即检索 273<br />\n		10.5 Hibernate对迫切左外<br />\n		连接检索的限制 277<br />\n		10.6 在应用程序中显式指定迫切<br />\n		左外连接检索策略 279<br />\n		10.7 小结 279<br />\n		第11章 Hibernate的检索方式 281<br />\n		11.1 Hibernate的检索方式<br />\n		简介 281<br />\n		11.1.1 HQL检索方式 284<br />\n		11.1.2 QBC检索方式 285<br />\n		11.1.3 SQL检索方式 288<br />\n		11.1.4 关于本章范例程序 288<br />\n		11.1.5 使用别名 289<br />\n		11.1.6 多态查询 290<br />\n		11.1.7 对查询结果排序 291<br />\n		11.1.8 分页查询 291<br />\n		11.1.9 检索单个对象 293<br />\n		11.1.10 在HQL查询语句中<br />\n		绑定参数 294<br />\n		11.1.11 在映射文件中定义<br />\n		命名查询语句 298<br />\n		11.2 设定查询条件 299<br />\n		11.2.1 比较运算 300<br />\n		11.2.2 范围运算 301<br />\n		11.2.3 字符串模式匹配 302<br />\n		11.2.4 逻辑运算 303<br />\n		11.3 连接查询 304<br />\n		11.3.1 默认情况下关联级别的<br />\n		运行时检索策略 305<br />\n		11.3.2 迫切左外连接 306<br />\n		11.3.3 左外连接 309<br />\n		11.3.4 内连接 313<br />\n		11.3.5 迫切内连接 317<br />\n		11.3.6 隐式内连接 319<br />\n		11.3.7 右外连接 320<br />\n		11.3.8 使用SQL风格的交叉<br />\n		连接和隐式内连接 322<br />\n		11.3.9 关联级别运行时的<br />\n		检索策略 323<br />\n		11.4 报表查询 325<br />\n		11.4.1 投影查询 325<br />\n		11.4.2 使用聚集函数 328<br />\n		11.4.3 分组查询 329<br />\n		11.4.4 优化报表查询的性能 332<br />\n		11.5 高级查询技巧 332<br />\n		11.5.1 动态查询 332<br />\n		11.5.2 集合过滤 334<br />\n		11.5.3 子查询 337<br />\n		11.5.4 本地SQL查询 339<br />\n		11.6 查询性能优化 340<br />\n		11.6.1 iterate()方法 340<br />\n		11.6.2 查询缓存 341<br />\n		11.7 小结 342<br />\n		第12章 数据库事务与并发 345<br />\n		12.1 数据库事务的概念 345<br />\n		12.2 声明事务边界 346<br />\n		12.2.1 在mysql.exe程序中<br />\n		声明事务 348<br />\n		12.2.2 通过JDBC API声明<br />\n		事务边界 350<br />\n		12.2.3 通过Hibernate API声明<br />\n		事务边界 351<br />\n		12.3 多个事务并发运行时的<br />\n		并发问题 355<br />\n		12.3.1 第一类丢失更新 357<br />\n		12.3.2 脏读 357<br />\n		12.3.3 虚读 358<br />\n		12.3.4 不可重复读 358<br />\n		12.3.5 第二类丢失更新 359<br />\n		12.4 数据库系统的锁的<br />\n		基本原理 360<br />\n		12.4.1 锁的多粒度性及<br />\n		自动锁升级 360<br />\n		12.4.2 锁的类型和兼容性 361<br />\n		12.4.3 死锁及其防止办法 362<br />\n		12.5 数据库的事务隔离级别 364<br />\n		12.5.1 在mysql.exe程序中<br />\n		设置隔离级别 366<br />\n		12.5.2 在应用程序中设置<br />\n		隔离级别 366<br />\n		12.6 在应用程序中采用<br />\n		悲观锁和乐观锁 366<br />\n		12.6.1 利用数据库系统的独占锁<br />\n		来实现悲观锁 367<br />\n		12.6.2 由应用程序实现<br />\n		悲观锁 373<br />\n		12.6.3 利用Hibernate的版本<br />\n		控制来实现乐观锁 374<br />\n		12.6.4 实现乐观锁的其他<br />\n		方法 380<br />\n		12.7 小结 381<br />\n		第13章 管理Hibernate的缓存 383<br />\n		13.1 缓存的基本原理 383<br />\n		13.1.1 持久化层的缓存的<br />\n		范围 384<br />\n		<br />\n		13.1.2 持久化层的缓存的<br />\n		并发访问策略 386<br />\n		13.2 Hibernate的二级<br />\n		缓存结构 388<br />\n		13.3 管理Hibernate的<br />\n		第一级缓存 389<br />\n		13.4 管理Hibernate的<br />\n		第二级缓存 393<br />\n		13.4.1 配置进程范围内的<br />\n		第二级缓存 394<br />\n		13.4.2 配置群集范围内的<br />\n		第二级缓存 398<br />\n		13.4.3 在应用程序中管理<br />\n		第二级缓存 401<br />\n		13.5 运行本章的范例程序 402<br />\n		13.6 小结 406<br />\n		第14章 映射继承关系 407<br />\n		14.1 继承关系树的每个具体<br />\n		类对应一个表 408<br />\n		14.1.1 创建映射文件 409<br />\n		14.1.2 操纵持久化对象 411<br />\n		14.2 继承关系树的根类<br />\n		对应一个表 414<br />\n		14.2.1 创建映射文件 415<br />\n		14.2.2 操纵持久化对象 417<br />\n		14.3 继承关系树的每个类<br />\n		对应一个表 418<br />\n		14.3.1 创建映射文件 419<br />\n		14.3.2 操纵持久化对象 421<br />\n		14.4 选择继承关系的映射<br />\n		方式 423<br />\n		14.5 映射多对一多态关联 428<br />\n		14.6 小结 430<br />\n		第15章 Java集合类 433<br />\n		15.1 Set（集） 434<br />\n		15.1.1 Set的一般用法 434<br />\n		15.1.2 HashSet类 435<br />\n		15.1.3 TreeSet类 437<br />\n		15.1.4 向Set中加入持久化类<br />\n		的对象 441<br />\n		15.2 List（列表） 442<br />\n		15.3 Map（映射） 444<br />\n		15.4 小结 448<br />\n		第16章 映射值类型集合 449<br />\n		16.1 映射Set（集） 449<br />\n		16.2 映射Bag（包） 453<br />\n		16.3 映射List（列表） 456<br />\n		16.4 映射Map 459<br />\n		16.5 对集合排序 462<br />\n		16.5.1 在数据库中对<br />\n		集合排序 462<br />\n		16.5.2 在内存中对集合排序 464<br />\n		16.6 映射组件类型集合 467<br />\n		16.7 小结 474<br />\n		第17章 映射实体关联关系 475<br />\n		17.1 映射一对一关联 475<br />\n		17.1.1 按照外键映射 476<br />\n		17.1.2 按照主键映射 480<br />\n		17.2 映射单向多对多关联 483<br />\n		17.3 映射双向多对多关联<br />\n		关系 488<br />\n		17.3.1 关联两端使用[set]<br />\n		元素 488<br />\n		17.3.2 在inverse端使用[bag]<br />\n		元素 490<br />\n		17.3.3 使用组件类集合 494<br />\n		17.3.4 把多对多关联分解为<br />\n		两个一对多关联 499<br />\n		17.4 小结 501<br />\n		第18章 Hibernate高级配置 503<br />\n		18.1 配置数据库连接池 503<br />\n		18.1.1 使用默认的数据库<br />\n		连接池 506<br />\n		18.1.2 使用配置文件指定的<br />\n		数据库连接池 507<br />\n		18.1.3 从容器中获得数据源 508<br />\n		18.1.4 由Java应用本身提供<br />\n		数据库连接 510<br />\n		18.2 配置事务类型 511<br />\n		18.3 把SessionFactory与<br />\n		JNDI绑定 512<br />\n		18.4 使用XML格式的<br />\n		配置文件 513<br />\n		18.5 小结 516<br />\n		第19章 Hibernate与Struts框架 517<br />\n		19.1 实现业务数据 519<br />\n		19.2 实现业务逻辑 522<br />\n		19.3 netstore应用的订单业务 534<br />\n		19.4 小结 538<br />\n		第20章 Hibernate与EJB组件 541<br />\n		20.1 创建EJB组件 541<br />\n		20.1.1 编写Remote接口 541<br />\n		20.1.2 编写Home接口 543<br />\n		20.1.3 编写Enterprise Java Bean<br />\n		类 543<br />\n		20.2 在业务代理类中访问<br />\n		EJB组件 546<br />\n		20.3 发布J2EE应用 551<br />\n		20.3.1 在JBoss-Tomcat上部署<br />\n		EJB组件 551<br />\n		20.3.2 在JBoss-Tomcat上部署<br />\n		Web应用 553<br />\n		20.3.3 在JBoss-Tomcat上部署<br />\n		J2EE应用 554<br />\n		20.4 小结 556<br />\n		附录A 标准SQL语言的用法 557<br />\n		A.1 数据完整性 558<br />\n		A.1.1 实体完整性 558<br />\n		A.1.2 域完整性 558<br />\n		A.1.3 参照完整性 558<br />\n		<br />\n		<br />\n		A.2 DDL数据定义语言 559<br />\n		A.3 DML数据操纵语言 561<br />\n		A.4 DQL数据查询语言 561<br />\n		A.4.1 简单查询 562<br />\n		A.4.2 连接查询 563<br />\n		A.4.3 子查询 565<br />\n		A.4.4 联合查询 566<br />\n		A.4.5 报表查询 566<br />\n		附录B Java语言的反射机制 569<br />\n		B.1 Java ReflectionAPI简介 569<br />\n		B.2 运用反射机制来持久化<br />\n		Java对象 572<br />\n		附录C 用XDoclet工具生成<br />\n		映射文件 581<br />\n		C.1 创建带有@hibernate<br />\n		标记的Java源文件 581<br />\n		C.2 建立项目的目录结构 586<br />\n		C.3 运行XDoclet工具 589<br />\n		附录D 发布和运行netstore应用 591<br />\n		D.1 运行netstore所需的软件 591<br />\n		D.2 netstore应用的目录结构 592<br />\n		D.3 安装SAMPLEDB数据库 593<br />\n		D.4 发布netstore应用 594<br />\n		D.4.1 在工作模式1下发布<br />\n		netstore应用 594<br />\n		D.4.2 在工作模式2下发布<br />\n		netstore应用 594<br />\n		D.5 运行netstore应用 595<br />\n		参考文献 599</p>\n</blockquote>', '本书结合大量典型的实例，详细介绍了运用目前最成熟的Hibernate2.1版本进行Java对象持久化的技术。Hibernate是连接Java对象模型和关系数据模型的桥梁，通过本书，读者不仅能掌握用Hibernate工具对这两种模型进行映射的技术，还能获得设计与开发Java对象模型和关系数据模型的先进经验。 ', 1284652800000, '1.0', '孙卫琴 ', '', '电子工业出版社', '', '本站下载-http://story.ajava.org/hibernate/master-hibernate-zh-pdf.zip', '15M', '所有系统', 'CC3', '中文', 1284723861090, 1286090341829, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b151467012b1f8f9de30061', '000000002b0bf62e012b0bfbf7b80002', '《Hibernate实战(第2版)》PDF下载', 'Hibernate之父亲自执笔', NULL, '<blockquote>\n	<p>\n		本书为英文版，适合有一定英文基础或熟练使用翻译工具的读者使用。如果您想购买此书的中文版，可到<a href="http://www.china-pub.com/39339">http://www.china-pub.com/39339</a></p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook35001-40000/39339/shupi.jpg" style="width: 437px; height: 550px;" /></p>\n<p>\n	本书全面讲述了Hibernate和Java Persistence，并对两者进行了详细的对比分析。书中通过一个应用将数百个例子融合起来，不仅深入剖析了Hibernate 3.2和Java Persistence丰富的编程模型，还深刻阐述了数据库设计、对象/关系映射（ORM）和优化等方面的基本原则、策略和最佳实践。书中处处闪烁着作者 超凡的真知灼见，将大大升华读者对ORM乃至企业级应用开发的理解。</p>\n<p>\n	本书适合广大的开发人员，从ORM的初学者到经验丰富的开发人员。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第一部分 从Hibernate和EJB 3.0开始<br />\n		　第1章 理解对象/关系持久化　<br />\n		　　1.1 什么是持久化　<br />\n		　　　1.1.1 关系数据库　<br />\n		　　　1.1.2 理解SQL　<br />\n		　　　1.1.3 在Java中使用SQL　<br />\n		　　　1.1.4 面向对象应用程序中的持久化　<br />\n		　　1.2 范式不匹配　<br />\n		　　　1.2.1 粒度问题　<br />\n		　　　1.2.2 子类型问题　<br />\n		　　　1.2.3 同一性问题　<br />\n		　　　1.2.4 与关联相关的问题　<br />\n		　　　1.2.5 数据导航的问题　<br />\n		　　　1.2.6 不匹配的代价　<br />\n		　　1.3 持久层和其他层　<br />\n		　　　1.3.1 分层架构　<br />\n		　　　1.3.2 用SQL/JDBC手工编写持久层　<br />\n		　　　1.3.3 使用序列化　<br />\n		　　　1.3.4 面向对象的数据库系统　<br />\n		　　　1.3.5 其他选项　<br />\n		.　　1.4 ORM　<br />\n		　　　1.4.1 什么是ORM　<br />\n		　　　1.4.2 一般的ORM问题　<br />\n		　　　1.4.3 为什么选择ORM　<br />\n		　　　1.4.4 Hibernate、EJB 3和JPA简介　<br />\n		　　1.5 小结　<br />\n		　第2章 启动项目　<br />\n		　　2.1 启动Hibernate项目　<br />\n		　　　2.1.1 选择开发过程　<br />\n		　　　2.1.2 建立项目　<br />\n		　　　2.1.3 Hibernate配置和启动　<br />\n		　　　2.1.4 运行和测试应用程序　<br />\n		　　2.2 启动Java Persistence项目　<br />\n		　　　2.2.1 使用Hibernate Annotations　<br />\n		　　　2.2.2 使用Hibernate EntityManager　<br />\n		　　　2.2.3 引入EJB组件　<br />\n		　　　2.2.4 切换到Hibernate接口　<br />\n		　　2.3 反向工程遗留数据库　<br />\n		　　　2.3.1 创建数据库配置　<br />\n		　　　2.3.2 定制反向工程　<br />\n		　　　2.3.3 生成Java源代码　<br />\n		　　2.4 与Java EE服务整合　<br />\n		　　　2.4.1 与JTA整合　<br />\n		　　　2.4.2 JNDI绑定的SessionFactory　<br />\n		　　　2.4.3 JMX服务部署　<br />\n		　　2.5 小结　<br />\n		　第3章 领域模型和元数据　<br />\n		　　3.1 CaveatEmptor应用程序　<br />\n		　　　3.1.1 分析业务领域　<br />\n		　　　3.1.2 CaveatEmptor领域模型　<br />\n		　　3.2 实现领域模型　<br />\n		　　　3.2.1 处理关注点渗漏　<br />\n		　　　3.2.2 透明和自动持久化　<br />\n		　　　3.2.3 编写POJO和持久化实体类　<br />\n		　　　3.2.4 实现POJO关联　<br />\n		　　　3.2.5 把逻辑添加到访问方法　<br />\n		　　3.3 ORM元数据　<br />\n		　　　3.3.1 XML中的元数据　<br />\n		　　　3.3.2 基于注解的元数据　<br />\n		　　　3.3.3 使用XDoclet　<br />\n		　　　3.3.4 处理全局的元数据　<br />\n		　　　3.3.5 运行时操作元数据　<br />\n		　　3.4 其他实体表示法　<br />\n		　　　3.4.1 创建动态的应用程序　<br />\n		　　　3.4.2 表示XML中的数据　<br />\n		　　3.5 小结　<br />\n		第二部分　映射概念和策略<br />\n		　第4章 映射持久化类　<br />\n		　　4.1 理解实体和值类型　<br />\n		　　　4.1.1 细粒度的领域模型　<br />\n		　　　4.1.2 定义概念　<br />\n		　　　4.1.3 识别实体和值类型　<br />\n		　　4.2 映射带有同一性的实体　<br />\n		　　　4.2.1 理解Java同一性和等同性　<br />\n		　　　4.2.2 处理数据库同一性　<br />\n		　　　4.2.3 数据库主键　<br />\n		　　4.3 类映射选项　<br />\n		　　　4.3.1 动态的SQL生成　<br />\n		　　　4.3.2 使实体不可变　<br />\n		　　　4.3.3 给查询命名实体　<br />\n		　　　4.3.4 声明包名称　<br />\n		　　　4.3.5 用引号把SQL标识符括起来　<br />\n		　　　4.3.6 实现命名约定　<br />\n		　　4.4 细粒度的模型和映射　<br />\n		　　　4.4.1 映射基础属性　<br />\n		　　　4.4.2 映射组件　<br />\n		　　4.5 小结　<br />\n		　第5章 继承和定制类型　<br />\n		　　5.1 映射类继承　<br />\n		　　　5.1.1 每个带有隐式多态的具体类一张表　<br />\n		　　　5.1.2 每个带有联合的具体类一张表　<br />\n		　　　5.1.3 每个类层次结构一张表　<br />\n		　　　5.1.4 每个子类一张表　<br />\n		　　　5.1.5 混合继承策略　<br />\n		　　　5.1.6 选择策略　<br />\n		　　5.2 Hibernate类型系统　<br />\n		　　　5.2.1 概述实体和值类型　<br />\n		　　　5.2.2 内建的映射类型　<br />\n		　　　5.2.3 使用映射类型　<br />\n		　　5.3 创建定制的映射类型　<br />\n		　　　5.3.1 考虑定制的映射类型　<br />\n		　　　5.3.2 扩展点　<br />\n		　　　5.3.3 定制映射类型的案例　<br />\n		　　　5.3.4 创建UserType　<br />\n		　　　5.3.5 创建CompositeUserType　<br />\n		　　　5.3.6 参数化定制类型　<br />\n		　　　5.3.7 映射枚举　<br />\n		　　5.4 小结　<br />\n		　第6章 映射集合和实体关联　<br />\n		　　6.1 值类型的set、bag、list和map　<br />\n		　　　6.1.1 选择集合接口　<br />\n		　　　6.1.2 映射set　<br />\n		　　　6.1.3 映射标识符bag　<br />\n		　　　6.1.4 映射list　<br />\n		　　　6.1.5 映射map　<br />\n		　　　6.1.6 排序集合和有序集合　<br />\n		6.2 组件的集合　<br />\n		　　　6.2.1 编写组件类　<br />\n		　　　6.2.2 映射集合　<br />\n		　　　6.2.3 启用双向导航　<br />\n		　　　6.2.4 避免非空列　<br />\n		　　6.3 用注解映射集合　<br />\n		　　　6.3.1 基本的集合映射　<br />\n		　　　6.3.2 排序集合和有序集合　<br />\n		　　　6.3.3 映射嵌入式对象的集合　<br />\n		　　6.4 映射父/子关系　<br />\n		　　　6.4.1 多样性　<br />\n		　　　6.4.2 最简单的可能关联　<br />\n		　　　6.4.3 使关联双向　<br />\n		　　　6.4.4 级联对象状态　<br />\n		　　6.5 小结　<br />\n		　第7章 高级实体关联映射　<br />\n		　　7.1 单值的实体关联　<br />\n		　　　7.1.1 共享的主键关联　<br />\n		　　　7.1.2 一对一的外键关联　<br />\n		　　　7.1.3 用联结表映射　<br />\n		　　7.2 多值的实体关联　<br />\n		　　　7.2.1 一对多关联　<br />\n		　　　7.2.2 多对多关联　<br />\n		　　　7.2.3 把列添加到联结表　<br />\n		　　　7.2.4 映射map　<br />\n		　　7.3 多态关联　<br />\n		　　　7.3.1 多态的多对一关联　<br />\n		　　　7.3.2 多态集合　<br />\n		　　　7.3.3 对联合的多态关联　<br />\n		　　　7.3.4 每个具体类一张多态表　<br />\n		　　7.4 小结　<br />\n		　第8章 遗留数据库和定制SQL　<br />\n		　　8.1 整合遗留数据库　<br />\n		　　　8.1.1 处理主键　<br />\n		　　　8.1.2 带有公式的任意联结条件　<br />\n		　　　8.1.3 联结任意的表　<br />\n		　　　8.1.4 使用触发器　<br />\n		　　8.2 定制SQL　<br />\n		　　　8.2.1 编写定制CRUD语句　<br />\n		　　　8.2.2 整合存储过程和函数　<br />\n		　　8.3 改进Schema DDL　<br />\n		　　　8.3.1 定制SQL名称和数据类型　<br />\n		　　　8.3.2 确保数据一致性　<br />\n		　　　8.3.3 添加领域约束和列约束　<br />\n		　　　8.3.4 表级约束　<br />\n		　　　8.3.5 数据库约束　<br />\n		　　　8.3.6 创建索引　<br />\n		　　　8.3.7 添加辅助的DDL　<br />\n		　　8.4 小结　<br />\n		第三部分　会话对象处理<br />\n		　第9章 使用对象　<br />\n		　　9.1 持久化生命周期　<br />\n		　　　9.1.1 对象状态　<br />\n		　　　9.1.2 持久化上下文　<br />\n		　　9.2 对象同一性和等同性　<br />\n		　　　9.2.1 引入对话　<br />\n		　　　9.2.2 对象同一性的范围　<br />\n		　　　9.2.3 脱管对象的同一性　<br />\n		　　　9.2.4 扩展持久化上下文　<br />\n		　　9.3 Hibernate接口　<br />\n		　　　9.3.1 保存和加载对象　<br />\n		　　　9.3.2 使用脱管对象　<br />\n		　　　9.3.3 管理持久化上下文　<br />\n		　　9.4 JPA　<br />\n		　　　9.4.1 保存和加载对象　<br />\n		　　　9.4.2 使用脱管的实体实例　<br />\n		　　9.5 在EJB组件中使用Java Persistence　<br />\n		　　　9.5.1 注入EntityManager　<br />\n		　　　9.5.2 查找EntityManager　<br />\n		　　　9.5.3 访问EntityManagerFactory　<br />\n		　　9.6 小结　<br />\n		　第10章 事务和并发　<br />\n		　　10.1 事务本质　<br />\n		　　　10.1.1 数据库和系统事务　<br />\n		　　　10.1.2 Hibernate应用程序中的事务　<br />\n		　　　10.1.3 使用Java Persistence的事务　<br />\n		　　10.2 控制并发访问　<br />\n		　　　10.2.1 理解数据库级并发　<br />\n		　　　10.2.2 乐观并发控制　<br />\n		　　　10.2.3 获得额外的隔离性保证　<br />\n		　　10.3 非事务数据访问　<br />\n		　　　10.3.1 揭开自动提交的神秘面纱　<br />\n		　　　10.3.2 使用Hibernate非事务地工作　<br />\n		　　　10.3.3 使用JTA的可选事务　<br />\n		　　10.4 小结　<br />\n		　第11章 实现对话　<br />\n		　　11.1 传播Hibernate Session　<br />\n		　　　11.1.1 Session传播的用例　<br />\n		　　　11.1.2 通过线程局部传播　<br />\n		　　　11.1.3 利用JTA传播　<br />\n		　　　11.1.4 利用EJB传播　<br />\n		　　11.2 利用Hibernate的对话　<br />\n		　　　11.2.1 提供对话保证　<br />\n		　　　11.2.2 利用脱管对象的对话　<br />\n		　　　11.2.3 给对话扩展Session　<br />\n		　　11.3 使用JPA的对话　<br />\n		　　　11.3.1 Java SE中的持久化上下文传播　<br />\n		　　　11.3.2 在对话中合并脱管对象　<br />\n		　　　11.3.3 在Java SE中扩展持久化上下文　<br />\n		　　11.4 使用EJB 3.0的对话　<br />\n		　　　11.4.1 使用EJB的上下文传播　<br />\n		　　　11.4.2 利用EJB扩展持久化上下文　<br />\n		　　11.5 小结　<br />\n		　第12章 有效修改对象　<br />\n		　　12.1 传播性持久化　<br />\n		　　　12.1.1 按可到达性持久化　<br />\n		　　　12.1.2 把级联应用到关联　<br />\n		　　　12.1.3 使用传播性状态　<br />\n		　　　12.1.4 利用JPA的传播性关联　<br />\n		　　12.2 大批量和批量操作　<br />\n		　　　12.2.1 使用HQL和JPA QL的大批量语句　<br />\n		　　　12.2.2 利用批量处理　<br />\n		　　　12.2.3 使用无状态的会话　<br />\n		　　12.3 数据过滤和拦截　<br />\n		　　　12.3.1 动态数据过滤　<br />\n		　　　12.3.2 拦截Hibernate事件　<br />\n		　　　12.3.3 内核事件系统　<br />\n		　　　12.3.4 实体监听器和回调　<br />\n		　　12.4 小结　<br />\n		　第13章 优化抓取和高速缓存　<br />\n		　　13.1 定义全局抓取计划　<br />\n		　　　13.1.1 对象获取选项　<br />\n		　　　13.1.2 延迟的默认抓取计划　<br />\n		　　　13.1.3 理解代理　<br />\n		　　　13.1.4 禁用代理生成　<br />\n		　　　13.1.5 关联和集合的即时加载　<br />\n		　　　13.1.6 通过拦截延迟加载　<br />\n		　　13.2 选择抓取策略　<br />\n		　　　13.2.1 批量预抓取数据　<br />\n		　　　13.2.2 通过子查询预抓取集合　<br />\n		　　　13.2.3 通过联结即时抓取　<br />\n		　　　13.2.4 给二级表优化抓取　<br />\n		　　　13.2.5 优化指导方针　<br />\n		　　13.3 高速缓存基本原理　<br />\n		　　　13.3.1 高速缓存策略和范围　<br />\n		　　　13.3.2 Hibernate高速缓存架构　<br />\n		　　13.4 高速缓存实践　<br />\n		　　　13.4.1 选择并发控制策略　<br />\n		　　　13.4.2 理解高速缓存区域　<br />\n		　　　13.4.3 设置本地的高速缓存提供程序　<br />\n		　　　13.4.4 设置重复的高速缓存　<br />\n		　　　13.4.5 控制二级高速缓存　<br />\n		　　13.5 小结　<br />\n		　第14章 利用HQL和JPA QL查询　<br />\n		　　14.1 创建和运行查询　<br />\n		　　　14.1.1 准备查询　<br />\n		　　　14.1.2 执行查询　<br />\n		　　　14.1.3 使用具名查询　<br />\n		　　14.2 基本的HQL和JPA QL查询　<br />\n		　　　14.2.1 选择　<br />\n		　　　14.2.2 限制　<br />\n		　　　14.2.3 投影　<br />\n		　　14.3 联结、报表查询和子查询　<br />\n		　　　14.3.1 联结关系和关联　<br />\n		　　　14.3.2 报表查询　<br />\n		　　　14.3.3 利用子查询　<br />\n		　　14.4 小结　<br />\n		　第15章 高级查询选项　<br />\n		　　15.1 利用条件和示例查询　<br />\n		　　　15.1.1 基本的条件查询　<br />\n		　　　15.1.2 联结和动态抓取　<br />\n		　　　15.1.3 投影和报表查询　<br />\n		　　　15.1.4 按示例查询　<br />\n		　　15.2 利用原生的SQL查询　<br />\n		　　　15.2.1 自动的结果集处理　<br />\n		　　　15.2.2 获取标量值　<br />\n		　　　15.2.3 Java Persistence中的原生SQL　<br />\n		　　15.3 过滤集合　<br />\n		　　15.4 高速缓存查询结果　<br />\n		　　　15.4.1 启用查询结果高速缓存　<br />\n		　　　15.4.2 理解查询高速缓存　<br />\n		　　　15.4.3 什么时候使用查询高速缓存　<br />\n		　　　15.4.4 自然标识符高速缓存查找　<br />\n		　　15.5 小结　<br />\n		　第16章 创建和测试分层的应用程序　<br />\n		　　16.1 Web应用程序中的Hibernate　<br />\n		　　　16.1.1 用例简介　<br />\n		　　　16.1.2 编写控制器　<br />\n		　　　16.1.3 OSIV模式　<br />\n		　　　16.1.4 设计巧妙的领域模型　<br />\n		　　16.2 创建持久层　<br />\n		　　　16.2.1 泛型的数据访问对象模式　<br />\n		　　　16.2.2 实现泛型CRUD接口　<br />\n		　　　16.2.3 实现实体DAO　<br />\n		　　　16.2.4 利用数据访问对象　<br />\n		　　16.3 命令模式简介　<br />\n		　　　16.3.1 基础接口　<br />\n		　　　16.3.2 执行命令对象　<br />\n		　　　16.3.3 命令模式的变形　<br />\n		　　16.4 利用EJB 3.0设计应用程序　<br />\n		　　　16.4.1 利用有状态的bean实现会话　<br />\n		　　　16.4.2 利用EJB编写DAO　<br />\n		　　　16.4.3 利用依赖注入　<br />\n		　　16.5 测试　<br />\n		　　　16.5.1 理解不同种类的测试　<br />\n		　　　16.5.2 TestNG简介　<br />\n		　　　16.5.3 测试持久层　<br />\n		　　　16.5.4 考虑性能基准　<br />\n		　　16.6 小结　<br />\n		　第17章 JBoss Seam简介　<br />\n		　　17.1 Java EE 5.0编程模型　<br />\n		　　　17.1.1 JSF详解　<br />\n		　　　17.1.2 EJB 3.0详解　<br />\n		　　　17.1.3 用JSF和EJB 3.0编写Web应用程序　<br />\n		　　　17.1.4 分析应用程序　<br />\n		　　17.2 用Seam改善应用程序　<br />\n		　　　17.2.1 配置Seam　<br />\n		　　　17.2.2 将页面绑定到有状态的Seam组件　<br />\n		　　　17.2.3 分析Seam应用程序　<br />\n		　　17.3 理解上下文组件　<br />\n		　　　17.3.1 编写登录页面　<br />\n		　　　17.3.2 创建组件　<br />\n		　　　17.3.3 给上下文变量起别名　<br />\n		　　　17.3.4 完成登录/注销特性　<br />\n		　　17.4 验证用户输入　<br />\n		　　　17.4.1 Hibernate Validator简介　<br />\n		　　　17.4.2 创建注册页面　<br />\n		　　　17.4.3 用Seam实现国际化　<br />\n		　　17.5 利用Seam简化持久化　<br />\n		　　　17.5.1 实现对话　<br />\n		　　　17.5.2 让Seam管理持久化上下文　<br />\n		　　17.6 小结　<br />\n		附录A SQL基础知识　<br />\n		附录B 映射快速参考</p>\n</blockquote>\n', '本书全面讲述了Hibernate和Java Persistence，并对两者进行了详细的对比分析。书中通过一个应用将数百个例子融合起来，不仅深入剖析了Hibernate 3.2和Java Persistence丰富的编程模型，还深刻阐述了数据库设计、对象/关系映射（ORM）和优化等方面的基本原则、策略和最佳实践。书中处处闪烁着作者超凡的真知灼见，将大大升华读者对ORM乃至企业级应用开发的理解。\n本书适合广大的开发人员，从ORM的初学者到经验丰富的开发人员。 ', 1284652800000, '1.0', 'Gavin King', '', 'Manning Publications', '', '本站下载-http://story.ajava.org/hibernate/java-persistence-with-hibernate-en-pdf.zip', '7M', '所有系统', 'CC3', '英文', 1284724727267, 1284724841920, 'admin'),
('000000002b151467012b1f9f0ac80069', '000000002b0bf62e012b0bfbf7b80002', '《Hibernate in Action》PDF下载', 'Hibernate之父亲自执笔', NULL, '<blockquote>\n	<p>\n		本书为英文版，适合有一定英文基础或熟练使用翻译工具的读者使用。</p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://ecx.images-amazon.com/images/I/51E9JzoZfXL._SS500_.jpg" /></p>\n<p>\n	Both an introduction to the theoretical aspects of automated object/relational mapping and a practical guide to using Hibernate, this resource provides extensive sample codes to implement an online auction application. Object persistence and the object/relational mismatch problem are discussed with an emphasis on the importance of Plain Old Java Objects. More advanced ORM concepts and techniques are introduced, such as the impact of ORM on application architecture and development processes along with specific techniques for achieving high performance. Effective uses for Hibernate&#39;s developer tool set are demonstrated.</p>', 'Both an introduction to the theoretical aspects of automated object/relational mapping and a practical guide to using Hibernate, this resource provides extensive sample codes to implement an online auction application. Object persistence and the object/relational mismatch problem are discussed with an emphasis on the importance of Plain Old Java Objects. More advanced ORM concepts and techniques are introduced, such as the impact of ORM on application architecture and development processes along with specific techniques for achieving high performance. Effective uses for Hibernate''s developer tool set are demonstrated. ', 1284652800000, '1.0', 'Christian Bauer Gavin King', '', 'Manning Publications', '', '本站下载-http://story.ajava.org/hibernate/hibernate-in-action-en-pdf.zip', '2M', '所有系统', 'CC3', '英文', 1284725738184, 1284910543291, 'admin'),
('000000002b151467012b1faa2b4b006d', '000000002b0bf62e012b0bfbf7b80002', '《Beginning Hibernate, Second Edition》PDF下载', '基于hibernate 3.5.x', NULL, '<blockquote>\n	<p>\n		本书为英文版，适合有一定英文基础或熟练使用翻译工具的读者使用。</p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://ecx.images-amazon.com/images/I/51q4vFqX6IL._BO2,204,203,200_PIsitb-sticker-arrow-click,TopRight,35,-76_AA300_SH20_OU01_.jpg" style="width: 300px; height: 300px;" /></p>\n<p>\n	Beginning Hibernate, Second Edition is ideal if you&rsquo;re experienced in Java with databases (the traditional, or &ldquo;connected,&rdquo; approach), but new to open source, lightweight Hibernate&mdash;the de facto object-relational mapping and database-oriented application development framework.</p>\n<p>\n	This book packs in brand-new information about the latest release of the Hibernate 3.5 persistence layer and provides a clear introduction to the current standard for object-relational persistence in Java. And since the book keeps its focus on Hibernate without wasting time on nonessential third-party tools, you&rsquo;ll be able to immediately start building transaction-based engines and applications.</p>\n<p>\n	Experienced authors Dave Minter and Jeff Linwood provide more in-depth examples than any other book for Hibernate beginners. The authors also present material in a lively, example-based manner&mdash;not a dry, theoretical, hard-to-read fashion.</p>\n<h3>\n	What you&rsquo;ll learn</h3>\n<ul>\n	<li>\n		How to build enterprise Java-based transaction&mdash;type applications that access complex data with Hibernate, including Software as a Service (SaaS)</li>\n	<li>\n		How to work with Hibernate 3.5</li>\n	<li>\n		Where to integrate into the persistence lifecycle, including cloud application implications</li>\n	<li>\n		How to map using annotations, Hibernate XML files, and more</li>\n	<li>\n		How to search and query with the new version of Hibernate</li>\n	<li>\n		When to integrate with Spring, Grails, and more</li>\n</ul>\n', 'Beginning Hibernate, Second Edition is ideal if you’re experienced in Java with databases (the traditional, or “connected,” approach), but new to open source, lightweight Hibernate—the de facto object-relational mapping and database-oriented application development framework.', 1284652800000, '1.0', 'Jeff Linwood, Dave Minter ', '', 'Apress', '', '本站下载-http://story.ajava.org/hibernate/beginning-hibernate-2th-edition-en-pdf.zip', '8M', '所有系统', 'CC3', '英文', 1284726467403, 1284726467403, 'admin'),
('000000002b151467012b1fb2d5c80071', '000000002b0bf62e012b0bfbf7b80002', '《Hibernate 开发指南》PDF下载', 'hibernate启蒙教程', NULL, '<p>\n	本文是由笔者 2003 年底一个咨询项目中，为客户做的持久层设计培训文案整理而来。</p>\n<p>\n	其中的内容涉及 Hibernate 的使用，以及一部分笔者实际咨询项目中的经验积累，另一方面，大部分是笔者在 Hibernate 的官方论坛中与众多技术专家交流所得。</p>\n<p>\n	既来于斯，则归于斯。希望能聊有所用。</p>\n<p>\n	本文并非试图替代Hibernate Reference，相对而言，Hibernate Reference的编写目的是为开发者提供更简便的条目索引，而本文目标则在于为开发人员提供一个入门和掌握Hibernate的途径。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		Hibernate 开发指南<br />\n		准备工作<br />\n		构建 Hibernate基础代码<br />\n		由数据库产生基础代码<br />\n		Hibernate配置<br />\n		第一段代码<br />\n		Hibernate基础语义<br />\n		Configuration<br />\n		SessionFactory<br />\n		Session<br />\n		Hibernate高级特性<br />\n		XDoclet与Hibernate映射<br />\n		数据检索<br />\n		Criteria Query<br />\n		Criteria查询表达式<br />\n		Criteria高级特性<br />\n		限定返回的记录范围<br />\n		对查询结果进行排序<br />\n		Hibernate Query Language (HQL)<br />\n		数据关联<br />\n		一对一关联<br />\n		一对多关联<br />\n		&nbsp; 单向一对多关系<br />\n		&nbsp; 双向一对多关系<br />\n		多对多关联<br />\n		数据访问<br />\n		PO和 VO<br />\n		关于 unsaved-value<br />\n		Inverse和 Cascade<br />\n		延迟加载（Lazy Loading）<br />\n		事务管理<br />\n		基于 JDBC的事务管理<br />\n		基于 JTA的事务管理<br />\n		锁（locking）<br />\n		悲观锁（Pessimistic Locking）<br />\n		乐观锁（Optimistic Locking）<br />\n		Hibernate分页<br />\n		Cache管理<br />\n		Session管理<br />\n		Hibernate in Spring<br />\n		编后赘言</p>\n</blockquote>\n', '本文是由笔者 2003 年底一个咨询项目中，为客户做的持久层设计培训文案整理而来。 其中的内容涉及 Hibernate 的使用，以及一部分笔者实际咨询项目中的经验积累，另一方面，大部分是笔者在 Hibernate 的官方论坛中与众多技术专家交流所得。 ', 1284652800000, '1.0', '夏昕', '', '满江红', '', '本站下载-http://story.ajava.org/hibernate/hibernate-developer-guide-zh-pdf.zip', '533K', '所有系统', 'CC3', '中文', 1284727035336, 1284727035336, 'admin'),
('000000002b248517012b2905c1520001', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 3.5.6.Final 在线API文档', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 3.5.6.Final 官方api的javadoc，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.annotations</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cache.infinispan</li>\n		<li>\n			org.hibernate.cache.infinispan.access</li>\n		<li>\n			org.hibernate.cache.infinispan.collection</li>\n		<li>\n			org.hibernate.cache.infinispan.entity</li>\n		<li>\n			org.hibernate.cache.infinispan.impl</li>\n		<li>\n			org.hibernate.cache.infinispan.query</li>\n		<li>\n			org.hibernate.cache.infinispan.timestamp</li>\n		<li>\n			org.hibernate.cache.infinispan.tm</li>\n		<li>\n			org.hibernate.cache.infinispan.util</li>\n		<li>\n			org.hibernate.cache.jbc</li>\n		<li>\n			org.hibernate.cache.jbc.access</li>\n		<li>\n			org.hibernate.cache.jbc.builder</li>\n		<li>\n			org.hibernate.cache.jbc.collection</li>\n		<li>\n			org.hibernate.cache.jbc.entity</li>\n		<li>\n			org.hibernate.cache.jbc.query</li>\n		<li>\n			org.hibernate.cache.jbc.timestamp</li>\n		<li>\n			org.hibernate.cache.jbc.util</li>\n		<li>\n			org.hibernate.cache.jbc2</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.cfg.annotations</li>\n		<li>\n			org.hibernate.cfg.annotations.reflection</li>\n		<li>\n			org.hibernate.cfg.beanvalidation</li>\n		<li>\n			org.hibernate.cfg.search</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.ejb</li>\n		<li>\n			org.hibernate.ejb.connection</li>\n		<li>\n			org.hibernate.ejb.criteria</li>\n		<li>\n			org.hibernate.ejb.criteria.expression</li>\n		<li>\n			org.hibernate.ejb.criteria.expression.function</li>\n		<li>\n			org.hibernate.ejb.criteria.path</li>\n		<li>\n			org.hibernate.ejb.criteria.predicate</li>\n		<li>\n			org.hibernate.ejb.event</li>\n		<li>\n			org.hibernate.ejb.instrument</li>\n		<li>\n			org.hibernate.ejb.metamodel</li>\n		<li>\n			org.hibernate.ejb.packaging</li>\n		<li>\n			org.hibernate.ejb.transaction</li>\n		<li>\n			org.hibernate.ejb.util</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.jdbc</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.profile</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.envers</li>\n		<li>\n			org.hibernate.envers.ant</li>\n		<li>\n			org.hibernate.envers.configuration</li>\n		<li>\n			org.hibernate.envers.configuration.metadata</li>\n		<li>\n			org.hibernate.envers.configuration.metadata.reader</li>\n		<li>\n			org.hibernate.envers.entities</li>\n		<li>\n			org.hibernate.envers.entities.mapper</li>\n		<li>\n			org.hibernate.envers.entities.mapper.id</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.component</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.initializor</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.proxy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.query</li>\n		<li>\n			org.hibernate.envers.event</li>\n		<li>\n			org.hibernate.envers.exception</li>\n		<li>\n			org.hibernate.envers.query</li>\n		<li>\n			org.hibernate.envers.query.criteria</li>\n		<li>\n			org.hibernate.envers.query.impl</li>\n		<li>\n			org.hibernate.envers.query.order</li>\n		<li>\n			org.hibernate.envers.query.projection</li>\n		<li>\n			org.hibernate.envers.query.property</li>\n		<li>\n			org.hibernate.envers.reader</li>\n		<li>\n			org.hibernate.envers.revisioninfo</li>\n		<li>\n			org.hibernate.envers.synchronization</li>\n		<li>\n			org.hibernate.envers.synchronization.work</li>\n		<li>\n			org.hibernate.envers.tools</li>\n		<li>\n			org.hibernate.envers.tools.graph</li>\n		<li>\n			org.hibernate.envers.tools.query</li>\n		<li>\n			org.hibernate.envers.tools.reflection</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.factory</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.junit</li>\n		<li>\n			org.hibernate.junit.functional</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.sql.ordering.antlr</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.test.annotations</li>\n		<li>\n			org.hibernate.test.cache</li>\n		<li>\n			org.hibernate.test.tm</li>\n		<li>\n			org.hibernate.tool.ant</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n		<li>\n			org.hibernate.util.xml</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-javadoc-en/" target="_blank">Hibernate 3.5.6.Final&nbsp; 在线API文档</a></p>\n<p>\n	&nbsp;</p>', 'Hibernate 3.5.6.Final 官方api的javadoc，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。', 1284825600000, '3.5.6.Final', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '英文', 1284883464530, 1284883464530, 'admin'),
('000000002b248517012b2909942a0005', '000000002b0bf62e012b0bfb93d70001', 'Hibernate 3.5.6.Final 在线参考手册', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.5.6.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、日文、德语、法语、西班牙语、葡萄牙语的版本，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			只读实体</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/zh-CN/html/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 中文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/zh-CN/html_single/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 中文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/en-US/html/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 英文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/en-US/html_single/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 英文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/ja-JP/html/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 日文版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/ja-JP/html_single/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 日文版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/de-DE/html/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 德语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/de-DE/html_single/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 德语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/fr-FR/html/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 法语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/fr-FR/html_single/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 法语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/es-ES/html/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 西班牙语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/es-ES/html_single/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 西班牙语版本 单页</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/pt-BR/html/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 葡萄牙语版本</a></p>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-manual-ml/pt-BR/html_single/" target="_blank">Hibernate 3.5.6.Final 在线参考手册 葡萄牙语版本 单页</a></p>\n<p>\n	&nbsp;</p>', ' Hibernate 3.5.6.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，包含中文、英文、日文、德语、法语、西班牙语、葡萄牙语的版本，是开发人员的必备文档。', 1284825600000, '3.5.6.Final', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '多语言', 1284883715114, 1284883715114, 'admin'),
('000000002b248517012b291044d00009', '000000002b0c282d012b0f725939001d', 'Hibernate 3.5.6.Final 在线Java源码', '在线查看Hibernate源代码', NULL, '<p>\n	Hibernate 3.5.6.Final 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.annotations</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cache.infinispan</li>\n		<li>\n			org.hibernate.cache.infinispan.access</li>\n		<li>\n			org.hibernate.cache.infinispan.collection</li>\n		<li>\n			org.hibernate.cache.infinispan.entity</li>\n		<li>\n			org.hibernate.cache.infinispan.impl</li>\n		<li>\n			org.hibernate.cache.infinispan.query</li>\n		<li>\n			org.hibernate.cache.infinispan.timestamp</li>\n		<li>\n			org.hibernate.cache.infinispan.tm</li>\n		<li>\n			org.hibernate.cache.infinispan.util</li>\n		<li>\n			org.hibernate.cache.jbc</li>\n		<li>\n			org.hibernate.cache.jbc.access</li>\n		<li>\n			org.hibernate.cache.jbc.builder</li>\n		<li>\n			org.hibernate.cache.jbc.collection</li>\n		<li>\n			org.hibernate.cache.jbc.entity</li>\n		<li>\n			org.hibernate.cache.jbc.query</li>\n		<li>\n			org.hibernate.cache.jbc.timestamp</li>\n		<li>\n			org.hibernate.cache.jbc.util</li>\n		<li>\n			org.hibernate.cache.jbc2</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.cfg.annotations</li>\n		<li>\n			org.hibernate.cfg.annotations.reflection</li>\n		<li>\n			org.hibernate.cfg.beanvalidation</li>\n		<li>\n			org.hibernate.cfg.search</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.ejb</li>\n		<li>\n			org.hibernate.ejb.connection</li>\n		<li>\n			org.hibernate.ejb.criteria</li>\n		<li>\n			org.hibernate.ejb.criteria.expression</li>\n		<li>\n			org.hibernate.ejb.criteria.expression.function</li>\n		<li>\n			org.hibernate.ejb.criteria.path</li>\n		<li>\n			org.hibernate.ejb.criteria.predicate</li>\n		<li>\n			org.hibernate.ejb.event</li>\n		<li>\n			org.hibernate.ejb.instrument</li>\n		<li>\n			org.hibernate.ejb.metamodel</li>\n		<li>\n			org.hibernate.ejb.packaging</li>\n		<li>\n			org.hibernate.ejb.transaction</li>\n		<li>\n			org.hibernate.ejb.util</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.jdbc</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.profile</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.envers</li>\n		<li>\n			org.hibernate.envers.ant</li>\n		<li>\n			org.hibernate.envers.configuration</li>\n		<li>\n			org.hibernate.envers.configuration.metadata</li>\n		<li>\n			org.hibernate.envers.configuration.metadata.reader</li>\n		<li>\n			org.hibernate.envers.entities</li>\n		<li>\n			org.hibernate.envers.entities.mapper</li>\n		<li>\n			org.hibernate.envers.entities.mapper.id</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.component</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.initializor</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.proxy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.query</li>\n		<li>\n			org.hibernate.envers.event</li>\n		<li>\n			org.hibernate.envers.exception</li>\n		<li>\n			org.hibernate.envers.query</li>\n		<li>\n			org.hibernate.envers.query.criteria</li>\n		<li>\n			org.hibernate.envers.query.impl</li>\n		<li>\n			org.hibernate.envers.query.order</li>\n		<li>\n			org.hibernate.envers.query.projection</li>\n		<li>\n			org.hibernate.envers.query.property</li>\n		<li>\n			org.hibernate.envers.reader</li>\n		<li>\n			org.hibernate.envers.revisioninfo</li>\n		<li>\n			org.hibernate.envers.synchronization</li>\n		<li>\n			org.hibernate.envers.synchronization.work</li>\n		<li>\n			org.hibernate.envers.tools</li>\n		<li>\n			org.hibernate.envers.tools.graph</li>\n		<li>\n			org.hibernate.envers.tools.query</li>\n		<li>\n			org.hibernate.envers.tools.reflection</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.factory</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.junit</li>\n		<li>\n			org.hibernate.junit.functional</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.sql.ordering.antlr</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.test.annotations</li>\n		<li>\n			org.hibernate.test.cache</li>\n		<li>\n			org.hibernate.test.tm</li>\n		<li>\n			org.hibernate.tool.ant</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n		<li>\n			org.hibernate.util.xml</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/hibernate/3.5.6.final-src/" target="_blank">Hibernate 3.5.6.Final 在线Java源码</a></p>\n', 'Hibernate 3.5.6.Final 在线Java源码，直接通过浏览器浏览hibernate的源代码，方便开发人员学习hibernate的内部实现。', 1284825600000, '3.5.6.Final', '道长A', '', 'jboss.org', '', '', '', '所有系统', 'LGPL', '英文', 1284884153552, 1286873257798, 'admin'),
('000000002b248517012b29189b67000d', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.5.6.Final 参考手册 HTML下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.5.6.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			只读实体</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>\n', ' Hibernate 3.5.6.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为HTML，是开发人员的必备文档。', 1284825600000, '3.5.6.Final', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.5.6.final-manual-zh-html.zip', '1M', '所有系统', 'LGPL', '中文', 1284884700007, 1284884700007, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b248517012b291ba3440011', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.5.6.Final 参考手册 PDF下载', '介绍如何使用Hibernate进行开发', NULL, '<p>\n	Hibernate 3.5.6.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。</p>\n<p>\n	此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。</p>\n<p>\n	文档大纲如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			指南</li>\n		<li>\n			体系结构(Architecture)</li>\n		<li>\n			配置</li>\n		<li>\n			持久化类(Persistent Classes)</li>\n		<li>\n			对象/关系数据库映射基础(Basic O/R Mapping)</li>\n		<li>\n			集合映射</li>\n		<li>\n			关联关系映射</li>\n		<li>\n			组件（Component）映射</li>\n		<li>\n			继承映射</li>\n		<li>\n			与对象共事</li>\n		<li>\n			只读实体</li>\n		<li>\n			事务和并发</li>\n		<li>\n			拦截器与事件(Interceptors and events)</li>\n		<li>\n			批处理</li>\n		<li>\n			HQL: Hibernate查询语言</li>\n		<li>\n			条件查询(Criteria Queries)</li>\n		<li>\n			Native SQL查询</li>\n		<li>\n			过滤数据</li>\n		<li>\n			XML映射</li>\n		<li>\n			提升性能</li>\n		<li>\n			工具箱指南</li>\n		<li>\n			示例：父子关系(Parent Child Relationships)</li>\n		<li>\n			示例：Weblog 应用程序</li>\n		<li>\n			示例：复杂映射实例</li>\n		<li>\n			最佳实践(Best Practices)</li>\n		<li>\n			数据库移植注意事项</li>\n	</ol>\n</blockquote>\n', ' Hibernate 3.5.6.Final 官方参考手册，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)和Cao RedSaga Xiaogang等人编写。\n此文档非常详细地介绍了Hibernate的所有内容，格式为PDF，是开发人员的必备文档。', 1284825600000, '3.5.6.Final', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.5.6.final-manual-zh-pdf.zip', '1M', '所有系统', 'LGPL', '中文', 1284884898628, 1284884898628, 'admin'),
('000000002b248517012b291ebc930015', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.5.6.Final API文档下载', '详细的Hibernate api javadoc', NULL, '<p>\n	Hibernate 3.5.6.Final 官方api的javadoc，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.hibernate</li>\n		<li>\n			org.hibernate.action</li>\n		<li>\n			org.hibernate.annotations</li>\n		<li>\n			org.hibernate.bytecode</li>\n		<li>\n			org.hibernate.bytecode.buildtime</li>\n		<li>\n			org.hibernate.bytecode.cglib</li>\n		<li>\n			org.hibernate.bytecode.javassist</li>\n		<li>\n			org.hibernate.bytecode.util</li>\n		<li>\n			org.hibernate.cache</li>\n		<li>\n			org.hibernate.cache.access</li>\n		<li>\n			org.hibernate.cache.entry</li>\n		<li>\n			org.hibernate.cache.impl</li>\n		<li>\n			org.hibernate.cache.impl.bridge</li>\n		<li>\n			org.hibernate.cache.infinispan</li>\n		<li>\n			org.hibernate.cache.infinispan.access</li>\n		<li>\n			org.hibernate.cache.infinispan.collection</li>\n		<li>\n			org.hibernate.cache.infinispan.entity</li>\n		<li>\n			org.hibernate.cache.infinispan.impl</li>\n		<li>\n			org.hibernate.cache.infinispan.query</li>\n		<li>\n			org.hibernate.cache.infinispan.timestamp</li>\n		<li>\n			org.hibernate.cache.infinispan.tm</li>\n		<li>\n			org.hibernate.cache.infinispan.util</li>\n		<li>\n			org.hibernate.cache.jbc</li>\n		<li>\n			org.hibernate.cache.jbc.access</li>\n		<li>\n			org.hibernate.cache.jbc.builder</li>\n		<li>\n			org.hibernate.cache.jbc.collection</li>\n		<li>\n			org.hibernate.cache.jbc.entity</li>\n		<li>\n			org.hibernate.cache.jbc.query</li>\n		<li>\n			org.hibernate.cache.jbc.timestamp</li>\n		<li>\n			org.hibernate.cache.jbc.util</li>\n		<li>\n			org.hibernate.cache.jbc2</li>\n		<li>\n			org.hibernate.cfg</li>\n		<li>\n			org.hibernate.cfg.annotations</li>\n		<li>\n			org.hibernate.cfg.annotations.reflection</li>\n		<li>\n			org.hibernate.cfg.beanvalidation</li>\n		<li>\n			org.hibernate.cfg.search</li>\n		<li>\n			org.hibernate.classic</li>\n		<li>\n			org.hibernate.collection</li>\n		<li>\n			org.hibernate.connection</li>\n		<li>\n			org.hibernate.context</li>\n		<li>\n			org.hibernate.criterion</li>\n		<li>\n			org.hibernate.dialect</li>\n		<li>\n			org.hibernate.dialect.function</li>\n		<li>\n			org.hibernate.dialect.lock</li>\n		<li>\n			org.hibernate.dialect.resolver</li>\n		<li>\n			org.hibernate.ejb</li>\n		<li>\n			org.hibernate.ejb.connection</li>\n		<li>\n			org.hibernate.ejb.criteria</li>\n		<li>\n			org.hibernate.ejb.criteria.expression</li>\n		<li>\n			org.hibernate.ejb.criteria.expression.function</li>\n		<li>\n			org.hibernate.ejb.criteria.path</li>\n		<li>\n			org.hibernate.ejb.criteria.predicate</li>\n		<li>\n			org.hibernate.ejb.event</li>\n		<li>\n			org.hibernate.ejb.instrument</li>\n		<li>\n			org.hibernate.ejb.metamodel</li>\n		<li>\n			org.hibernate.ejb.packaging</li>\n		<li>\n			org.hibernate.ejb.transaction</li>\n		<li>\n			org.hibernate.ejb.util</li>\n		<li>\n			org.hibernate.engine</li>\n		<li>\n			org.hibernate.engine.jdbc</li>\n		<li>\n			org.hibernate.engine.loading</li>\n		<li>\n			org.hibernate.engine.profile</li>\n		<li>\n			org.hibernate.engine.query</li>\n		<li>\n			org.hibernate.engine.query.sql</li>\n		<li>\n			org.hibernate.engine.transaction</li>\n		<li>\n			org.hibernate.envers</li>\n		<li>\n			org.hibernate.envers.ant</li>\n		<li>\n			org.hibernate.envers.configuration</li>\n		<li>\n			org.hibernate.envers.configuration.metadata</li>\n		<li>\n			org.hibernate.envers.configuration.metadata.reader</li>\n		<li>\n			org.hibernate.envers.entities</li>\n		<li>\n			org.hibernate.envers.entities.mapper</li>\n		<li>\n			org.hibernate.envers.entities.mapper.id</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.component</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.initializor</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.lazy.proxy</li>\n		<li>\n			org.hibernate.envers.entities.mapper.relation.query</li>\n		<li>\n			org.hibernate.envers.event</li>\n		<li>\n			org.hibernate.envers.exception</li>\n		<li>\n			org.hibernate.envers.query</li>\n		<li>\n			org.hibernate.envers.query.criteria</li>\n		<li>\n			org.hibernate.envers.query.impl</li>\n		<li>\n			org.hibernate.envers.query.order</li>\n		<li>\n			org.hibernate.envers.query.projection</li>\n		<li>\n			org.hibernate.envers.query.property</li>\n		<li>\n			org.hibernate.envers.reader</li>\n		<li>\n			org.hibernate.envers.revisioninfo</li>\n		<li>\n			org.hibernate.envers.synchronization</li>\n		<li>\n			org.hibernate.envers.synchronization.work</li>\n		<li>\n			org.hibernate.envers.tools</li>\n		<li>\n			org.hibernate.envers.tools.graph</li>\n		<li>\n			org.hibernate.envers.tools.query</li>\n		<li>\n			org.hibernate.envers.tools.reflection</li>\n		<li>\n			org.hibernate.event</li>\n		<li>\n			org.hibernate.event.def</li>\n		<li>\n			org.hibernate.exception</li>\n		<li>\n			org.hibernate.hql</li>\n		<li>\n			org.hibernate.hql.ast</li>\n		<li>\n			org.hibernate.hql.ast.exec</li>\n		<li>\n			org.hibernate.hql.ast.tree</li>\n		<li>\n			org.hibernate.hql.ast.util</li>\n		<li>\n			org.hibernate.hql.classic</li>\n		<li>\n			org.hibernate.id</li>\n		<li>\n			org.hibernate.id.enhanced</li>\n		<li>\n			org.hibernate.id.factory</li>\n		<li>\n			org.hibernate.id.insert</li>\n		<li>\n			org.hibernate.impl</li>\n		<li>\n			org.hibernate.intercept</li>\n		<li>\n			org.hibernate.intercept.cglib</li>\n		<li>\n			org.hibernate.intercept.javassist</li>\n		<li>\n			org.hibernate.jdbc</li>\n		<li>\n			org.hibernate.jdbc.util</li>\n		<li>\n			org.hibernate.junit</li>\n		<li>\n			org.hibernate.junit.functional</li>\n		<li>\n			org.hibernate.loader</li>\n		<li>\n			org.hibernate.loader.collection</li>\n		<li>\n			org.hibernate.loader.criteria</li>\n		<li>\n			org.hibernate.loader.custom</li>\n		<li>\n			org.hibernate.loader.custom.sql</li>\n		<li>\n			org.hibernate.loader.entity</li>\n		<li>\n			org.hibernate.loader.hql</li>\n		<li>\n			org.hibernate.lob</li>\n		<li>\n			org.hibernate.mapping</li>\n		<li>\n			org.hibernate.metadata</li>\n		<li>\n			org.hibernate.param</li>\n		<li>\n			org.hibernate.persister</li>\n		<li>\n			org.hibernate.persister.collection</li>\n		<li>\n			org.hibernate.persister.entity</li>\n		<li>\n			org.hibernate.pretty</li>\n		<li>\n			org.hibernate.property</li>\n		<li>\n			org.hibernate.proxy</li>\n		<li>\n			org.hibernate.proxy.dom4j</li>\n		<li>\n			org.hibernate.proxy.map</li>\n		<li>\n			org.hibernate.proxy.pojo</li>\n		<li>\n			org.hibernate.proxy.pojo.cglib</li>\n		<li>\n			org.hibernate.proxy.pojo.javassist</li>\n		<li>\n			org.hibernate.secure</li>\n		<li>\n			org.hibernate.sql</li>\n		<li>\n			org.hibernate.sql.ordering.antlr</li>\n		<li>\n			org.hibernate.stat</li>\n		<li>\n			org.hibernate.test.annotations</li>\n		<li>\n			org.hibernate.test.cache</li>\n		<li>\n			org.hibernate.test.tm</li>\n		<li>\n			org.hibernate.tool.ant</li>\n		<li>\n			org.hibernate.tool.hbm2ddl</li>\n		<li>\n			org.hibernate.tool.instrument</li>\n		<li>\n			org.hibernate.tool.instrument.cglib</li>\n		<li>\n			org.hibernate.tool.instrument.javassist</li>\n		<li>\n			org.hibernate.transaction</li>\n		<li>\n			org.hibernate.transform</li>\n		<li>\n			org.hibernate.tuple</li>\n		<li>\n			org.hibernate.tuple.component</li>\n		<li>\n			org.hibernate.tuple.entity</li>\n		<li>\n			org.hibernate.type</li>\n		<li>\n			org.hibernate.usertype</li>\n		<li>\n			org.hibernate.util</li>\n		<li>\n			org.hibernate.util.xml</li>\n	</ol>\n</blockquote>\n', 'Hibernate 3.5.6.Final 官方api的javadoc，由 Gavin King、Christian Bauer、Max Rydahl Andersen、Emmanuel Bernard和Steve Ebersole、James Cobb (Graphic Design)、Cheyenne Weaver (Graphic Design)等人编写。', 1284825600000, '3.5.6.Final', '道长A', '', 'jboss.org', '', '本站下载-http://story.ajava.org/hibernate/3.5.6.final-javadoc-en-html.zip', '13M', '所有系统', 'LGPL', '英文', 1284885101715, 1284885101715, 'admin'),
('000000002b248517012b292912e90019', '000000002b0bf62e012b0bfbf7b80002', 'Hibernate 3.5.6.Final 下载', '最新的Hibernate 3.5.X 版本', NULL, '<p>\n	Hibernate 3.5.6.Final 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、日文、德语、法语、西班牙语、葡萄牙语的版本），是开发人员的必备工具。</p>\n<div id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<p>\n	本版本的Changelog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 3.5.6 (2010.09.11)<br />\n		-------------------------------------------<br />\n		http://opensource.atlassian.com/projects/hibernate/browse/HHH/fixforversion/11142</p>\n	<p>\n		**Bug<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-3334] - Cascade-save breaks if parent ID is assigned (delays insert) and child has identity ID (early insert) (Wallace Wadge)<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5142] - Exception when initializing lazy @ManyToMany indexed collection containing not audited entities<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5225] - Cannot parse order-by fragment if it contains a registered function without parentheses<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5310] - orm_2_0.xsd compliant mapping files break in JEE use cases<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5440] - Joined collection expressions not properly &quot;rendered&quot; in JPA Criteria queries<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5511] - Infinispan Region.destroy() impl should call cache.stop()<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5512] - JndiInfinispanRegionFactory shouldn&#39;t try to stop CacheManager<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5519] - VersionedItem should not extend Item, otherwise query cache results are confusing<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5542] - Infinispan region factory uses same cache instance for all timestamp regions<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5545] - Resolve query cache results not up to date testsuite failures<br />\n		<br />\n		**Improvement<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5564] - Upgrade to Infinispan 4.2.x<br />\n		<br />\n		**Task<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5505] - enable Sybase 15.5 in the test db profile<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5524] - Move tagRelease.sh into svn<br />\n		&nbsp;&nbsp;&nbsp; * [HHH-5547] - Remove &quot;old&quot; docbook sources and cleanup all HEAD references to simhei.ttf</p>\n</blockquote>\n', 'Hibernate 3.5.6.Final 文件含有最终的jars、依赖的jars、源代码以及官方的参考手册（包含中文、英文、日文、德语、法语、西班牙语、葡萄牙语的版本），是开发人员的必备工具。', 1284825600000, '3.5.6.Final', '道长A', '', 'jboss.org', '', '官方下载-http://nchc.dl.sourceforge.net/project/hibernate/hibernate3/3.5.6-Final/hibernate-distribution-3.5.6-Final-dist.zip\n本站下载-http://story.ajava.org/hibernate/3.5.6.final.zip', '51M', '所有系统', 'LGPL', '英文', 1284885779177, 1284885779177, 'admin'),
('000000002b248517012b2a7957920020', '000000002b248517012b2952d3ad001f', 'MyBatis 3.0.2 在线Java源码', '在线查看MyBatis源代码', NULL, '<p>\n	MyBatis 3.0.2 在线Java源码，直接通过浏览器浏览MyBatis的源代码，方便开发人员学习MyBatis的内部实现。</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	此文档包含了如下package：</div>\n<p>\n	MyBatis的源码没有注释，这不是一个好习惯。希望各位Java爱好者不要学习这点，写代码时一定要加上注释。</p>\n<p>\n	打开<a href="http://story.ajava.org/mybatis/3.0.2-src/" target="_blank">MyBatis 3.0.2 在线Java源码</a></p>\n', 'MyBatis 3.0.2 在线Java源码，直接通过浏览器浏览MyBatis的源代码，方便开发人员学习MyBatis的内部实现。', 1284825600000, '3.0.2', '道长A', '', 'mybatis.org', '', '', '', '所有系统', 'Apache', '英文', 1284907816850, 1286873157034, 'admin'),
('000000002b248517012b2a8179d60024', '000000002b248517012b29528904001e', 'MyBatis 3.0.2 参考手册 PDF下载', '介绍如何使用MyBatis进行开发', NULL, '<p>\n	MyBatis 3.0.2 的官方参考手册，比较详细地介绍了MyBatis的各个方面，并附有示例代码，是开发人员不可缺少的工具。唯一遗憾的是此为英文版本。建议大家先通过其他资料入门，在开发过程中遇到什么问题，可再来查看此参考手册。</p>\n<p>\n	此文档目录如下：</p>\n<p>\n	&nbsp;</p>\n<blockquote>\n	<ol>\n		<li>\n			What is MyBatis?</li>\n		<li>\n			Getting Started</li>\n		<li>\n			Building SqlSessionFactory from XML</li>\n		<li>\n			Building SqlSessionFactory without XML &nbsp;</li>\n		<li>\n			Acquiring a SqlSession from SqlSessionFactory &nbsp;</li>\n		<li>\n			Exploring Mapped SQL Statements &nbsp;</li>\n		<li>\n			A Note about Namespaces</li>\n		<li>\n			Scope and Lifecycle &nbsp;</li>\n		<li>\n			Mapper Configuration XML &nbsp;</li>\n		<li>\n			properties &nbsp;</li>\n		<li>\n			settings &nbsp;</li>\n		<li>\n			typeAliases&nbsp; &nbsp;</li>\n		<li>\n			typeHandlers&nbsp; &nbsp;</li>\n		<li>\n			objectFactory &nbsp;</li>\n		<li>\n			plugins &nbsp;</li>\n		<li>\n			environments &nbsp;</li>\n		<li>\n			transactionManager &nbsp;</li>\n		<li>\n			dataSource &nbsp;</li>\n		<li>\n			mappers&nbsp; &nbsp;</li>\n		<li>\n			SQL Map XML Files&nbsp; &nbsp;</li>\n		<li>\n			select&nbsp; &nbsp;</li>\n		<li>\n			insert, update, delete&nbsp; &nbsp;</li>\n		<li>\n			sql &nbsp;</li>\n		<li>\n			Parameters</li>\n		<li>\n			resultMap &nbsp;</li>\n		<li>\n			Advanced Result Mapping&nbsp; &nbsp;</li>\n		<li>\n			id, result&nbsp; &nbsp;</li>\n		<li>\n			Supported JDBC Types&nbsp; &nbsp;</li>\n		<li>\n			constructor &nbsp;</li>\n		<li>\n			association &nbsp;</li>\n		<li>\n			collection &nbsp;</li>\n		<li>\n			discriminator&nbsp; &nbsp;</li>\n		<li>\n			cache&nbsp; &nbsp;</li>\n		<li>\n			Using a Custom Cache&nbsp; &nbsp;</li>\n		<li>\n			cache-ref &nbsp;</li>\n		<li>\n			Dynamic SQL&nbsp; &nbsp;</li>\n		<li>\n			if &nbsp;</li>\n		<li>\n			choose, when, otherwise &nbsp;</li>\n		<li>\n			trim, where, set&nbsp; &nbsp;</li>\n		<li>\n			foreach &nbsp;</li>\n		<li>\n			Java API</li>\n		<li>\n			Directory Structure &nbsp;</li>\n		<li>\n			SqlSessions &nbsp;</li>\n		<li>\n			SqlSessionFactoryBuilder &nbsp;</li>\n		<li>\n			SqlSessionFactory</li>\n		<li>\n			SqlSession&nbsp; &nbsp;</li>\n		<li>\n			SelectBuilder&nbsp; &nbsp;</li>\n		<li>\n			SqlBuilder</li>\n	</ol>\n</blockquote>\n', 'MyBatis 3.0.2 的官方参考手册，比较详细地介绍了MyBatis的各个方面，并附有示例代码，是开发人员不可缺少的工具。唯一遗憾的是此为英文版本。建议大家先通过其他资料入门，在开发过程中遇到什么问题，可再来查看此参考手册。', 1284825600000, '3.0.2', '道长A', '', 'mybatis.org', '', '本站下载-http://story.ajava.org/mybatis/3.0.2-manual-en-pdf.zip', '485K', '所有系统', 'Apache', '英文', 1284908349910, 1284908349910, 'admin'),
('000000002b248517012b2a85fced0028', '000000002b248517012b29528904001e', 'MyBatis 3.0.2 下载', '含jar、源码', NULL, '<p>\n	MyBatis 3.0.2，含最终的jar、源代码以及相关的lib。</p>\n<p>\n	发行包里没有java api，源代码中也没有相关注释。作者似乎认为开发人员无须关注api。</p>', 'MyBatis 3.0.2，含最终的jar、源代码以及相关的lib。', 1284825600000, '3.0.2', '道长A', '', 'mybatis.org', '', '本站下载-http://story.ajava.org/mybatis/3.0.2.zip', '2M', '所有系统', 'Apache', '英文', 1284908645613, 1284908645613, 'admin'),
('000000002b248517012b2a8b648a002c', '000000002b248517012b29528904001e', '《iBatis 开发指南》PDF下载', '基础的iBatis入门教程', NULL, '<p>\n	相对 Hibernate和Apache OJB等&ldquo;一站式&rdquo;ORM解决方案而言，ibatis 是一种&ldquo;半自动化&rdquo;的ORM实现。</p>\n<p>\n	所谓&ldquo;半自动&rdquo; ，可能理解上有点生涩。纵观目前主流的 ORM，无论 Hibernate 还是Apache OJB，都对数据库结构提供了较为完整的封装，提供了从 POJO 到数据库表的全套映射机制。 程序员往往只需定义好了POJO 到数据库表的映射关系， 即可通过 Hibernat或者 OJB 提供的方法完成持久层操作。程序员甚至不需要对 SQL 的熟练掌握，Hibernate/OJB 会根据制定的存储逻辑，自动生成对应的 SQL 并调用 JDBC 接口加以执行。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			ibatis Quick Start</li>\n		<li>\n			准备工作</li>\n		<li>\n			构建 ibatis基础代码</li>\n		<li>\n			ibatis配置</li>\n		<li>\n			ibatis基础语义</li>\n		<li>\n			XmlSqlMapClientBuilder</li>\n		<li>\n			SqlMapClient</li>\n		<li>\n			SqlMapClient基本操作示例</li>\n		<li>\n			OR映射</li>\n		<li>\n			ibatis高级特性</li>\n		<li>\n			数据关联</li>\n		<li>\n			一对多关联</li>\n		<li>\n			一对一关联</li>\n		<li>\n			延迟加载</li>\n		<li>\n			动态映射</li>\n		<li>\n			事务管理</li>\n		<li>\n			基于 JDBC的事务管理机制</li>\n		<li>\n			基于 JTA的事务管理机制</li>\n		<li>\n			外部事务管理</li>\n		<li>\n			Cache</li>\n		<li>\n			MEMORY类型 Cache与 WeakReference</li>\n		<li>\n			LRU型 Cache</li>\n		<li>\n			FIFO型 Cache</li>\n		<li>\n			OSCache</li>\n	</ol>\n</blockquote>\n', '相对 Hibernate和Apache OJB等“一站式”ORM解决方案而言，ibatis 是一种“半自动化”的ORM实现。\n所谓“半自动” ，可能理解上有点生涩。纵观目前主流的 ORM，无论 Hibernate 还是Apache OJB，都对数据库结构提供了较为完整的封装，提供了从 POJO 到数据库表的全套映射机制。 程序员往往只需定义好了POJO 到数据库表的映射关系， 即可通过 Hibernat或者 OJB 提供的方法完成持久层操作。程序员甚至不需要对 SQL 的熟练掌握，Hibernate/OJB 会根据制定的存储逻辑，自动生成对应的 SQL 并调用 JDBC 接口加以执行。 ', 1284825600000, '1.0', '夏昕', '', '满江红', '', '本站下载-http://story.ajava.org/mybatis/ibatis-developer-guide-zh-pdf.zip', '321K', '所有系统', 'CC3', '中文', 1284908999818, 1284908999818, 'admin'),
('000000002b248517012b2a94cd430030', '000000002b248517012b29528904001e', '《iBATIS SQL Maps 开发指南》PDF下载', '介绍如何使用sql maps', NULL, '<p>\n	使用 SQL Map，能够大大减少访问关系数据库的代码。SQL Map 使用简单的 XML配置文件将 Java Bean 映射成 SQL 语句，对比其他的数据库持续层和 ORM 框架（如 JDO 的实现，Hibernate 等） ，SQL Map 最大的优点在于它简单易学。要使用 SQL Map，只要熟悉Java Bean，XML 和 SQL，就能使您充分发挥 SQL 语句的能力。</p>\n<p>\n	&nbsp;</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<div firebugversion="1.5.4" style="display: none;">\n	&nbsp;</div>\n<div firebugversion="1.5.4" style="display: none;">\n	&nbsp;</div>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			简介</li>\n		<li>\n			SQL Maps</li>\n		<li>\n			SQL Map XML配置文件</li>\n		<li>\n			SQL Map XML映射文件</li>\n		<li>\n			使用 SQL Map API编程</li>\n		<li>\n			用 Jakarta Commons Logging 记录 SQL Map日志</li>\n		<li>\n			Java Bean简易教程</li>\n		<li>\n			Resources</li>\n		<li>\n			SimpleDataSource</li>\n		<li>\n			ScriptRunner</li>\n	</ol>\n</blockquote>\n', '使用 SQL Map，能够大大减少访问关系数据库的代码。SQL Map 使用简单的 XML配置文件将 Java Bean 映射成 SQL 语句，对比其他的数据库持续层和 ORM 框架（如 JDO 的实现，Hibernate 等） ，SQL Map 最大的优点在于它简单易学。要使用 SQL Map，只要熟悉Java Bean，XML 和 SQL，就能使您充分发挥 SQL 语句的能力。', 1284825600000, '1.0', '刘涛', '', 'AJava', '', '本站下载-http://story.ajava.org/mybatis/ibatis-sql-maps-developer-guide-zh-pdf.zip', '440K', '所有系统', 'CC3', '中文', 1284909616451, 1284909616451, 'admin'),
('000000002b248517012b2a99be590034', '000000002b248517012b29528904001e', '《iBATIS SQL Maps 入门教程》PDF下载', 'mybatis的入门教程', NULL, '<p>\n	本文是初学者的快速入门教程，涵盖了 SQL Map 的一个简单而典型的应用。每个主题更详细的信息可以参考《iBatis SQL Maps 开发指南》。</p>', '本文是初学者的快速入门教程，涵盖了 SQL Map 的一个简单而典型的应用。每个主题更详细的信息可以参考《iBatis SQL Maps 开发指南》。', 1284825600000, '1.0', '刘涛', '', 'AJava', '', '本站下载-http://story.ajava.org/mybatis/ibatis-sql-maps-introduction-zh-pdf.zip', '66K', '所有系统', 'CC3', '中文', 1284909940313, 1284909981175, 'admin'),
('000000002b248517012b2aa1081c003a', '000000002b248517012b29528904001e', '《iBatis in Action》PDF下载', '最好的iBatis书籍', NULL, '<div>\n	<blockquote>\n		<p>\n			本书为英文版，适合有一定英文基础或熟练使用翻译工具的读者使用。</p>\n	</blockquote>\n	<p style="text-align: center;">\n		<img alt="" src="http://ecx.images-amazon.com/images/I/51QuNdyNgtL._BO2,204,203,200_PIsitb-sticker-arrow-click,TopRight,35,-76_AA300_SH20_OU01_.jpg" style="width: 300px; height: 300px;" /></p>\n	<p>\n		<i>iBATIS in Action</i> teaches Java developers and architects how to use the iBATIS framework to map relational databases to object-oriented programs. Written by the creator of iBATIS, this practical book presents patterns and solutions that readers can apply immediately.</p>\n	<p>\n		<i>iBATIS in Action</i> shows Java developers how to tackle the problem of data persistence using the elegant iBATIS framework. iBATIS helps developers solve the problem of connecting- or mapping- relational databases to object-oriented code. An extensive running example presents reusable iBATIS patterns and common solutions. The sample application shows where iBATIS fits in a typical web application as well as how iBATIS integrates with other popular frameworks like Struts. <i>iBATIS in Action</i> focuses on solving existing problems without introducing new ones.</p>\n	<p>\n		In addition to showing what iBATIS does, <i>iBATIS in Action</i> also shows how iBATIS solves problems. Readers explore the driving design philosophy behind iBATIS as presented by iBATIS creator Clinton Begin.</p>\n</div>\n', 'iBATIS in Action teaches Java developers and architects how to use the iBATIS framework to map relational databases to object-oriented programs. Written by the creator of iBATIS, this practical book presents patterns and solutions that readers can apply immediately.\n\niBATIS in Action shows Java developers how to tackle the problem of data persistence using the elegant iBATIS framework. iBATIS helps developers solve the problem of connecting- or mapping- relational databases to object-oriented code. An extensive running example presents reusable iBATIS patterns and common solutions. The sample application shows where iBATIS fits in a typical web application as well as how iBATIS integrates with other popular frameworks like Struts. iBATIS in Action focuses on solving existing problems without introducing new ones.\nIn addition to showing what iBATIS does, iBATIS in Action also shows how iBATIS solves problems. Readers explore the driving design philosophy behind iBATIS as presented by iBATIS creator Clinton Begin.', 1284825600000, '1.0', '道长A', '', 'AJava', '', '本站下载-http://story.ajava.org/mybatis/ibatis-in-action-en-pdf.zip', '2M', '所有系统', 'CC3', '英文', 1284910417948, 1284910417948, 'admin'),
('000000002b32bf45012b3e16a4350005', '000000002b32bf45012b3e0aa51c0003', 'Struts 1.3.10 all 下载', '含文档、源码、示例等', NULL, '<p>\n	Struts 1.3.10 完整下载包，含有struts用户指南、api文档、官方的示例、源码以及FAQ和HOWTO。</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<div firebugversion="1.5.4" style="display: none;">\n	&nbsp;</div>\n<p>\n	此版本的ChangeLog如下：</p>\n<blockquote>\n	<p>\n		Bug<br />\n		<br />\n		&nbsp;&nbsp;&nbsp; * [STR-2630] - Taglib documentation does not render embedded HTML<br />\n		&nbsp;&nbsp;&nbsp; * [STR-2802] - Validator validwhen cannot test between two different indices in array<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3026] - Linked examples hosted by &quot;Planet Struts&quot; nonexistant<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3052] - ImgTag missing actionId support<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3054] - EL-Example errors<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3070] - Postback forms cause NPE with classic RequestProcessor<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3076] - PasswordTag doesn&#39;t define the attribute onselect<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3080] - XLST instead of XSLT<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3081] - Uploading a File using LazyDynaBean causes ClassCastException<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3082] - Incomplete error message when failing to create a form bean<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3084] - Error on Tiles examples page<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3088] - N-length empty strings not treated as *null* by validwhen<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3093] - Taglibs TLD do not match tag implementations<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3097] - Generating site fails<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3110] - PropertyUtils.clearDescriptors() call in ActionServlet.destroy() method is causing appliction classloader memory leak on Weblogic Portal<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3112] - Generated javascript is wrong to set focus on control that is of array<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3143] - Struts jar remains &quot;in-use&quot; preventing dynamic redeployment<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3144] - Bean Taglib Documentation Has Been Unreadable FOR YEARS...<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3146] - TLD reports contain broken hyperlinks<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3161] - Servlet not injected into newly created action in higly concurrent env<br />\n		<br />\n		Improvement<br />\n		<br />\n		&nbsp;&nbsp;&nbsp; * [STR-1496] - html:form focus and focusIndex problem<br />\n		&nbsp;&nbsp;&nbsp; * [STR-1709] - FormTag: Add check for nonexistent form field in focus javascript<br />\n		&nbsp;&nbsp;&nbsp; * [STR-2810] - autocomplete attribute<br />\n		<br />\n		Task<br />\n		<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3055] - Figure out the &#39;disabled=&quot;${!empty pageScope}&quot; in EL-Example<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3134] - Upgrade JSTL from 1.0.2 to latest 1.0.6<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3150] - Upgrade Commons Chain to 1.2<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3163] - Upgrade Commons BeanUtils<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3171] - Lock down Maven plugin dependencies<br />\n		&nbsp;&nbsp;&nbsp; * [STR-3172] - Require Tomcat 5.5 for integration testing</p>\n</blockquote>\n', 'Struts 1.3.10 完整下载包，含有struts用户指南、api文档、官方的示例、源码以及FAQ和HOWTO。', 1285171200000, '1.3.10', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/binaries/struts-1.3.10-all.zip\n本站下载-http://story.ajava.org/struts/struts-1.3.10-all.zip', '44M', '所有系统', 'Apache', '英文', 1285236892725, 1285299651766, 'admin'),
('000000002b32bf45012b3e238fa00009', '000000002b32bf45012b3e0aa51c0003', 'Struts 1.3.10 官方示例下载', 'Struts官方示例', NULL, '<p>\n	Struts官方示例，可帮助你快速熟悉strtus的工作原理。包含了Blank、Cookbook、Examples、Faces、MailReader等应用。</p>\n<p>\n	内容如下：</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<blockquote>\n	<ol>\n		<li>\n			Blank - 一个简单的空应用，用于帮助你快速开始新的应用。</li>\n		<li>\n			Cookbook - 展示不同的实战技术，并且可查看源码。</li>\n		<li>\n			Examples - 几个组合了不同技术的示例。</li>\n		<li>\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exercise - 一组测试页面，用于展示自定义标签。</li>\n		<li>\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Upload - 示范如何上传文件（基于Commons Upload）。</li>\n		<li>\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Validator - 示范如何使用校验器。</li>\n		<li>\n			Faces - 示范Struts-Faces标签库。</li>\n		<li>\n			MailReader - 邮件阅读器。</li>\n	</ol>\n</blockquote>\n', 'Struts官方示例，可帮助你快速熟悉strtus的工作原理。包含了Blank、Cookbook、Examples、Faces、MailReader等应用。\n\nBlank - 一个简单的空应用，用于帮助你快速开始新的应用。\nCookbook - 展示不同的实战技术，并且可查看源码。\nExamples - 几个组合了不同技术的示例。\n          Exercise - 一组测试页面，用于展示自定义标签。\n          Upload - 示范如何上传文件（基于Commons Upload）。\n          Validator - 示范如何使用校验器。\nFaces - 示范Struts-Faces标签库。\nMailReader - 邮件阅读器。\n', 1285171200000, '1.3.10', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/examples/struts-1.3.10-apps.zip\n本站下载-http://story.ajava.org/struts/struts-1.3.10-apps.zip', '19M', '所有系统', 'Apache', '英文', 1285237739424, 1285301190996, 'admin'),
('000000002b32bf45012b3e321241000f', '000000002b32bf45012b3e0aa51c0003', 'Struts 1.3.10 官方文档下载', '含用户指南、Javadocs、FAQS和HOWTOs等', NULL, '<p>\n	Struts 1.3.10 官方文档下载，含用户指南、FAQ和HOWTO、Javadocs、DTDDoc，以及 Struts Apps、Struts EL、Struts Extras、Struts Faces、Struts Scripting、 Struts Taglib、 Struts Tiles的参考文档和API文档。</p>\n<p>\n	用户指南包含如下内容：</p>\n<blockquote>\n	<ol>\n		<li>\n			介绍</li>\n		<li>\n			构件Model组件</li>\n		<li>\n			构件View组件</li>\n		<li>\n			构件Controller组件</li>\n		<li>\n			配置应用</li>\n		<li>\n			入门指南</li>\n	</ol>\n</blockquote>\n<p>\n	FAQ和HOWTO包含如下内容：</p>\n<blockquote>\n	<ol>\n		<li>\n			入门FAQ</li>\n		<li>\n			新手FAQ</li>\n		<li>\n			Struts工作原理</li>\n		<li>\n			访问数据库</li>\n		<li>\n			构件一个Action Form</li>\n		<li>\n			构件应用</li>\n		<li>\n			使用Struts校验器</li>\n		<li>\n			安装Struts到Eclipse</li>\n		<li>\n			安装Struts到NetBean</li>\n	</ol>\n</blockquote>\n', 'Struts 1.3.10 官方文档下载，含用户指南、FAQS和HOWTOs、Javadocs、DTDDoc，以及 Struts Apps、Struts EL、Struts Extras、Struts Faces、Struts Scripting、 Struts Taglib、 Struts Tiles的相关文档。\n', 1285171200000, '1.3.10', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/documentation/struts-1.3.10-docs.zip\n本站下载-http://story.ajava.org/struts/struts-1.3.10-docs.zip', '16M', '所有系统', 'Apache', '英文', 1285238690369, 1285298137528, 'admin'),
('000000002b32bf45012b3ec7afc70013', '000000002b32bf45012b3e0aa51c0003', 'Struts 1.3.10 jar包下载', '含Struts核心、扩展包及其依赖的jar', NULL, '<p>\n	Struts 1.3.10 jar包下载，含Struts核心包、扩展包及其依赖的jar。</p>\n', 'Struts 1.3.10 jar包下载，含Struts核心包、扩展包及其依赖的jar。', 1285171200000, '1.3.10', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/library/struts-1.3.10-lib.zip\n本站下载-http://story.ajava.org/struts/struts-1.3.10-lib.zip', '3M', '所有系统', 'Apache', '英文', 1285248495559, 1285248495559, 'admin'),
('000000002b32bf45012b419ff8210017', '000000002b32bf45012b3e0aa51c0003', 'Struts 1.3.10 源码下载', '含struts核心、扩展、示例源码', NULL, '<p>\n	Struts 1.3.10 源码下载，含struts核心、扩展、示例源码。</p>\n<p>\n	此文档包含但多于如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.apache.struts</li>\n		<li>\n			org.apache.struts.action</li>\n		<li>\n			org.apache.struts.actions</li>\n		<li>\n			org.apache.struts.apps.mailreader.dao</li>\n		<li>\n			org.apache.struts.apps.mailreader.dao.impl</li>\n		<li>\n			org.apache.struts.apps.mailreader.dao.impl.memory</li>\n		<li>\n			org.apache.struts.chain</li>\n		<li>\n			org.apache.struts.chain.commands</li>\n		<li>\n			org.apache.struts.chain.commands.generic</li>\n		<li>\n			org.apache.struts.chain.commands.servlet</li>\n		<li>\n			org.apache.struts.chain.commands.util</li>\n		<li>\n			org.apache.struts.chain.contexts</li>\n		<li>\n			org.apache.struts.config</li>\n		<li>\n			org.apache.struts.config.impl</li>\n		<li>\n			org.apache.struts.faces</li>\n		<li>\n			org.apache.struts.faces.application</li>\n		<li>\n			org.apache.struts.faces.component</li>\n		<li>\n			org.apache.struts.faces.renderer</li>\n		<li>\n			org.apache.struts.faces.taglib</li>\n		<li>\n			org.apache.struts.faces.util</li>\n		<li>\n			org.apache.struts.mock</li>\n		<li>\n			org.apache.struts.plugins</li>\n		<li>\n			org.apache.struts.scripting</li>\n		<li>\n			org.apache.struts.taglib</li>\n		<li>\n			org.apache.struts.taglib.bean</li>\n		<li>\n			org.apache.struts.taglib.html</li>\n		<li>\n			org.apache.struts.taglib.logic</li>\n		<li>\n			org.apache.struts.taglib.nested</li>\n		<li>\n			org.apache.struts.taglib.nested.bean</li>\n		<li>\n			org.apache.struts.taglib.nested.html</li>\n		<li>\n			org.apache.struts.taglib.nested.logic</li>\n		<li>\n			org.apache.struts.tiles</li>\n		<li>\n			org.apache.struts.tiles.actions</li>\n		<li>\n			org.apache.struts.tiles.beans</li>\n		<li>\n			org.apache.struts.tiles.commands</li>\n		<li>\n			org.apache.struts.tiles.definition</li>\n		<li>\n			org.apache.struts.tiles.taglib</li>\n		<li>\n			org.apache.struts.tiles.taglib.util</li>\n		<li>\n			org.apache.struts.tiles.xmlDefinition</li>\n		<li>\n			org.apache.struts.upload</li>\n		<li>\n			org.apache.struts.util</li>\n		<li>\n			org.apache.struts.validator</li>\n		<li>\n			org.apache.struts.validator.validwhen</li>\n		<li>\n			org.apache.strutsel.taglib.bean</li>\n		<li>\n			org.apache.strutsel.taglib.html</li>\n		<li>\n			org.apache.strutsel.taglib.logic</li>\n		<li>\n			org.apache.strutsel.taglib.tiles</li>\n		<li>\n			org.apache.strutsel.taglib.utils</li>\n	</ol>\n</blockquote>', 'Struts 1.3.10 源码下载，含struts核心、扩展、示例源码。', 1285257600000, '1.3.10', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/source/struts-1.3.10-src.zip\n本站下载-http://story.ajava.org/struts/struts-1.3.10-src.zip', '6M', '所有系统', 'Apache', '英文', 1285296224289, 1285297153680, 'admin'),
('000000002b32bf45012b41a53e50001b', '000000002b32bf45012b3e0a81310002', 'Struts 1.3.10 在线官方文档', '含用户指南、Javadocs、FAQS和HOWTOs等', NULL, '<p>\n	Struts 1.3.10 官方文档下载，含用户指南、FAQS和HOWTOs、Javadocs、DTDDoc，以及 Struts Apps、Struts EL、Struts Extras、Struts Faces、Struts Scripting、 Struts Taglib、 Struts Tiles的相关文档。</p>\n<p>\n	用户指南包含如下内容：</p>\n<blockquote>\n	<ol>\n		<li>\n			介绍</li>\n		<li>\n			构件Model组件</li>\n		<li>\n			构件View组件</li>\n		<li>\n			构件Controller组件</li>\n		<li>\n			配置应用</li>\n		<li>\n			入门指南</li>\n	</ol>\n</blockquote>\n<p>\n	FAQ和HOWTO包含如下内容：</p>\n<blockquote>\n	<ol>\n		<li>\n			入门FAQ</li>\n		<li>\n			新手FAQ</li>\n		<li>\n			Struts工作原理</li>\n		<li>\n			访问数据库</li>\n		<li>\n			构件一个Action Form</li>\n		<li>\n			构件应用</li>\n		<li>\n			使用Struts校验器</li>\n		<li>\n			安装Struts到Eclipse</li>\n		<li>\n			安装Struts到NetBean</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/struts/1.3.10-doc/">Struts 1.3.10 在线官方文档</a></p>', 'Struts 1.3.10 官方文档下载，含用户指南、FAQS和HOWTOs、Javadocs、DTDDoc，以及 Struts Apps、Struts EL、Struts Extras、Struts Faces、Struts Scripting、 Struts Taglib、 Struts Tiles的相关文档。', 1285257600000, '1.3.10', '道长A', '', 'apache.org', '', '', '', '所有系统', 'Apache', '英文', 1285296569936, 1285298189780, 'admin'),
('000000002b32bf45012b41abec68001f', '000000002b32bf45012b3e0accdc0004', 'Struts 1.3.10 在线Java源码', '在线查看Struts源代码', NULL, '<p>\n	Struts 1.3.10在线Java源码，直接通过浏览器浏览Struts的源代码，方便开发人员学习Struts的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.apache.struts</li>\n		<li>\n			org.apache.struts.action</li>\n		<li>\n			org.apache.struts.actions</li>\n		<li>\n			org.apache.struts.apps.mailreader.dao</li>\n		<li>\n			org.apache.struts.apps.mailreader.dao.impl</li>\n		<li>\n			org.apache.struts.apps.mailreader.dao.impl.memory</li>\n		<li>\n			org.apache.struts.chain</li>\n		<li>\n			org.apache.struts.chain.commands</li>\n		<li>\n			org.apache.struts.chain.commands.generic</li>\n		<li>\n			org.apache.struts.chain.commands.servlet</li>\n		<li>\n			org.apache.struts.chain.commands.util</li>\n		<li>\n			org.apache.struts.chain.contexts</li>\n		<li>\n			org.apache.struts.config</li>\n		<li>\n			org.apache.struts.config.impl</li>\n		<li>\n			org.apache.struts.faces</li>\n		<li>\n			org.apache.struts.faces.application</li>\n		<li>\n			org.apache.struts.faces.component</li>\n		<li>\n			org.apache.struts.faces.renderer</li>\n		<li>\n			org.apache.struts.faces.taglib</li>\n		<li>\n			org.apache.struts.faces.util</li>\n		<li>\n			org.apache.struts.mock</li>\n		<li>\n			org.apache.struts.plugins</li>\n		<li>\n			org.apache.struts.scripting</li>\n		<li>\n			org.apache.struts.taglib</li>\n		<li>\n			org.apache.struts.taglib.bean</li>\n		<li>\n			org.apache.struts.taglib.html</li>\n		<li>\n			org.apache.struts.taglib.logic</li>\n		<li>\n			org.apache.struts.taglib.nested</li>\n		<li>\n			org.apache.struts.taglib.nested.bean</li>\n		<li>\n			org.apache.struts.taglib.nested.html</li>\n		<li>\n			org.apache.struts.taglib.nested.logic</li>\n		<li>\n			org.apache.struts.tiles</li>\n		<li>\n			org.apache.struts.tiles.actions</li>\n		<li>\n			org.apache.struts.tiles.beans</li>\n		<li>\n			org.apache.struts.tiles.commands</li>\n		<li>\n			org.apache.struts.tiles.definition</li>\n		<li>\n			org.apache.struts.tiles.taglib</li>\n		<li>\n			org.apache.struts.tiles.taglib.util</li>\n		<li>\n			org.apache.struts.tiles.xmlDefinition</li>\n		<li>\n			org.apache.struts.upload</li>\n		<li>\n			org.apache.struts.util</li>\n		<li>\n			org.apache.struts.validator</li>\n		<li>\n			org.apache.struts.validator.validwhen</li>\n		<li>\n			org.apache.strutsel.taglib.bean</li>\n		<li>\n			org.apache.strutsel.taglib.html</li>\n		<li>\n			org.apache.strutsel.taglib.logic</li>\n		<li>\n			org.apache.strutsel.taglib.tiles</li>\n		<li>\n			org.apache.strutsel.taglib.utils</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/struts/1.3.10-src/">Struts 1.3.10在线Java源码</a></p>\n', 'Struts 1.3.10在线Java源码，直接通过浏览器浏览Struts的源代码，方便开发人员学习Struts的内部实现。', 1285257600000, '1.3.10', '道长A', '', 'apache.org', '', '', '', '所有系统', 'Apache', '英文', 1285297007720, 1286873092242, 'admin'),
('000000002b32bf45012b41d40b630029', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.0.14 all 下载', '含文档、源码、示例等', NULL, '<p>\n	Struts 2.0.14 完整下载包，含有struts jar包及其依赖的包、struts教程、用户指南、api文档、官方的示例、源码以及FAQ和Cookbook、完整的Struts Tag参考手册、插件API文档。</p>\n<p>\n	Struts 2.0.14是2.0.12的bug修复版本，所有使用2.0.12的用户应尽快升级到2.0.14。</p>', 'Struts 2.0.14 完整下载包，含有struts jar包及其依赖的包、struts教程、用户指南、api文档、官方的示例、源码以及FAQ和Cookbook、完整的Struts Tag参考手册、插件API文档。', 1285257600000, '2.0.14', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/binaries/struts-2.0.14-all.zip\n本站下载-http://story.ajava.org/struts/struts-2.0.14-all.zip', '89M', '所有系统', 'Apache', '英文', 1285299637091, 1285302499855, 'admin'),
('000000002b32bf45012b41eb0d4b0031', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.0.14 官方示例下载', 'Struts官方示例', NULL, '<p>\n	Struts官方示例，可帮助你快速熟悉strtus的工作原理。包含了Blank、Portlet、Showcase、Other Examples、MailReader等应用。</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<div firebugversion="1.5.4" style="display: none;">\n	&nbsp;</div>\n<p>\n	内容如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			Blank - 一个简单的空应用，用于帮助你快速开始新的应用。</li>\n		<li>\n			Portlet- 一个portlet示例。</li>\n		<li>\n			Examples - 几个组合了不同技术的示例。</li>\n		<li>\n			MailReader - 邮件阅读器。</li>\n		<li>\n			Showcase - 一个普通的示例。</li>\n	</ol>\n</blockquote>\n', 'Struts官方示例，可帮助你快速熟悉strtus的工作原理。包含了Blank、Portlet、Showcase、Other Examples、MailReader等应用。', 1285257600000, '2.0.14', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/examples/struts-2.0.14-apps.zip\n本站下载-http://story.ajava.org/struts/struts-2.0.14-apps.zip', '22M', '所有系统', 'Apache', '英文', 1285301144907, 1285301169714, 'admin'),
('000000002b32bf45012b41edf35d0039', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.0.14 jar包下载', '含Struts核心、扩展包及其依赖的jar', NULL, '<p>\n	Struts 2.0.14 jar包下载，含Struts核心包、扩展包及其依赖的jar。</p>', 'Struts 2.0.14 jar包下载，含Struts核心包、扩展包及其依赖的jar。', 1285257600000, '2.0.14', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/library/struts-2.0.14-lib.zip\n本站下载-http://story.ajava.org/struts/struts-2.0.14-lib.zip', '6M', '所有系统', 'Apache', '英文', 1285301334877, 1285301334877, 'admin'),
('000000002b32bf45012b41f0dac2003d', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.0.14 源码下载', '含struts核心、扩展、示例源码', NULL, '<p>\n	Struts 2.0.14 源码下载，含struts核心、扩展、示例源码。</p>\n<p>\n	此文档包含但多于如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			com.opensymphony.xwork2</li>\n		<li>\n			com.opensymphony.xwork2.config</li>\n		<li>\n			com.opensymphony.xwork2.config.entities</li>\n		<li>\n			com.opensymphony.xwork2.config.impl</li>\n		<li>\n			com.opensymphony.xwork2.config.providers</li>\n		<li>\n			com.opensymphony.xwork2.conversion.annotations</li>\n		<li>\n			com.opensymphony.xwork2.conversion.metadata</li>\n		<li>\n			com.opensymphony.xwork2.inject</li>\n		<li>\n			com.opensymphony.xwork2.inject.util</li>\n		<li>\n			com.opensymphony.xwork2.interceptor</li>\n		<li>\n			com.opensymphony.xwork2.interceptor.annotations</li>\n		<li>\n			com.opensymphony.xwork2.mock</li>\n		<li>\n			com.opensymphony.xwork2.spring</li>\n		<li>\n			com.opensymphony.xwork2.spring.interceptor</li>\n		<li>\n			com.opensymphony.xwork2.util</li>\n		<li>\n			com.opensymphony.xwork2.util.location</li>\n		<li>\n			com.opensymphony.xwork2.util.profiling</li>\n		<li>\n			com.opensymphony.xwork2.validator</li>\n		<li>\n			com.opensymphony.xwork2.validator.annotations</li>\n		<li>\n			com.opensymphony.xwork2.validator.metadata</li>\n		<li>\n			com.opensymphony.xwork2.validator.validators</li>\n		<li>\n			org.apache.struts2</li>\n		<li>\n			org.apache.struts2.components</li>\n		<li>\n			org.apache.struts2.components.table</li>\n		<li>\n			org.apache.struts2.components.table.renderer</li>\n		<li>\n			org.apache.struts2.components.template</li>\n		<li>\n			org.apache.struts2.config</li>\n		<li>\n			org.apache.struts2.dispatcher</li>\n		<li>\n			org.apache.struts2.dispatcher.mapper</li>\n		<li>\n			org.apache.struts2.dispatcher.multipart</li>\n		<li>\n			org.apache.struts2.impl</li>\n		<li>\n			org.apache.struts2.interceptor</li>\n		<li>\n			org.apache.struts2.interceptor.debugging</li>\n		<li>\n			org.apache.struts2.interceptor.validation</li>\n		<li>\n			org.apache.struts2.portlet</li>\n		<li>\n			org.apache.struts2.portlet.context</li>\n		<li>\n			org.apache.struts2.portlet.dispatcher</li>\n		<li>\n			org.apache.struts2.portlet.interceptor</li>\n		<li>\n			org.apache.struts2.portlet.result</li>\n		<li>\n			org.apache.struts2.portlet.servlet</li>\n		<li>\n			org.apache.struts2.portlet.util</li>\n		<li>\n			org.apache.struts2.servlet.interceptor</li>\n		<li>\n			org.apache.struts2.util</li>\n		<li>\n			org.apache.struts2.validators</li>\n		<li>\n			org.apache.struts2.views</li>\n		<li>\n			org.apache.struts2.views.annotations</li>\n		<li>\n			org.apache.struts2.views.freemarker</li>\n		<li>\n			org.apache.struts2.views.freemarker.tags</li>\n		<li>\n			org.apache.struts2.views.jsp</li>\n		<li>\n			org.apache.struts2.views.jsp.iterator</li>\n		<li>\n			org.apache.struts2.views.jsp.ui</li>\n		<li>\n			org.apache.struts2.views.jsp.ui.table</li>\n		<li>\n			org.apache.struts2.views.util</li>\n		<li>\n			org.apache.struts2.views.velocity</li>\n		<li>\n			org.apache.struts2.views.velocity.components</li>\n		<li>\n			org.apache.struts2.views.xslt</li>\n	</ol>\n</blockquote>', 'Struts 2.0.14 源码下载，含struts核心、扩展、示例源码。', 1285257600000, '2.0.14', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/source/struts-2.0.14-src.zip\n本站下载-http://story.ajava.org/struts/struts-2.0.14-src.zip', '20M', '所有系统', 'Apache', '英文', 1285301525186, 1285302361587, 'admin'),
('000000002b32bf45012b420419350045', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.0.14 官方文档下载', '含教程、指南、Javadocs、FAQ等', NULL, '<p>\n	Struts 2.0.14 官方文档，含有入门指南、教程、用户指南、FAQ、Struts Core api文档、Xwork api 文档、标记库参考手册、以及一些插件的api文档，是学习、开发Struts 2的必备手册。</p>', 'Struts 2.0.14 官方文档，含有入门指南、教程、用户指南、FAQ、Struts Core api文档、Xwork api 文档、标记库参考手册、以及一些插件的api文档，是学习、开发Struts 2的必备手册。', 1285257600000, '2.0.14', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/documentation/struts-2.0.14-docs.zip\n本站下载-http://story.ajava.org/struts/struts-2.0.14-docs.zip', '57M', '所有系统', 'Apache', '英文', 1285302786357, 1285302786357, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b32bf45012b420989e70049', '000000002b32bf45012b3e0accdc0004', 'Struts 2.0.14 在线Java源码', '在线查看Struts源代码', NULL, '<p>\n	Struts 2.0.14在线Java源码，直接通过浏览器浏览Struts的源代码，方便开发人员学习Struts的内部实现。</p>\n<p>\n	此文档包含但多于如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			com.opensymphony.xwork2</li>\n		<li>\n			com.opensymphony.xwork2.config</li>\n		<li>\n			com.opensymphony.xwork2.config.entities</li>\n		<li>\n			com.opensymphony.xwork2.config.impl</li>\n		<li>\n			com.opensymphony.xwork2.config.providers</li>\n		<li>\n			com.opensymphony.xwork2.conversion.annotations</li>\n		<li>\n			com.opensymphony.xwork2.conversion.metadata</li>\n		<li>\n			com.opensymphony.xwork2.inject</li>\n		<li>\n			com.opensymphony.xwork2.inject.util</li>\n		<li>\n			com.opensymphony.xwork2.interceptor</li>\n		<li>\n			com.opensymphony.xwork2.interceptor.annotations</li>\n		<li>\n			com.opensymphony.xwork2.mock</li>\n		<li>\n			com.opensymphony.xwork2.spring</li>\n		<li>\n			com.opensymphony.xwork2.spring.interceptor</li>\n		<li>\n			com.opensymphony.xwork2.util</li>\n		<li>\n			com.opensymphony.xwork2.util.location</li>\n		<li>\n			com.opensymphony.xwork2.util.profiling</li>\n		<li>\n			com.opensymphony.xwork2.validator</li>\n		<li>\n			com.opensymphony.xwork2.validator.annotations</li>\n		<li>\n			com.opensymphony.xwork2.validator.metadata</li>\n		<li>\n			com.opensymphony.xwork2.validator.validators</li>\n		<li>\n			org.apache.struts2</li>\n		<li>\n			org.apache.struts2.components</li>\n		<li>\n			org.apache.struts2.components.table</li>\n		<li>\n			org.apache.struts2.components.table.renderer</li>\n		<li>\n			org.apache.struts2.components.template</li>\n		<li>\n			org.apache.struts2.config</li>\n		<li>\n			org.apache.struts2.dispatcher</li>\n		<li>\n			org.apache.struts2.dispatcher.mapper</li>\n		<li>\n			org.apache.struts2.dispatcher.multipart</li>\n		<li>\n			org.apache.struts2.impl</li>\n		<li>\n			org.apache.struts2.interceptor</li>\n		<li>\n			org.apache.struts2.interceptor.debugging</li>\n		<li>\n			org.apache.struts2.interceptor.validation</li>\n		<li>\n			org.apache.struts2.portlet</li>\n		<li>\n			org.apache.struts2.portlet.context</li>\n		<li>\n			org.apache.struts2.portlet.dispatcher</li>\n		<li>\n			org.apache.struts2.portlet.interceptor</li>\n		<li>\n			org.apache.struts2.portlet.result</li>\n		<li>\n			org.apache.struts2.portlet.servlet</li>\n		<li>\n			org.apache.struts2.portlet.util</li>\n		<li>\n			org.apache.struts2.servlet.interceptor</li>\n		<li>\n			org.apache.struts2.util</li>\n		<li>\n			org.apache.struts2.validators</li>\n		<li>\n			org.apache.struts2.views</li>\n		<li>\n			org.apache.struts2.views.annotations</li>\n		<li>\n			org.apache.struts2.views.freemarker</li>\n		<li>\n			org.apache.struts2.views.freemarker.tags</li>\n		<li>\n			org.apache.struts2.views.jsp</li>\n		<li>\n			org.apache.struts2.views.jsp.iterator</li>\n		<li>\n			org.apache.struts2.views.jsp.ui</li>\n		<li>\n			org.apache.struts2.views.jsp.ui.table</li>\n		<li>\n			org.apache.struts2.views.util</li>\n		<li>\n			org.apache.struts2.views.velocity</li>\n		<li>\n			org.apache.struts2.views.velocity.components</li>\n		<li>\n			org.apache.struts2.views.xslt</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/struts/2.0.14-src/">Struts 2.0.14在线Java源码</a></p>\n', 'Struts 2.0.14在线Java源码，直接通过浏览器浏览Struts的源代码，方便开发人员学习Struts的内部实现。', 1285257600000, '2.0.14', '道长A', '', 'apache.org', '', '', '', '所有系统', 'Apache', '英文', 1285303142887, 1286873105254, 'admin'),
('000000002b32bf45012b4229ae05004d', '000000002b32bf45012b3e0a81310002', 'Struts 2.0.14 在线官方文档', '含教程、指南、Javadocs、FAQ等', NULL, '<p>\n	Struts 2.0.14 官方文档，含有入门指南、教程、用户指南、FAQ、Struts Core api文档、Xwork api 文档、标记库参考手册、以及一些插件的api文档，是学习、开发Struts 2的必备手册。</p>\n<p>\n	打开<a href="http://story.ajava.org/struts/2.0.14-doc/">Struts 2.0.14 在线官方文档</a>。</p>\n', 'Struts 2.0.14 官方文档，含有入门指南、教程、用户指南、FAQ、Struts Core api文档、Xwork api 文档、标记库参考手册、以及一些插件的api文档，是学习、开发Struts 2的必备手册。', 1285257600000, '2.0.14', '道长A', '', 'apache.org', '', '', '', '所有系统', 'Apache', '英文', 1285305249285, 1285305249285, 'admin'),
('000000002b32bf45012b42c8f7f50051', '000000002b32bf45012b3e0a81310002', 'Struts 2.2.1 在线官方文档', '含教程、指南、Javadocs、FAQ等', NULL, '<p>\n	Struts 2.2.1 官方文档，含有入门指南、教程、用户指南、FAQ、Struts Core api文档、Xwork api 文档、标记库参考手册、以及一些插件的api文档，是学习、开发Struts 2的必备手册。</p>\n<p>\n	打开<a href="http://story.ajava.org/struts/2.2.1-doc/guides.html">Struts 2.2.1 在线开发指南</a>。</p>\n<p>\n	打开<a href="http://struts.apache.org/2.2.1/struts2-core/apidocs/index.html">Struts 2.2.1 在线api文档</a></p>\n<p>\n	打开<a href="http://story.ajava.org/struts/2.2.1-doc/tag-reference.html">Struts 2.2.1 Tag参考手册</a></p>', 'Struts 2.2.1 官方文档，含有入门指南、教程、用户指南、FAQ、Struts Core api文档、Xwork api 文档、标记库参考手册、以及一些插件的api文档，是学习、开发Struts 2的必备手册。', 1285257600000, '2.2.1', '道长A', '', 'apache.org', '', '', '', '所有系统', 'Apache', '英文', 1285315688437, 1285317437999, 'admin'),
('000000002b32bf45012b42d1a7380055', '000000002b32bf45012b3e0accdc0004', 'Struts 2.2.1 在线Java源码', '在线查看Struts源代码', NULL, '<p>\n	Struts 2.2.1在线Java源码，直接通过浏览器浏览Struts的源代码，方便开发人员学习Struts的内部实现。</p>\n<p>\n	此文档包含但多于如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			com.opensymphony.xwork2</li>\n		<li>\n			com.opensymphony.xwork2.config</li>\n		<li>\n			com.opensymphony.xwork2.config.entities</li>\n		<li>\n			com.opensymphony.xwork2.config.impl</li>\n		<li>\n			com.opensymphony.xwork2.config.providers</li>\n		<li>\n			com.opensymphony.xwork2.conversion</li>\n		<li>\n			com.opensymphony.xwork2.conversion.annotations</li>\n		<li>\n			com.opensymphony.xwork2.conversion.impl</li>\n		<li>\n			com.opensymphony.xwork2.conversion.metadata</li>\n		<li>\n			com.opensymphony.xwork2.inject</li>\n		<li>\n			com.opensymphony.xwork2.inject.util</li>\n		<li>\n			com.opensymphony.xwork2.interceptor</li>\n		<li>\n			com.opensymphony.xwork2.interceptor.annotations</li>\n		<li>\n			com.opensymphony.xwork2.mock</li>\n		<li>\n			com.opensymphony.xwork2.ognl</li>\n		<li>\n			com.opensymphony.xwork2.ognl.accessor</li>\n		<li>\n			com.opensymphony.xwork2.spring</li>\n		<li>\n			com.opensymphony.xwork2.spring.interceptor</li>\n		<li>\n			com.opensymphony.xwork2.test</li>\n		<li>\n			com.opensymphony.xwork2.util</li>\n		<li>\n			com.opensymphony.xwork2.util.classloader</li>\n		<li>\n			com.opensymphony.xwork2.util.finder</li>\n		<li>\n			com.opensymphony.xwork2.util.location</li>\n		<li>\n			com.opensymphony.xwork2.util.logging</li>\n		<li>\n			com.opensymphony.xwork2.util.logging.commons</li>\n		<li>\n			com.opensymphony.xwork2.util.logging.jdk</li>\n		<li>\n			com.opensymphony.xwork2.util.profiling</li>\n		<li>\n			com.opensymphony.xwork2.util.reflection</li>\n		<li>\n			com.opensymphony.xwork2.validator</li>\n		<li>\n			com.opensymphony.xwork2.validator.annotations</li>\n		<li>\n			com.opensymphony.xwork2.validator.metadata</li>\n		<li>\n			com.opensymphony.xwork2.validator.validators</li>\n		<li>\n			org.apache.struts2</li>\n		<li>\n			org.apache.struts2.components</li>\n		<li>\n			org.apache.struts2.components.template</li>\n		<li>\n			org.apache.struts2.config</li>\n		<li>\n			org.apache.struts2.dispatcher</li>\n		<li>\n			org.apache.struts2.dispatcher.mapper</li>\n		<li>\n			org.apache.struts2.dispatcher.multipart</li>\n		<li>\n			org.apache.struts2.dispatcher.ng</li>\n		<li>\n			org.apache.struts2.dispatcher.ng.filter</li>\n		<li>\n			org.apache.struts2.dispatcher.ng.listener</li>\n		<li>\n			org.apache.struts2.dispatcher.ng.servlet</li>\n		<li>\n			org.apache.struts2.impl</li>\n		<li>\n			org.apache.struts2.interceptor</li>\n		<li>\n			org.apache.struts2.interceptor.debugging</li>\n		<li>\n			org.apache.struts2.interceptor.validation</li>\n		<li>\n			org.apache.struts2.servlet.interceptor</li>\n		<li>\n			org.apache.struts2.util</li>\n		<li>\n			org.apache.struts2.views</li>\n		<li>\n			org.apache.struts2.views.annotations</li>\n		<li>\n			org.apache.struts2.views.freemarker</li>\n		<li>\n			org.apache.struts2.views.freemarker.tags</li>\n		<li>\n			org.apache.struts2.views.jsp</li>\n		<li>\n			org.apache.struts2.views.jsp.iterator</li>\n		<li>\n			org.apache.struts2.views.jsp.ui</li>\n		<li>\n			org.apache.struts2.views.util</li>\n		<li>\n			org.apache.struts2.views.velocity</li>\n		<li>\n			org.apache.struts2.views.velocity.components</li>\n		<li>\n			org.apache.struts2.views.xslt</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/struts/2.2.1-src/">Struts 2.2.1在线Java源码</a></p>\n', 'Struts 2.2.1在线Java源码，直接通过浏览器浏览Struts的源代码，方便开发人员学习Struts的内部实现。', 1285257600000, '2.2.1', '道长A', '', 'apache.org', '', '', '', '所有系统', 'Apache', '英文', 1285316257592, 1286873118693, 'admin'),
('000000002b32bf45012b42ec3855005b', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.2.1 all 下载', '含文档、源码、示例等', NULL, '<p>\n	Struts 2.2.1 完整下载包，含有struts jar包及其依赖的包、struts教程、用户指南、api文档、官方的示例、源码以及FAQ和Cookbook、完整的Struts Tag参考手册、插件API文档。</p>', 'Struts 2.2.1 完整下载包，含有struts jar包及其依赖的包、struts教程、用户指南、api文档、官方的示例、源码以及FAQ和Cookbook、完整的Struts Tag参考手册、插件API文档。', 1285257600000, '2.2.1', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/binaries/struts2-2.2.1-all.zip\n本站下载-http://story.ajava.org/struts/struts2-2.2.1-all.zip', '73M', '所有系统', 'Apache', '英文', 1285317998677, 1285317998677, 'admin'),
('000000002b32bf45012b42eebb35005f', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.2.1 官方文档下载', '含教程、指南、Javadocs、FAQ等', NULL, '<p>\n	Struts 2.2.1 官方文档，含有入门指南、教程、用户指南、FAQ、Struts Core api文档、Xwork api 文档、标记库参考手册、以及一些插件的api文档，是学习、开发Struts 2的必备手册。</p>', 'Struts 2.2.1 官方文档，含有入门指南、教程、用户指南、FAQ、Struts Core api文档、Xwork api 文档、标记库参考手册、以及一些插件的api文档，是学习、开发Struts 2的必备手册。', 1285257600000, '2.2.1', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/documentation/struts2-2.2.1-docs.zip\n本站下载-http://story.ajava.org/struts/struts2-2.2.1-docs.zip', '25M', '所有系统', 'Apache', '英文', 1285318163253, 1285318163253, 'admin'),
('000000002b32bf45012b42f282650063', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.2.1 官方示例下载', 'Struts官方示例', NULL, '<p>\n	Struts官方示例，可帮助你快速熟悉strtus的工作原理。包含了Blank、Portlet、Showcase、Other Examples、MailReader等应用。</p>\n<div id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<div style="display: none;">\n	&nbsp;</div>\n<p>\n	内容如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			Blank - 一个简单的空应用，用于帮助你快速开始新的应用。</li>\n		<li>\n			Portlet- 一个portlet示例。</li>\n		<li>\n			Examples - 几个组合了不同技术的示例。</li>\n		<li>\n			MailReader - 邮件阅读器。</li>\n		<li>\n			Showcase - 一个普通的示例。</li>\n	</ol>\n</blockquote>\n', 'Struts官方示例，可帮助你快速熟悉strtus的工作原理。包含了Blank、Portlet、Showcase、Other Examples、MailReader等应用。', 1285257600000, '2.2.1', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/examples/struts2-2.2.1-apps.zip\n本站下载-http://story.ajava.org/struts/struts2-2.2.1-apps.zip', '29M', '所有系统', 'Apache', '英文', 1285318410853, 1285318410853, 'admin'),
('000000002b32bf45012b42f446b10067', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.2.1 jar包下载', '含Struts核心、扩展包及其依赖的jar', NULL, '<p>\n	Struts 2.0.14 jar包下载，含Struts核心包、扩展包及其依赖的jar。</p>\n', 'Struts 2.0.14 jar包下载，含Struts核心包、扩展包及其依赖的jar。', 1285257600000, '2.2.1', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/library/struts2-2.2.1-lib.zip\n本站下载-http://story.ajava.org/struts/struts2-2.2.1-lib.zip', '12M', '所有系统', 'Apache', '英文', 1285318526642, 1285318526642, 'admin'),
('000000002b32bf45012b42f8789e006b', '000000002b32bf45012b3e0aa51c0003', 'Struts 2.2.1 源码下载', '含struts核心、扩展、示例源码', NULL, '<p>\n	Struts 2.2.1 源码下载，含struts核心、扩展、示例源码。</p>\n<p>\n	此文档包含但多于如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			com.opensymphony.xwork2</li>\n		<li>\n			com.opensymphony.xwork2.config</li>\n		<li>\n			com.opensymphony.xwork2.config.entities</li>\n		<li>\n			com.opensymphony.xwork2.config.impl</li>\n		<li>\n			com.opensymphony.xwork2.config.providers</li>\n		<li>\n			com.opensymphony.xwork2.conversion</li>\n		<li>\n			com.opensymphony.xwork2.conversion.annotations</li>\n		<li>\n			com.opensymphony.xwork2.conversion.impl</li>\n		<li>\n			com.opensymphony.xwork2.conversion.metadata</li>\n		<li>\n			com.opensymphony.xwork2.inject</li>\n		<li>\n			com.opensymphony.xwork2.inject.util</li>\n		<li>\n			com.opensymphony.xwork2.interceptor</li>\n		<li>\n			com.opensymphony.xwork2.interceptor.annotations</li>\n		<li>\n			com.opensymphony.xwork2.mock</li>\n		<li>\n			com.opensymphony.xwork2.ognl</li>\n		<li>\n			com.opensymphony.xwork2.ognl.accessor</li>\n		<li>\n			com.opensymphony.xwork2.spring</li>\n		<li>\n			com.opensymphony.xwork2.spring.interceptor</li>\n		<li>\n			com.opensymphony.xwork2.test</li>\n		<li>\n			com.opensymphony.xwork2.util</li>\n		<li>\n			com.opensymphony.xwork2.util.classloader</li>\n		<li>\n			com.opensymphony.xwork2.util.finder</li>\n		<li>\n			com.opensymphony.xwork2.util.location</li>\n		<li>\n			com.opensymphony.xwork2.util.logging</li>\n		<li>\n			com.opensymphony.xwork2.util.logging.commons</li>\n		<li>\n			com.opensymphony.xwork2.util.logging.jdk</li>\n		<li>\n			com.opensymphony.xwork2.util.profiling</li>\n		<li>\n			com.opensymphony.xwork2.util.reflection</li>\n		<li>\n			com.opensymphony.xwork2.validator</li>\n		<li>\n			com.opensymphony.xwork2.validator.annotations</li>\n		<li>\n			com.opensymphony.xwork2.validator.metadata</li>\n		<li>\n			com.opensymphony.xwork2.validator.validators</li>\n		<li>\n			org.apache.struts2</li>\n		<li>\n			org.apache.struts2.components</li>\n		<li>\n			org.apache.struts2.components.template</li>\n		<li>\n			org.apache.struts2.config</li>\n		<li>\n			org.apache.struts2.dispatcher</li>\n		<li>\n			org.apache.struts2.dispatcher.mapper</li>\n		<li>\n			org.apache.struts2.dispatcher.multipart</li>\n		<li>\n			org.apache.struts2.dispatcher.ng</li>\n		<li>\n			org.apache.struts2.dispatcher.ng.filter</li>\n		<li>\n			org.apache.struts2.dispatcher.ng.listener</li>\n		<li>\n			org.apache.struts2.dispatcher.ng.servlet</li>\n		<li>\n			org.apache.struts2.impl</li>\n		<li>\n			org.apache.struts2.interceptor</li>\n		<li>\n			org.apache.struts2.interceptor.debugging</li>\n		<li>\n			org.apache.struts2.interceptor.validation</li>\n		<li>\n			org.apache.struts2.servlet.interceptor</li>\n		<li>\n			org.apache.struts2.util</li>\n		<li>\n			org.apache.struts2.views</li>\n		<li>\n			org.apache.struts2.views.annotations</li>\n		<li>\n			org.apache.struts2.views.freemarker</li>\n		<li>\n			org.apache.struts2.views.freemarker.tags</li>\n		<li>\n			org.apache.struts2.views.jsp</li>\n		<li>\n			org.apache.struts2.views.jsp.iterator</li>\n		<li>\n			org.apache.struts2.views.jsp.ui</li>\n		<li>\n			org.apache.struts2.views.util</li>\n		<li>\n			org.apache.struts2.views.velocity</li>\n		<li>\n			org.apache.struts2.views.velocity.components</li>\n		<li>\n			org.apache.struts2.views.xslt</li>\n	</ol>\n</blockquote>\n', 'Struts 2.2.1 源码下载，含struts核心、扩展、示例源码。', 1285257600000, '2.2.1', '道长A', '', 'apache.org', '', '官方下载-http://labs.renren.com/apache-mirror/struts/source/struts2-2.2.1-src.zip\n本站下载-http://story.ajava.org/struts/struts2-2.2.1-src.zip', '6M', '所有系统', 'Apache', '英文', 1285318801566, 1285318801566, 'admin'),
('000000002b5cb843012b674c8c3f0001', '000000002b32bf45012b3e0aa51c0003', '《Struts in Action》中文版 PDF 下载', '使用领先的框架构建Web应用', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook2020001-2025000/2024473/shupi.jpg" style="width: 444px; height: 550px;" /><br />\n	&nbsp;</p>\n<p>\n	本书是由Struts开发小组的核心成员编写的一本关于Struts开发的经典书籍。它一步步地由浅人深，将Struts分解成相对独立的部分进行 了讲解。本书除了介绍Struts以外，同时还介绍了一些与Struts相关的组件，合理地使用这些组件可以帮助程序员开发出更加健壮、更加专业、更加容 易维护的应用程序。对于刚刚接触Struts的新手而言，本书无异于是学习和掌握Struts的圣经。对于在Struts方面有不少经验的程序员而言，本 书也提供了Struts底层内容，帮助读者更好地编写基于Struts的应用程序。</p>\n<p>\n	Struts解决了许多Web应用程序开发中的常见问题。基于Struts应用程序框架构造的应用程序，除了可以复用业已证明可用的解决方案外，同时也可以使得开发人员更加关注应用程序的特性。Struts是由Apache软件基金会支持的开源软件。</p>\n<p>\n	本书完整介绍了Struts框架结构，涵盖了设计、数据校验、数据库访问、动态页面生成、本地化、Struts配置以及其他一些重要的方面。书中介 绍了如何同时使用JSP标签和Velocity模板，并仔细介绍了Struts体系结构以及Struts控制流，同时也说明了如何扩展Struts框架结 构。</p>\n<p>\n	书中还明确指出了Struts 1.0和1.1版本间的区别，同时还通过实例说明了Struts 1.0应用程序向Struts 1.1应用程序转换的技术。本书还介绍了很多已得到证明的设计技术、模式和策略，而这些内容在其他书中是很难找到的。</p>\n', '本书是由Struts开发小组的核心成员编写的一本关于Struts开发的经典书籍。它一步步地由浅人深，将Struts分解成相对独立的部分进行了讲解。本书除了介绍Struts以外，同时还介绍了一些与Struts相关的组件，合理地使用这些组件可以帮助程序员开发出更加健壮、更加专业、更加容易维护的应用程序。对于刚刚接触Struts的新手而言，本书无异于是学习和掌握Struts的圣经。对于在Struts方面有不少经验的程序员而言，本书也提供了Struts底层内容，帮助读者更好地编写基于Struts的应用程序。', 1285862400000, '1.0', 'Husted', '铁手', 'manning', '', '本站下载-http://story.ajava.org/struts/struts-in-action-zh-pdf.zip', '3M', '所有系统', 'CC3', '中文', 1285928291391, 1285928291391, 'admin'),
('000000002b5cb843012b6754b8fd0005', '000000002b32bf45012b3e0aa51c0003', '《深入浅出Struts 2》PDF下载', '帮助读者掌握Struts2框架', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://www.infoq.com/resource/minibooks/starting-struts2/zh/cover/Struts2large.gif" style="width: 250px; height: 373px;" /></p>\n<p>\n	Struts2 是Struts的下一代产品。而最初提案Struts Ti所设想的发展方向，在Struts的现有代码的基础上是很难完成的。在发起提案的时候，Patrick Lightbody把多个不同的Web框架的领导者邀请到了一起，希望大家能够达成共识，协力完成一个通用框架。虽然最终由于各种原因，Patrick Lightbody的愿望未能实现，但是WebWork和Struts Ti却发现了二者在技术与开发人员这两个层面上的共同之处，不久之后，两个项目就在WebWork的技术基础上进行了合并。<br />\n	<br />\n	Struts2的目标很简单&mdash;&mdash;使Web开发变得更加容易。为了达成这一目标，Struts2中提供了很多新特性，比如智能的默认设置、annotation的使用以及&ldquo;惯例重于配置&rdquo;原则的应用，而这一切都大大减少了XML配置。<br />\n	<br />\n	本书的目的，是为了帮助读者掌握Struts2框架，并能够对组成框架的功能部件和可用的配置项有深刻的理解。我在书中还将介绍一些可以提高生产力的方法&mdash;&mdash;包括默认配置项和应当注意的实现特性，可用的多种配置选项和一些开发技术。本书还会就与第三方软件进行集成的话题展开讨论。<br />\n	<br />\n	尽管有很多新的语言和新的技术，基于Action的MVC框架对当前的Web应用开发依然十分有用。本书带你一起探讨Struts 2应用的方方面面，如架构、配置、实现Actions和对验证与国际化的支持等。除了这些，本书还专注于实践，用大量的代码和技巧教你如何快速使用 Struts 2。<br />\n	本书所涵盖的主题<br />\n	<br />\n	&nbsp;&nbsp;&nbsp; * Struts 2架构<br />\n	&nbsp;&nbsp;&nbsp; * 核心组件的配置<br />\n	&nbsp;&nbsp;&nbsp; * 如何提高开发效率<br />\n	&nbsp;&nbsp;&nbsp; * 常用插件介绍<br />\n	&nbsp;&nbsp;&nbsp; * 和第三方技术的集成技巧<br />\n	<br />\n	本书用纸为A5尺寸，共96页。</p>\n', '本书的目的，是为了帮助读者掌握Struts2框架，并能够对组成框架的功能部件和可用的配置项有深刻的理解。我在书中还将介绍一些可以提高生产力的方法 ——包括默认配置项和应当注意的实现特性，可用的多种配置选项和一些开发技术。本书还会就与第三方软件进行集成的话题展开讨论。', 1285862400000, '1.0', 'Ian Roughley', '李剑', 'InfoQ', 'http://www.infoq.com/cn/minibooks/starting-struts2', '本站下载-http://story.ajava.org/struts/starting-struts2-zh-pdf.zip', '777K', '所有系统', 'CC3', '中文', 1285928827133, 1285928827133, 'admin'),
('000000002b5cb843012b676ac2050009', '000000002b32bf45012b3e0aa51c0003', '《Jakarta Struts编程》PDF下载', 'struts项目的完全指南', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook15001-20000/19549/shupi.jpg" style="width: 302px; height: 400px;" /></p>\n<p>\n	<br />\n	jakarta struts framework是一个开放源代码的apache项目，已经成为利用java servlet和java server page（jsp）技术构建web应用程序的最流行的表示框架包。它推动形成了基于model-view-controller（mvc）设计模式（通常称为model 2方式）的应用程序架构。然而，高效的model 2编程并不是一项简单的任务，开发人员经常自己发现难于找到很多问题的最佳解决方式。 本书是struts项目的完全指南，引导开发人员理解概念、设计和实现方式。虽然它由struts应用程序的基础开始并深入讲解了model 2设计方案，但这本书很快转入了较高级的主题。安装和设置贯穿文档始终，并且清楚地解释了每个配置选项。本书利用大量使用了标准jsp标记库和 struts附加程序的实际例子，研究了struts环境中的jsp编程技术。用户还将掌握多层应用程序编程，从struts应用程序同ejb交互，利用 struts提供的包和工具处理复杂验证和登录。无论你是希望获取struts极稀少的在线文档，还是希望学习model 2编程技术，或者是作为一名高级struts程序员想完全熟悉这个强大的框架包，这本书都将满足你的要求。</p>\n<p>\n	&ldquo;许多开放源代码包缺少对所有特性的综合指导 &mdash;&mdash; 这些指导不仅仅是&ldquo;hello,world&rdquo;之类的东西，而是帮助您深入问题，解决实际的应用程序设计&hellip;&hellip;（本书）对于很多人员而言正是这样的指南&rdquo;。 &mdash;&mdash;craig mcclanahan（jakarta struts创始人）</p>\n<p>\n	本书主要内容：</p>\n<blockquote>\n	<ul>\n		<li>\n			struts的安装、设置和配置</li>\n		<li>\n			struts映射到model 2设计模式的完整介绍</li>\n		<li>\n			详细论述利用jsp使用struts的知识，包括struts标记库</li>\n		<li>\n			struts异常处理、验证和登录</li>\n		<li>\n			struts应用程序的国际化和本地化</li>\n		<li>\n			完整论述新struts tiles模板库</li>\n		<li>\n			struts应用程序的打包和发布</li>\n	</ul>\n</blockquote>\n', 'jakarta struts framework是一个开放源代码的apache项目，已经成为利用java servlet和java server page（jsp）技术构建web应用程序的最流行的表示框架包。它推动形成了基于model-view-controller（mvc）设计模式（通常称为model 2方式）的应用程序架构。然而，高效的model 2编程并不是一项简单的任务，开发人员经常自己发现难于找到很多问题的最佳解决方式。 本书是struts项目的完全指南，引导开发人员理解概念、设计和实现方式。虽然它由struts应用程序的基础开始并深入讲解了model 2设计方案，但这本书很快转入了较高级的主题。安装和设置贯穿文档始终，并且清楚地解释了每个配置选项。本书利用大量使用了标准jsp标记库和 struts附加程序的实际例子，研究了struts环境中的jsp编程技术。用户还将掌握多层应用程序编程，从struts应用程序同ejb交互，利用 struts提供的包和工具处理复杂验证和登录。无论你是希望获取struts极稀少的在线文档，还是希望学习model 2编程技术，或者是作为一名高级struts程序员想完全熟悉这个强大的框架包，这本书都将满足你的要求。', 1285862400000, '1.0', 'Cbuck Cavaness', '孙江宏 杨继萍 等 ', 'O''Reilly', '', '本站下载-http://story.ajava.org/struts/jakarta-struts-programming-zh-pdf.zip', '12M', '所有系统', 'CC3', '中文', 1285930271237, 1285930271237, 'admin'),
('000000002b5cb843012b67722e8b000d', '000000002b32bf45012b3e0aa51c0003', '《Struts 2权威指南》PDF下载', '基于WebWork核心的MVC开发', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook35001-40000/35850/shupi.jpg" style="width: 387px; height: 550px;" /></p>\n<p>\n	本书所介绍的struts 2已经完全超出了struts 1框架原有的高度，struts 2建立在struts 1和webwork两个框架整合的基础之上，因此提供了更多优秀的机制。</p>\n<p>\n	虽然struts 1目前还未被完全淘汰，但struts 1所表现出来的缺陷已经处处制约着开发者的手脚。在2007年上半年，struts 2终于在众多开发者期盼中，发布了第一个稳定版本：2.0.6。为了让众多struts学习、工作者快速掌握struts 2的开发，笔者精心编著了本书。本书按struts 2的架构体系，细致地介绍了struts 2各个知识点。在介绍过程中，笔者依照读者的学习规律，首先介绍基本概念和基本操作，然后对内容进行深入讲解。笔者在介绍struts 2框架时，既照顾到struts 2初学者的能力，对每个知识点都给出简单的快速上手的示例；同时也考虑到开发者在日后开发中可能遇到的问题，详细讲解了每个知识点的各种用法，本书覆盖到 struts 2近80%的api。因此，本书完全可以作为struts 2框架的权威手册，以供开发者在实际开发过程中参考。</p>\n<p>\n	本书最后配备了几个常用场景的实例，通过实例演示了struts 2框架的用法，希望读者可以通过这几个实例，触类旁通，解决日常开发中的问题。</p>\n<p>\n	本书适用于有较好的java编程基础，有初步的j2ee编程基础的读者。本书既给出struts 2入门级的示范实例，也详细讲解了struts 2各个知识点、各个选项的详细用法，可以作为struts 2框架的权威参考。</p>', '本书所介绍的struts 2已经完全超出了struts 1框架原有的高度，struts 2建立在struts 1和webwork两个框架整合的基础之上，因此提供了更多优秀的机制。\n虽然struts 1目前还未被完全淘汰，但struts 1所表现出来的缺陷已经处处制约着开发者的手脚。在2007年上半年，struts 2终于在众多开发者期盼中，发布了第一个稳定版本：2.0.6。为了让众多struts学习、工作者快速掌握struts 2的开发，笔者精心编著了本书。本书按struts 2的架构体系，细致地介绍了struts 2各个知识点。在介绍过程中，笔者依照读者的学习规律，首先介绍基本概念和基本操作，然后对内容进行深入讲解。笔者在介绍struts 2框架时，既照顾到struts 2初学者的能力，对每个知识点都给出简单的快速上手的示例；同时也考虑到开发者在日后开发中可能遇到的问题，详细讲解了每个知识点的各种用法，本书覆盖到 struts 2近80%的api。因此，本书完全可以作为struts 2框架的权威手册，以供开发者在实际开发过程中参考。', 1285862400000, '1.0', '李刚', '', '电子工业出版社', '', '本站下载-http://story.ajava.org/struts/struts2-authority-guide-zh-pdf.zip', '19M', '所有系统', 'CC3', '中文', 1285930757771, 1286254913688, 'admin'),
('000000002b5cb843012b6ae8854b0011', '000000002b32bf45012b3e0aa51c0003', '《struts中文手册》PDF下载', '介绍struts基础知识', NULL, '<p>\n	经过了两个星期不懈努力，今天终于完成了对 strtus 整体架构及核心标签库的介绍。从几乎不懂 struts 和 HTML 标签，到可以给别人解决涉及 struts 的一些小问题，这与朋友的帮助和我的努力是分不开的，但我更希望它能给那些想要学的，正在学的和已经学过的人带来不同的益处。我知道我是个新手，但我会用百倍的努力继续在这个领域进行深入性的和扩展性的学习与研究。同时，就象我说的，我们会用实际行动证明我们为你提供的帮助。</p>\n<p>\n	这章适合做参考资料，他不仅包含了对 struts 的整体架构及主要组件的详细和清晰的介绍，而且对于很多人都关注的 struts 标签库也进行了细致的介绍，可以说它是你手头一个可以用来进行参考的资料。当你哪里不清楚，你完全可以到这里查询。为了你查询方便，我做了一个目录。</p>\n<p>\n	由于开源软件不断发展，所以这不可能是最后版本，我会不断进行内容的修改和新特性的添加。比如 strus1.1 的 Nested Tag，但由于个人技术水平和时间等多方面原因，速度不会太快，这就需要大家的帮助，希望大家共同参加一些资料的整理。</p>\n<p>\n	最后，我真心的感谢 jag，banq，steelg,holen,七老爷，还有混血儿，要不是他，我会更早完成这个资料的，不过他又一次锻炼了我的意志。</p>\n', '本文档适合做参考资料，他不仅包含了对 struts 的整体架构及主要组件的详细和清晰的介绍，而且对于很多人都关注的 struts 标签库也进行了细致的介绍，可以说它是你手头一个可以用来进行参考的资料。当你哪里不清楚，你完全可以到这里查询。为了你查询方便，我做了一个目录。', 1285948800000, '1.0', '胡峤', '', 'AJava', '', '本站下载-http://story.ajava.org/struts/struts-reference-zh-pdf.zip', '248K', '所有系统', 'CC3', '中文', 1285988844875, 1285988844875, 'admin'),
('000000002b5cb843012b6b0004c00016', '000000002b32bf45012b3e0aa51c0003', '《Java Web 标签大全》CHM下载', '含struts、struts2、spring、jsp、jstl、jsf等', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://www.ajava.org/upload/2010-10/java-web-tag.png" style="width: 648px; height: 448px;" /></p>\n<p>\n	本文档包含了struts、struts2、spring、jsp、jstl、jsf、javascript等技术的标签使用说明以及相应的例子，对每个标签均有详细的说明，是程序员开发过程中的好帮手。为了方便查询，特做成了CHM格式，方便根据标签名称进行查询。</p>', '本文档包含了struts、struts2、spring、jsp、jstl、jsf、javascript等技术的标签使用说明以及相应的例子，对每个标签均有详细的说明，是程序员开发过程中的好帮手。为了方便查询，特做成了CHM格式，方便根据标签名称进行查询。', 1285948800000, '1.0', 'findhappy7', '', 'www.web-tag.net', '', '本站下载-http://story.ajava.org/struts/java-web-tag-zh-chm.zip', '2M', '所有系统', 'CC3', '中文', 1285990384832, 1285992690141, 'admin'),
('000000002b5cb843012b6b1fa0ef0035', '000000002b32bf45012b3e0aa51c0003', '《Struts2 中文教程集合》CHM下载', '囊括了若干系列教程', NULL, '<p>\n	本文档囊括了多篇网上流行的struts2教程，内容涉及到struts2的安装、配置、上传文件、CRUD、AJAX、国际化、校验等方方面面，还附有《Struts2 权威指南》的前三章。</p>\n<p>\n	如果你对《Struts2 权威指南》感兴趣，可到这里下载PDF版本：<a href="http://www.ajava.org/file-000000002b5cb843012b67722e8b000d">《Struts 2权威指南》PDF下载</a></p>', '本文档囊括了多篇网上流行的struts2教程，内容涉及到struts2的安装、配置、上传文件、CRUD、AJAX、国际化、校验等方方面面，还附有《Struts2 权威指南》的前三章。', 1285948800000, '1.0', '道长A', '', 'AJava', '', '本站下载-http://story.ajava.org/struts/struts2-course-zh-chm.zip', '4M', '所有系统', 'CC3', '中文', 1285992456431, 1285992504114, 'admin'),
('000000002b5cb843012b6d5735700042', '000000002b32bf45012b3e0aa51c0003', '《Struts in Action》 英文版 PDF下载', '使用领先的框架构建Web应用', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook2020001-2025000/2024473/shupi.jpg" style="width: 444px; height: 550px;" /><br />\n	&nbsp;</p>\n<p>\n	本书是由Struts开发小组的核心成员编写的一本关于Struts开发的经典书籍。它一步步地由浅人深，将Struts分解成相对独立的部分进行 了讲解。本书除了介绍Struts以外，同时还介绍了一些与Struts相关的组件，合理地使用这些组件可以帮助程序员开发出更加健壮、更加专业、更加容 易维护的应用程序。对于刚刚接触Struts的新手而言，本书无异于是学习和掌握Struts的圣经。对于在Struts方面有不少经验的程序员而言，本 书也提供了Struts底层内容，帮助读者更好地编写基于Struts的应用程序。</p>\n<p>\n	Struts解决了许多Web应用程序开发中的常见问题。基于Struts应用程序框架构造的应用程序，除了可以复用业已证明可用的解决方案外，同时也可以使得开发人员更加关注应用程序的特性。Struts是由Apache软件基金会支持的开源软件。</p>\n<p>\n	本书完整介绍了Struts框架结构，涵盖了设计、数据校验、数据库访问、动态页面生成、本地化、Struts配置以及其他一些重要的方面。书中介 绍了如何同时使用JSP标签和Velocity模板，并仔细介绍了Struts体系结构以及Struts控制流，同时也说明了如何扩展Struts框架结 构。</p>\n<p>\n	书中还明确指出了Struts 1.0和1.1版本间的区别，同时还通过实例说明了Struts 1.0应用程序向Struts 1.1应用程序转换的技术。本书还介绍了很多已得到证明的设计技术、模式和策略，而这些内容在其他书中是很难找到的。</p>\n<p>\n	本书为英文版，这里还有<a href="http://www.ajava.org/file-000000002b5cb843012b674c8c3f0001">本书的中文版</a>。</p>', '本书是由Struts开发小组的核心成员编写的一本关于Struts开发的经典书籍。它一步步地由浅人深，将Struts分解成相对独立的部分进行了讲解。本书除了介绍Struts以外，同时还介绍了一些与Struts相关的组件，合理地使用这些组件可以帮助程序员开发出更加健壮、更加专业、更加容易维护的应用程序。对于刚刚接触Struts的新手而言，本书无异于是学习和掌握Struts的圣经。对于在Struts方面有不少经验的程序员而言，本书也提供了Struts底层内容，帮助读者更好地编写基于Struts的应用程序。', 1285948800000, '1.0', 'Husted ', '', 'manning', '', '本站下载-http://story.ajava.org/struts/struts-in-action-en-pdf.zip', '2M', '所有系统', 'CC3', '英文', 1286029653360, 1286029653360, 'admin'),
('000000002b5cb843012b70dc7fd50046', '000000002b32bf45012b3e0aa51c0003', '《Struts入门》PDF下载', '快速入门', NULL, '<p>\n	本书为入门者准备的，其中讲述了Struts的一些基础东西。请读者首先能建立一个Struts的开发环境，其次了解Struts基础的东西，由MVC的概念进入Struts。本书的目的是使你快速入门。本书的内容包括了Struts一些常用的功能。</p>\n<p>\n	&nbsp;</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			简介</li>\n		<li>\n			配置环境</li>\n		<li>\n			HelloWorld你的第一个Struts程序</li>\n		<li>\n			MVC概述</li>\n		<li>\n			Model模型</li>\n		<li>\n			View页面视图</li>\n		<li>\n			Controller控制器</li>\n		<li>\n			使用Struts连接池</li>\n		<li>\n			Struts异常处理</li>\n		<li>\n			Struts中的国际化</li>\n		<li>\n			Plug_in</li>\n		<li>\n			Struts-Config文件</li>\n	</ol>\n</blockquote>\n', '本书为入门者准备的，其中讲述了Struts的一些基础东西。请读者首先能建立一个Struts的开发环境，其次了解Struts基础的东西，由MVC的概念进入Struts。本书的目的是使你快速入门。本书的内容包括了Struts一些常用的功能。', 1286035200000, '1.0', '余立非', '', 'AJava', '', '本站下载-http://story.ajava.org/struts/struts-beginning-zh-pdf.zip', '2M', '所有系统', 'CC3', '中文', 1286088720341, 1286088720341, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b5cb843012b70f401cd004a', '000000002b32bf45012b3e0aa51c0003', '《精通Struts》PDF 下载', '基于MVC的Java Web设计与开发', NULL, '<blockquote>\n	<p>\n		本书为PDF扫描版本。如果您想购买此书，可到<a href="http://www.china-pub.com/19876">http://www.china-pub.com/19876</a></p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook15001-20000/19876/shupi.jpg" style="width: 283px; height: 400px;" /></p>\n<p>\n	Struts是目前非常流行的基于MVC的Java Web框架。本书详细介绍了在最新的Struts1.1以及不久将推出的Struts1.2版本上设计和开发Java Web应用的各种技术。本书第1章到第3章为入门篇，通过两个Struts应用实例，引导读者把握设计、开发和部署Struts应用的整体流程，充分体会 Struts框架在开放大型、可扩展的Web应用方面发挥的优势。第4章到第7章深入探讨了Struts框架的核心组件ActionServlet和 RequestProcessor的实现原理，详细介绍了开发Struts应用的模型、视图和控制器的各种技术，细致的描述了Struts配置文件的每个 元素的使用方法。第8章到第9章介绍了开发Struts应用的一些实用技术，如Struts框架的扩展点、Struts应用的国际化，Validator 验证框架和异常处理机制等。第12章到第16章结合具体的Struts应用实例，详细介绍了Struts的标签库以及Tiles框架的使用方法。第17章 和第18章介绍如何采用EJB和Web服务来实现Struts框架的模型。第19章到第21章介绍了如何采用第三方软件，如Apache Common Logging API、Log4J、ANT和StrutsTestCase，来控制Struts应用的输出日志、管理以及测试Struts应用项目。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第1章 Struts与Java Web应用简介 1<br />\n		1.1 Java Web应用概述 1<br />\n		1.1.1 Servlet组件 2<br />\n		1.1.2 JSP组件 3<br />\n		1.1.3 共享数据在Web应用中的范围 3<br />\n		1.1.4 JavaBean组件及其在Web应用中的范围 5<br />\n		1.1.5 客户化JSP标签 5<br />\n		1.1.6 EJB组件 6<br />\n		1.1.7 XML语言 6<br />\n		1.1.8 Web服务器和应用服务器 7<br />\n		1.2 Web组件的三种关联关系 7<br />\n		1.2.1 请求转发 7<br />\n		1.2.2 请求重定向 8<br />\n		1.2.3 包含 9<br />\n		1.3 MVC概述 9<br />\n		1.3.1 MVC设计模式 10<br />\n		1.3.2 JSP Model1和JSP Model2 11<br />\n		1.4 Struts概述 13<br />\n		1.4.1 Struts实现MVC的机制 13<br />\n		1.4.2 Struts的工作流程 15<br />\n		.1.5 小结 17<br />\n		第2章 Struts应用：helloapp应用 19<br />\n		2.1 分析helloapp应用的需求 19<br />\n		2.2 运用Struts框架 19<br />\n		2.3 创建视图组件 20<br />\n		2.3.1 创建JSP文件 20<br />\n		2.3.2 创建消息资源文件 23<br />\n		2.3.3 创建ActionForm Bean 23<br />\n		2.3.4 数据验证 25<br />\n		2.4 创建控制器组件 26<br />\n		2.4.1 Action类的工作机制 28<br />\n		2.4.2 访问封装在MessageResources中的本地化文本 28<br />\n		2.4.3 业务逻辑验证 28<br />\n		2.4.4 访问模型组件 29<br />\n		2.4.5 向视图组件传递数据 30<br />\n		2.4.6 把HTTP请求转发给合适的视图组件 30<br />\n		2.5 创建模型组件 30<br />\n		2.6 创建存放常量的Java文件 31<br />\n		2.7 创建配置文件 32<br />\n		2.7.1 创建Web应用的配置文件 32<br />\n		2.7.2 创建Struts框架的配置文件 33<br />\n		2.8 发布和运行helloapp应用 35<br />\n		2.8.1 服务器端装载hello.jsp的流程 37<br />\n		2.8.2 表单验证的流程 37<br />\n		2.8.3 逻辑验证失败的流程 39<br />\n		2.8.4 逻辑验证成功的流程 40<br />\n		2.9 小结 41<br />\n		第3章 Struts应用的需求分析与设计 43<br />\n		3.1 收集和分析应用需求 43<br />\n		3.2 设计数据库 44<br />\n		3.3 设计应用的业务逻辑 45<br />\n		3.3.1 访问XML格式的用户信息 45<br />\n		3.3.2 访问数据库 47<br />\n		3.4 设计用户界面 49<br />\n		3.4.1 界面风格 50<br />\n		3.4.2 使用客户化标签 52<br />\n		3.5 设计ActionForm 53<br />\n		3.6 设计Action和Action映射 55<br />\n		3.6.1 设计LogonAction 58<br />\n		3.6.2 设计LogoffAction 60<br />\n		3.6.3 设计InsertAction 61<br />\n		3.6.4 设计SearchAction 62<br />\n		3.6.5 设计DisplayAllAction 63<br />\n		3.7 设计客户化标签 64<br />\n		3.7.1 设计ValidateSessionTag标签 64<br />\n		3.7.2 设计DisplayTag标签 66<br />\n		3.7.3 创建客户化app标签库的TLD文件 67<br />\n		3.8 小结 68<br />\n		第4章 配置Struts应用 71<br />\n		4.1 Web应用的发布描述文件 71<br />\n		4.1.1 Web应用发布描述文件的文档类型定义（DTD） 71<br />\n		4.2 为Struts应用配置web.xml文件 72<br />\n		4.2.1 配置Struts的ActionServlet 72<br />\n		4.2.2 声明ActionServlet的初始化参数 73<br />\n		4.2.3 配置欢迎文件清单 74<br />\n		4.2.4 配置错误处理 75<br />\n		4.2.5 配置Struts标签库 76<br />\n		4.3 Struts 配置文件 77<br />\n		4.3.1 org.apache.struts.config包 77<br />\n		4.3.2 [struts-config]元素 79<br />\n		4.3.3 [data-sources]元素 80<br />\n		4.3.4 [form-beans]元素 82<br />\n		4.3.5 [global-exceptions]元素 83<br />\n		4.3.6 [global-forwards]元素 84<br />\n		4.3.7 [action-mappings]元素 85<br />\n		4.3.8 [controller]元素 87<br />\n		4.3.9 [message-resources]元素 87<br />\n		4.3.10 [plug-in]元素 88<br />\n		4.3.11 配置多应用模块 89<br />\n		4.4 Digester 组件 91<br />\n		4.5 Struts 控制面板工具 91<br />\n		4.6 重新载入配置文件 93<br />\n		4.7 小结 94<br />\n		第5章 Struts控制器组件 95<br />\n		5.1 控制器组件的控制机制 95<br />\n		5.1.1 ActionServlet类 96<br />\n		5.1.2 RequestProcessor类 99<br />\n		5.1.3 Action类 105<br />\n		5.2 使用内置的Struts Action类 112<br />\n		5.2.1 org.apache.struts.actions.ForwardAction类 112<br />\n		5.2.2 org.apache.struts.actions.IncludeAction类 114<br />\n		5.2.3 org.apache.struts.actions.DispatchAction类 115<br />\n		5.2.4 org.apache.struts.actions.LookupDispatchAction类 118<br />\n		5.2.5 org.apache.struts.actions.SwitchAction类 121<br />\n		5.3 利用Token解决重复提交 121<br />\n		5.4 实用类 125<br />\n		5.4.1 RequestUtils类 125<br />\n		5.4.2 TagUtils类 125<br />\n		5.4.3 ModuleUtils类 126<br />\n		5.4.4 Globals类 126<br />\n		5.5 小结 127<br />\n		第6章 Struts模型组件 129<br />\n		6.1 模型在MVC中的地位 129<br />\n		6.2 模型的概念和类型 130<br />\n		6.2.1 概念模型 130<br />\n		6.2.2 设计模型 131<br />\n		6.3 业务对象（BO） 133<br />\n		6.3.1 业务对象的特征和类型 133<br />\n		6.3.2 业务对象的重要性 134<br />\n		6.4 业务对象的持久化 134<br />\n		6.4.1 对业务对象进行持久化的作用 135<br />\n		6.4.2 数据访问对象（DAO）设计模式 135<br />\n		6.4.3 常用的ORM软件 136<br />\n		6.5 创建netstore应用的模型 137<br />\n		6.5.1 为netstore应用创建模型的步骤 137<br />\n		6.5.2 创建netstore应用的业务对象 138<br />\n		6.5.3 创建netstore应用的数据库 142<br />\n		6.5.4 netstore应用的ORM框架 145<br />\n		6.5.5 联合使用业务代理和DAO模式 155<br />\n		6.6 小结 167<br />\n		第7章 Struts视图组件 169<br />\n		7.1 视图概述 169<br />\n		7.2 在视图中使用JavaBean 170<br />\n		7.2.1 DTO数据传输对象 170<br />\n		7.2.2 Struts框架提供的DTO：ActionForm Bean 171<br />\n		7.3 使用ActionForm 172<br />\n		7.3.1 ActionForm的生命周期 172<br />\n		7.3.2 创建ActionForm 174<br />\n		7.3.3 配置ActionForm 176<br />\n		7.3.4 访问ActionForm 177<br />\n		7.3.5 处理表单跨页 178<br />\n		7.4 使用动态ActionForm 184<br />\n		7.4.1 配置动态ActionForm 185<br />\n		7.4.2 动态ActionForm的reset()方法 186<br />\n		7.4.3 访问动态ActionForm 187<br />\n		7.4.4 动态ActionForm的表单验证 187<br />\n		7.4.5 在netstore应用中使用动态ActionForm 187<br />\n		7.5 小结 189<br />\n		第8章 扩展Struts框架 191<br />\n		8.1 Struts插件（PlugIn） 191<br />\n		8.2 扩展Struts的配置类 194<br />\n		8.3 控制器扩展点 195<br />\n		8.3.1 扩展ActionServlet类 195<br />\n		8.3.2 扩展RequestProcessor类 196<br />\n		8.3.3 扩展Action类 198<br />\n		8.4 扩展视图组件 200<br />\n		8.5 扩展模型组件 200<br />\n		8.6 小结 204<br />\n		第9章 Struts应用的国际化 205<br />\n		9.1 本地化与国际化的概念 205<br />\n		9.2 Web应用的中文本地化 206<br />\n		9.2.1 处理HTTP请求数据编码 207<br />\n		9.2.2 处理数据库数据编码 207<br />\n		9.2.3 处理XML配置文件编码 207<br />\n		9.2.4 处理响应结果的编码 208<br />\n		9.3 Java对I18N的支持 208<br />\n		9.3.1 Locale类 208<br />\n		9.3.2 ResourceBundle类 214<br />\n		9.3.3 MessageFormat类和复合消息 214<br />\n		9.4 Struts框架对国际化的支持 216<br />\n		9.4.1 创建Struts的Resource Bundle 216<br />\n		9.4.2 访问Resource Bundle 217<br />\n		9.5 对helloapp应用实现国际化 220<br />\n		9.5.1 对JSP文件的文本、图片和按钮进行国际化 220<br />\n		9.5.2 创建临时中文资源文件 221<br />\n		9.5.3 对临时资源文件进行编码转换 222<br />\n		9.5.4 创建英文资源文件 223<br />\n		9.5.5 采用Servlet过滤器设置请求数据的字符编码 223<br />\n		9.5.6 运行国际化的helloapp应用 225<br />\n		9.6 异常处理的国际化 226<br />\n		9.7 小结 226<br />\n		第10章 Validator验证框架 229<br />\n		10.1 安装和配置Validator框架 229<br />\n		10.1.1 validator-rules.xml文件 229<br />\n		10.1.2 validation.xml文件 233<br />\n		10.1.3 Validator插件 237<br />\n		10.2 Validator框架和ActionForm 238<br />\n		10.3 Validator框架和Struts客户化标签 240<br />\n		10.4 在netstore应用中使用Validator框架 241<br />\n		10.5 创建自定义的验证规则 245<br />\n		10.6 在Validator框架中使用JavaScript 247<br />\n		10.7 Validator框架的国际化 250<br />\n		10.8 小结 251<br />\n		第11章 异常处理 253<br />\n		11.1 Java异常处理 253<br />\n		11.1.1 Java异常 253<br />\n		11.1.2 JVM的方法调用堆栈 254<br />\n		11.1.3 异常处理对性能的影响 255<br />\n		11.1.4 系统异常和应用异常 256<br />\n		11.1.5 使用异常链 256<br />\n		11.1.6 处理多样化异常 258<br />\n		11.2 Struts框架异常处理机制概述 260<br />\n		11.3 Struts框架异常处理机制的细节 261<br />\n		11.3.1 Java Web容器处理异常的机制 261<br />\n		11.3.2 ActionServlet类处理异常的机制 261<br />\n		11.3.3 RequestProcessor类处理异常的机制 262<br />\n		11.3.4 ExceptionHandler类处理异常的机制 263<br />\n		11.4 在Struts应用中处理异常的各种方式 266<br />\n		11.4.1 创建异常类 266<br />\n		11.4.2 由Java Web容器捕获异常 269<br />\n		11.4.3 以配置方式处理异常 271<br />\n		11.4.4 以编程方式处理异常 277<br />\n		11.5 小结 282<br />\n		第12章 Struts HTML标签库 283<br />\n		12.1 用于生成基本的HTML元素的标签 283<br />\n		12.1.1 [html:html]标签 288<br />\n		12.1.2 [html:base]标签 288<br />\n		12.1.3 [html:link]和[html:rewrite]标签 289<br />\n		12.1.4 [html:img]标签 292<br />\n		12.2 基本的表单标签 293<br />\n		12.2.1 [html:form]标签 296<br />\n		12.2.2 [html:text]标签 296<br />\n		12.2.3 [html:cancel]标签 297<br />\n		12.2.4 [html:reset]标签 298<br />\n		12.2.5 [html:submit]标签 298<br />\n		12.2.6 [html:hidden]标签 299<br />\n		12.3 检查框和单选按钮标签 299<br />\n		12.3.1 [html:checkbox]标签 304<br />\n		12.3.2 [html:multibox]标签 305<br />\n		12.3.3 [html:radio]标签 306<br />\n		12.4 下拉列表和多选列表标签 307<br />\n		12.4.1 [html:select]标签 311<br />\n		12.4.2 [html:option]标签 312<br />\n		12.4.3 [html:options]标签 313<br />\n		12.4.4 [html:optionsCollection]标签 314<br />\n		12.5 在表单中上传文件标签 315<br />\n		12.5.1 [html:file]标签 319<br />\n		12.5.2 在ActionForm Bean中设定FormFile属性 319<br />\n		12.5.3 在Action类中处理文件上传 319<br />\n		12.6 [html:errors]标签 320<br />\n		12.6.1 错误消息的来源 324<br />\n		12.6.2 格式化地显示错误消息 326<br />\n		12.6.3 [html:errors]标签的用法 326<br />\n		12.7 [html:messages]标签 328<br />\n		12.8 小结 330<br />\n		第13章 Struts Bean标签库 331<br />\n		13.1 访问HTTP请求信息或JSP隐含对象 331<br />\n		13.1.1 [bean:header]标签 334<br />\n		13.1.2 [bean:parameter]标签 334<br />\n		13.1.3 [bean:cookie]标签 335<br />\n		13.1.4 [bean:page]标签 336<br />\n		13.2 访问Web应用资源 337<br />\n		13.2.1 [bean:message]标签 339<br />\n		13.2.2 [bean:resource]标签 341<br />\n		13.2.3 [bean:struts]标签 341<br />\n		13.2.4 [bean:include]标签 342<br />\n		13.3 定义或输出JavaBean 342<br />\n		13.3.1 [bean:define]标签 344<br />\n		13.3.2 [bean:size]标签 345<br />\n		13.3.3 [bean:write]标签 346<br />\n		13.4 小结 347<br />\n		第14章 Struts Logic标签库 349<br />\n		14.1 进行比较运算的Logic标签 349<br />\n		14.2 进行字符串匹配的Logic标签 354<br />\n		14.3 判断指定内容是否存在的Logic标签 356<br />\n		14.3.1 [logic:empty]和[logic:notEmpty]标签 359<br />\n		14.3.2 [logic:present]和[logic:notPresent]标签 360<br />\n		14.3.3 [logic:messagesPresent]和[logic:messagesNotPresent]标签 361<br />\n		14.4 进行循环遍历的Logic标签 363<br />\n		14.4.1 遍历集合 366<br />\n		14.4.2 遍历Map 367<br />\n		14.4.3 设定被遍历的变量 369<br />\n		14.5 进行请求转发或重定向的Logic标签 369<br />\n		14.5.1 [logic:forward]标签 369<br />\n		14.5.2 [logic:redirect]标签 370<br />\n		14.6 小结 370<br />\n		第15章 Struts Nested标签库 373<br />\n		15.1 [nested:nest]和[nested:writeNesting]标签 373<br />\n		15.2 [nested:root]标签 379<br />\n		15.3 和其他标签库中的标签功能相同的Nested标签 381<br />\n		15.4 小结 382<br />\n		第16章 Tiles框架 383<br />\n		16.1 采用基本的JSP语句创建复合式网页 383<br />\n		16.2 采用JSP的include指令创建复合式网页 387<br />\n		16.3 采用[tiles:insert]标签创建复合式网页 391<br />\n		16.4 采用Tiles模板创建复合式网页 394<br />\n		16.5 采用Tiles模板和Tiles组件创建复合式网页 396<br />\n		16.5.1 Tiles组件的基本使用方法 397<br />\n		16.5.2 通过Struts Action来调用Tiles组件 399<br />\n		16.5.3 Tiles组件的组合 399<br />\n		16.5.4 Tiles组件的扩展 402<br />\n		16.6 小结 403<br />\n		第17章 Struts与EJB组件 405<br />\n		17.1 J2EE体系结构简介 405<br />\n		17.2 创建EJB组件 406<br />\n		17.2.1 编写Remote接口 407<br />\n		17.2.2 编写Home接口 408<br />\n		17.2.3 编写Enterprise Java Bean类 408<br />\n		17.3 在Struts应用中访问EJB组件 413<br />\n		17.3.1 创建业务代理实现类NetstoreEJBDelegate 413<br />\n		17.3.2 运用EJBHomeFactory模式 416<br />\n		17.4 发布J2EE应用 419<br />\n		17.4.1 在Jboss-Tomcat上部署EJB组件 419<br />\n		17.4.2 在Jboss-Tomcat上部署Web应用 421<br />\n		17.4.3 在Jboss-Tomcat上部署J2EE应用 422<br />\n		17.5 小结 424<br />\n		第18章 Struts与SOAP Web服务 425<br />\n		18.1 SOAP简介 425<br />\n		18.2 建立Apache AXIS环境 427<br />\n		18.3 创建和发布SOAP服务 428<br />\n		18.3.1 创建实现SOAP服务的Java类 428<br />\n		18.3.2 创建Web服务发布描述文件 429<br />\n		18.3.3 发布SOAP服务 432<br />\n		18.4 在Struts应用中访问SOAP服务 432<br />\n		18.5 小结 438<br />\n		第19章 Struts与Apache通用日志包 439<br />\n		19.1 Apache通用日志包概述 439<br />\n		19.1.1 Log接口 439<br />\n		19.1.2 LogFactory接口 441<br />\n		19.2 常用的日志实现 441<br />\n		19.2.1 NoOpLog日志器 441<br />\n		19.2.2 SimpleLog日志器 442<br />\n		19.2.3 Log4J日志器 442<br />\n		19.3 配置通用日志接口 443<br />\n		19.3.1 准备JAR文件 443<br />\n		19.3.2 指定日志器 443<br />\n		19.3.3 设置日志器的属性 444<br />\n		19.4 配置Log4J 444<br />\n		19.4.1 配置Log4J的一般步骤 444<br />\n		19.4.2 Log4J的配置样例 446<br />\n		19.4.3 Log4J对应用性能的影响 447<br />\n		19.5 在Struts应用中访问通用日志接口 447<br />\n		19.5.1 在Action类中访问通用日志接口 448<br />\n		19.5.2 在JSP中访问通用日志接口 450<br />\n		19.6 小结 454<br />\n		第20章 用ANT工具管理Struts应用 455<br />\n		20.1 Web应用常用的开发目录结构 455<br />\n		20.2 安装配置ANT 455<br />\n		20.3 创建build.xml文件 456<br />\n		20.3.1 设置公共属性 462<br />\n		20.3.2 设置classpath 463<br />\n		20.3.3 定义help target 463<br />\n		20.3.4 定义clean-all target 463<br />\n		20.3.5 定义prepare target 464<br />\n		20.3.6 定义compile target 464<br />\n		20.3.7 定义build target 465<br />\n		20.3.8 定义deploy target 466<br />\n		20.3.9 定义javadoc target 466<br />\n		20.4 运行ANT 466<br />\n		20.4.1 运行help target 466<br />\n		20.4.2 运行deploy target 467<br />\n		20.4.3 运行javadoc target 468<br />\n		20.5 小结 468<br />\n		<br />\n		第21章 用StrutsTestCase测试Struts应用 469<br />\n		21.1 StrutsTestCase简介 469<br />\n		21.2 制订单元测试用例 469<br />\n		21.3 创建StrutsTestCase测试类 470<br />\n		21.4 用ANT工具运行测试程序 471<br />\n		21.4.1 准备必要的JAR文件 471<br />\n		21.4.2 在build.xml文件中定义test target 471<br />\n		21.4.3 运行测试程序 472<br />\n		21.5 创建包含多个单元测试用例的测试类 473<br />\n		21.6 小结 475<br />\n		附录A Struts1.1的UML类框图 476<br />\n		附录B Struts资源 477<br />\n		B.1 Struts邮件列表 477<br />\n		B.2 Struts资源Web站点 477<br />\n		B.3 Tiles标签库站点 477<br />\n		B.4 Nested 标签库站点 478<br />\n		B.5 Struts GUI工具 478<br />\n		B.6 Easy Struts 工程 478<br />\n		附录C 发布和运行addressbook应用 479<br />\n		C.1 发布addressbook应用 479<br />\n		C.2 运行addressbook应用 479<br />\n		附录D 发布和运行netstore应用 482<br />\n		D.1 运行netstore所需的软件 482<br />\n		D.2 netstore应用的目录结构 483<br />\n		D.3 安装netstore数据库 484<br />\n		D.4 发布netstore应用 484<br />\n		D.4.1 在工作模式1下发布netstore应用 484<br />\n		D.4.2 在工作模式2下发布netstore应用 485<br />\n		D.4.3 在工作模式3下发布netstore应用 485<br />\n		D.4.4 在工作模式4下发布netstore应用 486<br />\n		D.4.5 在工作模式5下发布netstore应用 486<br />\n		D.5 运行netstore应用 487<br />\n		附录E 编译本书的Java Web样例 491<br />\n		附录F Struts 1.2 API的新特征 492</p>\n</blockquote>\n', 'Struts是目前非常流行的基于MVC的Java Web框架。本书详细介绍了在最新的Struts1.1以及不久将推出的Struts1.2版本上设计和开发Java Web应用的各种技术。本书第1章到第3章为入门篇，通过两个Struts应用实例，引导读者把握设计、开发和部署Struts应用的整体流程，充分体会 Struts框架在开放大型、可扩展的Web应用方面发挥的优势。第4章到第7章深入探讨了Struts框架的核心组件ActionServlet和 RequestProcessor的实现原理，详细介绍了开发Struts应用的模型、视图和控制器的各种技术，细致的描述了Struts配置文件的每个元素的使用方法。第8章到第9章介绍了开发Struts应用的一些实用技术，如Struts框架的扩展点、Struts应用的国际化，Validator 验证框架和异常处理机制等。第12章到第16章结合具体的Struts应用实例，详细介绍了Struts的标签库以及Tiles框架的使用方法。第17章和第18章介绍如何采用EJB和Web服务来实现Struts框架的模型。第19章到第21章介绍了如何采用第三方软件，如Apache Common Logging API、Log4J、ANT和StrutsTestCase，来控制Struts应用的输出日志、管理以及测试Struts应用项目。', 1286035200000, '1.0', '孙卫琴', '', '电子工业出版社', '', '本站下载-http://story.ajava.org/struts/master-struts-zh-pdf.zip', '19M', '所有系统', 'CC3', '中文', 1286090260941, 1286090260941, 'admin'),
('000000002b5cb843012b76ba8bde0053', '000000002b32bf45012b3e0aa51c0003', '《轻松入门之struts2》V3.0 PDF 下载', '全面掌握struts2', NULL, '<p style="text-align: center;">\n	&nbsp;</p>\n<br />\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<p style="text-align: center;">\n	<img alt="" src="/upload/2010-10/easy-beginning-struts2-v3.0.png" /></p>\n<p>\n	Struts2其实并不是一个陌生的Web框架，Struts2是以Webwork的设计思想为核心，吸收了Struts1的优点，因此，可以认为Struts2是Struts1和Webwork结合的产物。</p>\n<p>\n	Struts2的使用人群逐渐增多，它在逐步吸引开发者和用户的目光，毫无疑问，大家最终都会选择于它，困为它确实是一个很优秀的框架。Struts2方面的书籍很多，如果你是想精通strtus2，那么将很遗憾地告知你，本书内容不适合你；如果你想花最少的时间来获取对struts2的最大了解程度，则它将是你最好的选择。本着学习共享的精神，将总结的资料与所有的朋友共享，希望各位朋友多多指教。</p>\n<p>\n	感谢周大庆和聂静宇等朋友的参与，本教程又添加了相应的内容，并对以前的细节做了调整。由于时间关系，未能全部完善，希望更多的朋友参与进来，集众人所长， 所快乐分享。由于精力有限，有些内容未细细推敲，有些内容攫取于网络，如果无意之间侵犯了您的版权，请您来信告知，我将尽快删除。如果知识点有误，感谢告知。</p>\n', 'Struts2其实并不是一个陌生的Web框架，Struts2是以Webwork的设计思想为核心，吸收了Struts1的优点，因此，可以认为Struts2是Struts1和Webwork结合的产物。\n       Struts2的使用人群逐渐增多，它在逐步吸引开发者和用户的目光，毫无疑问，大家最终都会选择于它，困为它确实是一个很优秀的框架。Struts2方面的书籍很多，如果你是想精通strtus2，那么将很遗憾地告知你，本书内容不适合你；如果你想花最少的时间来获取对struts2的最大了解程度，则它将是你最好的选择。本着学习共享的精神，将总结的资料与所有的朋友共享，希望各位朋友多多指教。', 1286121600000, '3.0', '大漠孤烟', '', 'AJava', '', '本站下载-http://story.ajava.org/struts/easy-beginning-struts2-v3.0-zh-pdf.zip', '2M', '所有系统', 'CC3', '中文', 1286187158494, 1286254606345, 'admin'),
('000000002b9e98bc012b9f32ff650001', '000000002b904fe6012b905b65d50003', 'Spring 2.0.8 下载', '最稳定的2.0.x版本', NULL, '<p>\n	Spring 2.0.8是目前最稳定的2.0.x版本，下载包内含2.0.8的jar包，相关依赖的jar包，以及spring源码。如果你的工程还在使用2.0.x系列，建议升级到此版本。</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<p>\n	此版本的ChangeLog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 2.0.8 (2008-01-07)<br />\n		-------------------------------------<br />\n		<br />\n		General<br />\n		* various documentation revisions and clarifications<br />\n		<br />\n		Package org.springframework.aop<br />\n		* fixed garbage collection problem with CGLIB proxies, now holding onto the Advised configuration independent of factory<br />\n		<br />\n		Package org.springframework.beans<br />\n		* TypeConverterDelegate protects its text conversion step against PropertyEditors which don&#39;t support &quot;setValue&quot; calls<br />\n		* DefaultListableBeanFactory throws descriptive exception in case of factory-bean circular reference<br />\n		* DefaultListableBeanFactory freshly resolves autowired arguments even for cached constructors (re-resolving prototypes)<br />\n		* fixed CglibSubclassingInstantiationStrategy to avoid CGLIB class leak for inner prototypes with MethodReplacer usage<br />\n		* factored out protected &quot;getTargetBean&quot; method in ObjectFactoryCreatingFactoryBean (for easier overriding)<br />\n		* DefaultDocumentLoader includes the JAXP IllegalArgumentException in the rethrown ParserConfigurationException<br />\n		* SingletonBeanFactoryLocator removes bean factory group definition if its initialization fails<br />\n		<br />\n		Package org.springframework.cache<br />\n		* added &quot;cacheManagerName&quot; property to EhCacheManagerFactoryBean<br />\n		<br />\n		Package org.springframework.context<br />\n		* AbstractApplicationContext calls &quot;cancelRefresh&quot; method in case of refresh failure now, resetting the &#39;active&#39; flag<br />\n		<br />\n		Package org.springframework.core<br />\n		* OverridingClassLoader excludes the &quot;oracle.&quot; package by default as well (e.g. for TopLink&#39;s custom annotations)<br />\n		<br />\n		Package org.springframework.instrument<br />\n		* TomcatInstrumentableClassLoader always passes local ClassLoader into ClassFileTransformers<br />\n		* ShadowingClassLoader excludes the &quot;com.ibm.&quot; package by default as well (for IBM JDK classes, DB2 JDBC driver, etc)<br />\n		<br />\n		Package org.springframework.jdbc<br />\n		* fixed JdbcUtils to not access the DatabaseMetaData implementation class for &quot;extractDatabaseMetaData&quot; calls<br />\n		* fixed SingleColumnRowMapper to use passed-in required type in the default &quot;convertValueToRequiredType&quot; implementation<br />\n		* WebSphereDataSourceAdapter, JBossNativeJdbcExtractor and CommonsDbcpNativeJdbcExtractor propagate SQLExceptions as-is<br />\n		<br />\n		Package org.springframework.jms<br />\n		* DefaultMessageListenerContainer avoids deadlock between Connection and Session through the use of a shared monitor<br />\n		* ServerSessionMessageListenerContainer always establishes a shared Connection (even if autoStart=&quot;false&quot;)<br />\n		* CommonsPoolServerSessionFactory removes specific ServerSessionPool on close (for proper reuse on stop and restart)<br />\n		<br />\n		Package org.springframework.jndi<br />\n		* JndiTemplate prepares a specific Hashtable for the InitialContext, exposing default environment properties as well<br />\n		<br />\n		Package org.springframework.mail<br />\n		* revised MailSendException&#39;s &quot;toString()&quot; output to include a local message as well<br />\n		<br />\n		Package org.springframework.orm<br />\n		* JdoTransactionManager and JpaTransactionManager support REQUIRES_NEW transactions in afterCompletion callbacks<br />\n		* fixed Jpa/JdoTransactionManager to correctly suspend and resume even for dialects without JDBC Connection retrieval<br />\n		<br />\n		Package org.springframework.scheduling<br />\n		* fixed CommonJ TimerManagerFactoryBean to not require the &quot;scheduledTimerListeners&quot; property<br />\n		<br />\n		Package org.springframework.scripting<br />\n		* fixed ScriptFactoryPostProcessor to avoid NPE in case of script that produces null value and no interfaces specified<br />\n		* GroovyScriptFactory exposes &quot;getGroovyClassLoader()&quot; method<br />\n		<br />\n		Package org.springframework.transaction<br />\n		* JtaTransactionManager consistently throws TransactionSystemException in case of unexpected internal transaction state<br />\n		* JtaTransactionManager swallows IllegalStateException when synchronizing with existing transaction (for JBoss 4.2)<br />\n		<br />\n		Package org.springframework.util<br />\n		* AutoPopulatingList is serializable now<br />\n		<br />\n		Package org.springframework.web<br />\n		* ContextLoader(Listener/Servlet) explicitly removes the context attribute from the ServletContext (for WLS hot deploy)<br />\n		* CommonsMultipartResolver uses FileUpload 1.2&#39;s &quot;isMultipartContent&quot; variant when available (for stricter checks)<br />\n		* UrlPathHelper detects a context path of &quot;/&quot; (as exposed by Jetty for includes) and processes it as root context (&quot;&quot;)<br />\n		* DispatcherServlet consistently logs correct request URI for include requests (even in debug log messages)<br />\n		* DispatcherPortlet swallows IllegalStateException when setting implicit render parameter (e.g. after sendRedirect call)<br />\n		* MultiActionController detects and rejects invalid last-modified method return types<br />\n		* JstlView detects session-scoped JSTL LocalizationContext/Locale attributes and merges them with its own context<br />\n		* revised AbstractJasperReportsView to allow for obtaining a report dynamically (through overriding &quot;getReport()&quot;)<br />\n		* AbstractJasperReportsSingleFormatView converts exporter parameter values in the model (if appropriate)<br />\n		* fixed TilesConfigurer to explicitly set the factory name to empty String by default<br />\n		* added &quot;accept-charset&quot; support to JSP FormTag</p>\n</blockquote>\n', 'Spring 2.0.8是目前最稳定的2.0.x版本，下载包内含2.0.8的jar包，相关依赖的jar包，以及spring源码。如果你的工程还在使用2.0.x系列，建议升级到此版本。', 1286812800000, '2.0.8', 'Rod Johnson', '', 'springsource', '', '官方下载-http://s3.amazonaws.com/dist.springframework.org/release/SPR/spring-framework-2.0.8.zip\n本站下载-http://story.ajava.org/spring/2.0.8.zip', '10M', '所有系统', 'Apache', '英文', 1286866141029, 1286866594669, 'admin'),
('000000002b9e98bc012b9f39b2370007', '000000002b904fe6012b905b65d50003', 'Spring 2.0.8 下载（含文档）', '最稳定的2.0.x版本', NULL, '<p>\n	Spring 2.0.8是目前最稳定的2.0.x版本，下载包内含2.0.8的jar包，相关依赖的jar包，以及spring源码，参考手册，java api文档。如果你的工程还在使用2.0.x系列，建议升级到此版本。</p>\n<div id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<p>\n	此版本的ChangeLog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 2.0.8 (2008-01-07)<br />\n		-------------------------------------<br />\n		<br />\n		General<br />\n		* various documentation revisions and clarifications<br />\n		<br />\n		Package org.springframework.aop<br />\n		* fixed garbage collection problem with CGLIB proxies, now holding onto the Advised configuration independent of factory<br />\n		<br />\n		Package org.springframework.beans<br />\n		* TypeConverterDelegate protects its text conversion step against PropertyEditors which don&#39;t support &quot;setValue&quot; calls<br />\n		* DefaultListableBeanFactory throws descriptive exception in case of factory-bean circular reference<br />\n		* DefaultListableBeanFactory freshly resolves autowired arguments even for cached constructors (re-resolving prototypes)<br />\n		* fixed CglibSubclassingInstantiationStrategy to avoid CGLIB class leak for inner prototypes with MethodReplacer usage<br />\n		* factored out protected &quot;getTargetBean&quot; method in ObjectFactoryCreatingFactoryBean (for easier overriding)<br />\n		* DefaultDocumentLoader includes the JAXP IllegalArgumentException in the rethrown ParserConfigurationException<br />\n		* SingletonBeanFactoryLocator removes bean factory group definition if its initialization fails<br />\n		<br />\n		Package org.springframework.cache<br />\n		* added &quot;cacheManagerName&quot; property to EhCacheManagerFactoryBean<br />\n		<br />\n		Package org.springframework.context<br />\n		* AbstractApplicationContext calls &quot;cancelRefresh&quot; method in case of refresh failure now, resetting the &#39;active&#39; flag<br />\n		<br />\n		Package org.springframework.core<br />\n		* OverridingClassLoader excludes the &quot;oracle.&quot; package by default as well (e.g. for TopLink&#39;s custom annotations)<br />\n		<br />\n		Package org.springframework.instrument<br />\n		* TomcatInstrumentableClassLoader always passes local ClassLoader into ClassFileTransformers<br />\n		* ShadowingClassLoader excludes the &quot;com.ibm.&quot; package by default as well (for IBM JDK classes, DB2 JDBC driver, etc)<br />\n		<br />\n		Package org.springframework.jdbc<br />\n		* fixed JdbcUtils to not access the DatabaseMetaData implementation class for &quot;extractDatabaseMetaData&quot; calls<br />\n		* fixed SingleColumnRowMapper to use passed-in required type in the default &quot;convertValueToRequiredType&quot; implementation<br />\n		* WebSphereDataSourceAdapter, JBossNativeJdbcExtractor and CommonsDbcpNativeJdbcExtractor propagate SQLExceptions as-is<br />\n		<br />\n		Package org.springframework.jms<br />\n		* DefaultMessageListenerContainer avoids deadlock between Connection and Session through the use of a shared monitor<br />\n		* ServerSessionMessageListenerContainer always establishes a shared Connection (even if autoStart=&quot;false&quot;)<br />\n		* CommonsPoolServerSessionFactory removes specific ServerSessionPool on close (for proper reuse on stop and restart)<br />\n		<br />\n		Package org.springframework.jndi<br />\n		* JndiTemplate prepares a specific Hashtable for the InitialContext, exposing default environment properties as well<br />\n		<br />\n		Package org.springframework.mail<br />\n		* revised MailSendException&#39;s &quot;toString()&quot; output to include a local message as well<br />\n		<br />\n		Package org.springframework.orm<br />\n		* JdoTransactionManager and JpaTransactionManager support REQUIRES_NEW transactions in afterCompletion callbacks<br />\n		* fixed Jpa/JdoTransactionManager to correctly suspend and resume even for dialects without JDBC Connection retrieval<br />\n		<br />\n		Package org.springframework.scheduling<br />\n		* fixed CommonJ TimerManagerFactoryBean to not require the &quot;scheduledTimerListeners&quot; property<br />\n		<br />\n		Package org.springframework.scripting<br />\n		* fixed ScriptFactoryPostProcessor to avoid NPE in case of script that produces null value and no interfaces specified<br />\n		* GroovyScriptFactory exposes &quot;getGroovyClassLoader()&quot; method<br />\n		<br />\n		Package org.springframework.transaction<br />\n		* JtaTransactionManager consistently throws TransactionSystemException in case of unexpected internal transaction state<br />\n		* JtaTransactionManager swallows IllegalStateException when synchronizing with existing transaction (for JBoss 4.2)<br />\n		<br />\n		Package org.springframework.util<br />\n		* AutoPopulatingList is serializable now<br />\n		<br />\n		Package org.springframework.web<br />\n		* ContextLoader(Listener/Servlet) explicitly removes the context attribute from the ServletContext (for WLS hot deploy)<br />\n		* CommonsMultipartResolver uses FileUpload 1.2&#39;s &quot;isMultipartContent&quot; variant when available (for stricter checks)<br />\n		* UrlPathHelper detects a context path of &quot;/&quot; (as exposed by Jetty for includes) and processes it as root context (&quot;&quot;)<br />\n		* DispatcherServlet consistently logs correct request URI for include requests (even in debug log messages)<br />\n		* DispatcherPortlet swallows IllegalStateException when setting implicit render parameter (e.g. after sendRedirect call)<br />\n		* MultiActionController detects and rejects invalid last-modified method return types<br />\n		* JstlView detects session-scoped JSTL LocalizationContext/Locale attributes and merges them with its own context<br />\n		* revised AbstractJasperReportsView to allow for obtaining a report dynamically (through overriding &quot;getReport()&quot;)<br />\n		* AbstractJasperReportsSingleFormatView converts exporter parameter values in the model (if appropriate)<br />\n		* fixed TilesConfigurer to explicitly set the factory name to empty String by default<br />\n		* added &quot;accept-charset&quot; support to JSP FormTag</p>\n</blockquote>\n', 'Spring 2.0.8是目前最稳定的2.0.x版本，下载包内含2.0.8的jar包，相关依赖的jar包，以及spring源码，参考手册，java api文档。如果你的工程还在使用2.0.x系列，建议升级到此版本。', 1286812800000, '2.0.8', 'Rod Johnson', '', 'springsource', '', '官方下载-http://s3.amazonaws.com/dist.springframework.org/release/SPR/spring-framework-2.0.8-with-dependencies.zip\n本站下载-http://story.ajava.org/spring/2.0.8-with-dependencies.zip', '63M', '所有系统', 'Apache', '英文', 1286866580023, 1286866580023, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b9e98bc012b9f41edeb000d', '000000002b904fe6012b905b65d50003', 'Spring 2.5.6.SEC02 下载', '最稳定的2.5.x版本', NULL, '<p>\n	Spring 2.5.6是目前最稳定的2.5.x版本，下载包内含2.5.6的jar包，相关依赖的jar包，以及spring源码。如果你的工程还在使用2.5.x系列，建议升级到此版本。</p>\n<p>\n	此版本的ChangeLog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 2.5.6.SEC02 (2010-06-16)<br />\n		-------------------------------------<br />\n		<br />\n		Package org.springframework.beans<br />\n		* changed CachedIntrospectionResults to ignore Class.getClassLoader() method<br />\n		<br />\n		<br />\n		Changes in version 2.5.6.SEC01 (2009-04-22)<br />\n		-------------------------------------<br />\n		<br />\n		Package org.springframework.aop<br />\n		* changed serialization behavior of AbstractRegexpMethodPointcut and JdkRegexpMethodPointcut to avoid recompilation<br />\n		<br />\n		Package org.springframework.core<br />\n		* fixed issue with GenericTypeResolver where garbage collection was prevented under certain circumstances<br />\n		<br />\n		<br />\n		Changes in version 2.5.6 (2008-10-31)<br />\n		-------------------------------------<br />\n		<br />\n		General<br />\n		* removed outdated EAR support from sample applications<br />\n		* upgraded to AspectJ 1.6.2 (retaining compatibility with AspectJ 1.5.x and 1.6.x)<br />\n		* upgraded to EHCache 1.5.0 (retaining compatibility with EHCache 1.2 and higher)<br />\n		* upgraded to TestNG 5.8 (retaining compatibility with TestNG 5.5 and higher)<br />\n		* upgraded to OpenJPA 1.1.0 (retaining compatibility with OpenJPA 1.0.x as well as 1.2.0)<br />\n		* upgraded to EclipseLink 1.0.1 (EclipseLinkJpaVendorAdapter requires EclipseLink 1.0.0+ now)<br />\n		<br />\n		Package org.springframework.aop<br />\n		* AbstractAutoProxyCreator (as used by &quot;aop:config&quot;) correctly ignores null bean instances<br />\n		* &quot;aop:aspect&quot; doesn&#39;t insist on aspect bean reference to be specified when just containing declare-parents elements<br />\n		* &quot;bean&quot; pointcut matches exposed FactoryBean products only; &quot;&amp;...&quot; syntax supported for matching FactoryBean itself<br />\n		<br />\n		Package org.springframework.beans<br />\n		* BeanUtils skips conventional editor check for array classes (in order to not break AspectJ weaving)<br />\n		* BeanWrapper&#39;s introspection resolves bridge methods to find setter method for getter method with covariant return type<br />\n		* TypeMismatchException message differentiates between editor with inappropriate value returned versus no editor at all<br />\n		* containing bean definition is exposed to ParserContext for BeanDefinitionDecorators as well<br />\n		* BeanDefinition objects are considered equal even if their originating resource objects are different<br />\n		* AbstractFactoryBean&#39;s early singleton proxy handles equals, hashCode and toString calls locally (avoiding eager init)<br />\n		* PropertyPathFactoryBean logs a warning if the target bean is still in creation at the time of obtaining the property<br />\n		* exposed public &quot;copyRegisteredEditorsTo&quot; method on ConfigurableBeanFactory interface<br />\n		* fixed corner case in AbstractBeanDefinition where a ClassCastException could arise in &quot;getBeanClass(Name)&quot;<br />\n		* DefaultSingletonBeanRegistry eagerly cleans up cached dependency information when destroying a bean<br />\n		* AbstractBeanFactory rejects getBean request with arguments in case of a pre-existing singleton of same name as well<br />\n		* AbstractAutowireCapableBeanFactory preserves possible matches hint in property exception<br />\n		* SmartInstantiationAwareBeanPostProcessor&#39;s &quot;determineCandidateConstructors&quot; is only invoked for non-null bean Class<br />\n		* ServiceLocatorFactoryBean handles equals and hashCode based on proxy object identity<br />\n		* factored out &quot;createBeanDefinition&quot; template method in BeanDefinitionParserDelegate<br />\n		* turned visibility of BeanDefinitionParserDelegate&#39;s &quot;checkNameUniqueness&quot; method to protected<br />\n		* XML list/set/map elements (in both the beans and the util namespace) support nested description element<br />\n		<br />\n		Package org.springframework.cache<br />\n		* EhCacheFactoryBean obtains decorated Ehcache instead of raw Cache, honoring pre-configured cache decorators<br />\n		* removed useless &quot;diskStorePath&quot; property from EhCacheFactoryBean (ignored by all current EHCache versions anyway)<br />\n		<br />\n		Package org.springframework.context<br />\n		* DefaultMessageSourceResolvable and FieldError implement &quot;equals&quot; and &quot;hashCode&quot; such that all fields are respected<br />\n		* ClassPathBeanDefinitionScanner performs trace/debug logging during class resource introspection<br />\n		* ClassPathBeanDefinitionScanner ignores same class found multiple times in the classpath (i.e. equal bean definition)<br />\n		* component-scan preserves original source of scanned bean definitions, for silently ignoring already scanned classes<br />\n		* annotation-config registers PersistenceAnnotationBeanPostProcessor independent from client bundle&#39;s class loader<br />\n		* added CUSTOM value to FilterType enumeration<br />\n		<br />\n		Package org.springframework.core<br />\n		* ClassPathResource uses cleaned path for relative resources as well<br />\n		* PathMatchingResourcePatternResolver considers URL protocol &quot;vfszip&quot; as jar file (to search JBoss-managed jars)<br />\n		* GenericCollectionTypeResolver correctly resolves collection element type even when target bean is a collection itself<br />\n		<br />\n		Package org.springframework.ejb<br />\n		* SpringBeanAutowiringInterceptor calls &quot;InvocationContext.proceed()&quot; in order to invoke subsequent interceptors as well<br />\n		<br />\n		Package org.springframework.instrument<br />\n		* ShadowingClassLoader excludes &quot;net.sf.cglib.&quot; package from shadowing by default<br />\n		<br />\n		Package org.springframework.jdbc<br />\n		* provided Jdbc4SqlXmlHandler as default implementation of the SqlXmlHandler interface<br />\n		* added SqlValue class to &quot;jdbc.support&quot; package, with SqlXmlValue derived from SqlValue instead of SqlTypeValue<br />\n		* SQLErrorCodesFactory always loads its &quot;sql-error-codes.xml&quot; files from Spring&#39;s class loader (-&gt; static singleton)<br />\n		* added &quot;transientDataAccessResourceCodes&quot; category to &quot;sql-error-codes.xml&quot;, with default codes for DB2 and Sybase<br />\n		* SQLErrorCodeSQLExceptionTranslator applies default SQLExceptionSubclassTranslator after error code translation only<br />\n		* SQLErrorCodeSQLExceptionTranslator is able to work without fallback SQLState translation as well<br />\n		* SQLExceptionSubclassTranslator translates SQLFeatureNotSupportedException to InvalidDataAccessApiUsageException<br />\n		* SQLStateSQLExceptionTranslator returns TransientDataAccessResourceException for well-known vendor-specific SQL states<br />\n		* factored out AbstractFallbackSQLExceptionTranslator base class for consistent &quot;fallbackTranslator&quot; capabilities<br />\n		* CallableStatementCreatorFactory strictly honors &quot;SqlParameter.isInputValueProvided&quot; (allowing for statement caching)<br />\n		* JdbcTemplate passes full Calendar argument to JDBC driver even in case of no SQL type specified<br />\n		* JdbcTemplate does not call the costly &quot;Statement.getWarnings()&quot; unless ignoreWarnings=false or debug logging is on<br />\n		* added &quot;checkFullyPopulated&quot; setting to BeanPropertyRowMapper, for validating that all bean properties have been mapped<br />\n		<br />\n		Package org.springframework.jms<br />\n		* JmsException message and logged JMSException message explicitly includes linked exception now if not already contained<br />\n		* SingleConnectionFactory only calls &quot;Connection.stop()&quot; on reset when the shared Connection has actually been started<br />\n		* SingleConnectionFactory explicitly creates Queue/TopicConnection when first call is createQueue/TopicConnection method<br />\n		* CachingConnectionFactory explicitly creates Queue/TopicSession when first call is createQueue/TopicConnection method<br />\n		* CachingConnectionFactory&#39;s JMS Session proxies implement SessionProxy interface, allowing for access to target Session<br />\n		* CachingConnectionFactory rolls back cached transacted JMS Sessions on logical close if no commit/rollback was issued<br />\n		* CachingConnectionFactory explicitly closes cached JMS Sessions on Connection close<br />\n		* CachingConnectionFactory&#39;s cached producers pass on &quot;disableMessageID&quot; and &quot;disableMessageTimestamp&quot; properties<br />\n		* CachingConnectionFactory also caches MessageConsumers (controlled through &quot;cacheConsumers&quot; property)<br />\n		* AbstractJmsListeningContainer eagerly clears shared JMS Connection after releasing, avoiding repeated close exceptions<br />\n		* revised DefaultMessageListenerContainer to correctly work with non-JMS transaction manager and CACHE_CONNECTION level<br />\n		* DefaultMessageListenerContainer supports a stop notification callback for unlimited maxMessagesPerTask as well now<br />\n		* introduced SubscriptionNameProvider interface for message listener objects suggesting default subscription names<br />\n		* &quot;jms:listener-container&quot; uses actual message listener object&#39;s class name as default subscription name<br />\n		<br />\n		Package org.springframework.jmx<br />\n		* fixed NotificationListenerHolder to correctly handle multiple specified object names<br />\n		* added &quot;allowEagerInit&quot; property to MBeanExporter, for autodetecting lazy-init beans and FactoryBean-produced objects<br />\n		* added &quot;environment&quot; property to MBeanClientInterceptor and NotificationListenerRegistar, allowing for JMX env entries<br />\n		* added &quot;refreshOnConnectFailure&quot; property to MBeanClientInterceptor, allowing for reconnect in case of I/O failure<br />\n		<br />\n		Package org.springframework.mail<br />\n		* ConfigurableMimeFileTypeMap explicitly closes the InputStream that it uses for &quot;mime.types&quot; resource reading<br />\n		<br />\n		Package org.springframework.mock<br />\n		* SimpleNamingContextBuilder supports &quot;deactivate()&quot;+&quot;activate()&quot;, with the standard JNDI provider exposed inbetween<br />\n		<br />\n		Package org.springframework.orm<br />\n		* HibernateTemplate detects Spring-managed transactional Session even with SessionFactory proxy and allowCreate=false<br />\n		* HibernateTemplate&#39;s &quot;loadAll&quot; operation selects distinct root entities (avoiding duplicate entries in result list)<br />\n		* HibernateTemplate translates Hibernate&#39;s DataException into a Spring DataIntegrityViolationException (for consistency)<br />\n		* fixed HibernateTransactionManager&#39;s &quot;earlyFlushBeforeCommit&quot; feature to apply to the outermost transaction only<br />\n		* added &quot;packagesToScan&quot; property to Hibernate AnnotationSessionFactoryBean, for autodetection of @Entity classes<br />\n		* HibernateJpaDialect checks &quot;EntityManager.getDelegate()&quot; as well to find Hibernate Session (for Seam compatibility)<br />\n		* added &quot;persistenceXmlLocation&quot; property to DefaultPersistenceUnitManager, as alternative to &quot;persistenceXmlLocations&quot;<br />\n		* @PersistenceContext of type TRANSACTION allows returned Query objects to be parameterized and executed as well<br />\n		* @PersistenceContext for default EntityManagerFactory lookup works even in an @Configurable Hibernate entity<br />\n		<br />\n		Package org.springframework.remoting<br />\n		* added &quot;interceptors&quot; property to RemoteExporter, allowing for registering custom AOP interceptors before the endpoint<br />\n		* RmiClientInterceptor always logs connect failure at warn level, even when debug logging (incl. stacktrace) is active<br />\n		* JndiRmiClientInterceptor skips narrowing for RmiInvocationHandler stubs (fixing a regression in 2.5.4)<br />\n		* Hessian/Burlap service exporters explicitly close input and output streams now (not relying on servlet container)<br />\n		* Simple/CommonsHttpInvokerRequestExecutor set the current locale according to LocaleContextHolder as HTTP lang header<br />\n		* JaxWsPortProxyFactoryBean exposes the JAX-WS BindingProvider interface in the Spring-generated proxy as well<br />\n		<br />\n		Package org.springframework.scheduling<br />\n		* SchedulerFactoryBean populates scheduler context first before satisfying SchedulerContextAware on a given JobFactory<br />\n		* SchedulerFactoryBean uses bean name as default scheduler name (when &quot;schedulerName&quot; property not explicitly specified)<br />\n		* SchedulerFactoryBean does not accept a pre-registered Scheduler instance in the Quartz SchedulerRepository anymore<br />\n		* SchedulerFactoryBean does not expose the Spring-created/managed Scheduler to the Quartz SchedulerRepository anymore<br />\n		* added &quot;exposeSchedulerInRepository&quot; flag to SchedulerFactoryBean, for explicit exposure to the SchedulerRepository<br />\n		* introduced SchedulerAccessorBean for registering jobs/triggers/listeners on an existing Quartz Scheduler instance<br />\n		* ScheduledExecutorFactoryBean uses Runnable decorator for logging exceptions that lead to termination of execution<br />\n		<br />\n		Package org.springframework.test<br />\n		* SpringJUnit4ClassRunner skips execution of test classes with non-matching @IfProfileValue annotation completely<br />\n		<br />\n		Package org.springframework.transaction<br />\n		* AbstractPlatformTransactionManager resumes after any kind of inner begin failure (not just after TransactionException)<br />\n		* TransactionSynchronizationManager interaction gets logged at trace level only (minimizing debug log per transaction)<br />\n		* JotmFactoryBean sets &quot;defaultTimeout&quot; value as actual JOTM default (even if no transaction timeout specified at all)<br />\n		<br />\n		Package org.springframework.util<br />\n		* fixed &quot;StringUtils.delete&quot; to prevent an eternal loop in case of the pattern being empty<br />\n		* &quot;StringUtils.cleanPath&quot; preserves leading slash if given in original path<br />\n		* &quot;FileSystemUtils.copyRecursively&quot; ignores &#39;special&#39; files (i.e. neither a regular file nor a directory)<br />\n		<br />\n		Package org.springframework.web<br />\n		* HttpRequestHandlerServlet propagates HTTP request locale into Spring&#39;s LocaleContextHolder<br />\n		* revised &quot;WebUtils.extractFilenameFromUrlPath&quot; to search actual URI part only even when given a URL with query string<br />\n		* Log4jNestedDiagnosticContextFilter/Interceptor explicitly remove the NDC stack if depth=0 after the &quot;NDC.pop()&quot; call<br />\n		* fixed FacesWebRequest&#39;s &quot;getParameterValues&quot; implementation to use &quot;ExternalContext.getRequestParameterValuesMap&quot;<br />\n		* PortletContextResource cleans given path (analogous to ServletContextResource)<br />\n		* Servlet/PortletContextResource accept path with leading &quot;/../&quot; part as well (as accepted by most servlet containers)<br />\n		* DispatcherServlet removes error-view-driven servlet request attributes after rendering (for Tomcat compatibility)<br />\n		* exposed &quot;getParamName()&quot; method on LocaleChangeInterceptor and ThemeChangeInterceptor<br />\n		* added &quot;cacheSecondsForSessionAttributeHandlers&quot; property to Servlet/Portlet AnnotationMethodHandlerAdapter<br />\n		* AnnotationMethodHandlerAdapter exposes special ModelMap that removes BindingResult if target attribute gets replaced<br />\n		* Servlet AnnotationMethodHandlerAdapter always takes first exact @RequestMapping path match as best path match<br />\n		* @MVC handler methods, model attribute methods and init binder methods allow for overriding a generic superclass method<br />\n		* @ModelAttribute annotated handler method arguments can resolve to a null value as well (when contained in the model)<br />\n		* standard method argument subtypes (such as a Principal subclass) fail with a descriptive exception if incompatible<br />\n		* Portlet AbstractCommandController falls back to lazy command creation if session timed out after action phase<br />\n		* ByteArray/StringMultipartFileEditor do not log warning but rather include root cause in IllegalArgumentException<br />\n		* InternalResourceView&#39;s &quot;preventDispatchLoop&quot; checks against the same request&#39;s URI only (for Portlet compatibility)<br />\n		* made RedirectView&#39;s &quot;renderMergedOutputModel&quot; implementation non-final<br />\n		* VelocityConfigurer exposes ServletContext as VelocityEngine attribute (analogous to the standard VelocityViewServlet)<br />\n		* revised XsltView to specify full resource URI as StreamSource system id, for properly resolving relative paths<br />\n		* officially deprecated AbstractXsltView in favor of XsltView and its more flexible &quot;locateSource&quot; mechanism<br />\n		* revised error logging during XSLT processing to properly log compilation errors before an eventual fatal exception<br />\n		* moved internal TransformerUtils helper class to generic &quot;org.springframework.util.xml&quot; package</p>\n</blockquote>', 'Spring 2.5.6是目前最稳定的2.5.x版本，下载包内含2.5.6的jar包，相关依赖的jar包，以及spring源码。如果你的工程还在使用2.5.x系列，建议升级到此版本。', 1286812800000, '2.5.6', 'Rod Johnson', '', 'springsource', '', '官方下载-http://s3.amazonaws.com/dist.springframework.org/release/SPR/spring-framework-2.5.6.SEC02.zip\n本站下载-http://story.ajava.org/spring/2.5.6.sec02.zip', '6M', '所有系统', 'Apache', '英文', 1286867119595, 1286867740699, 'admin'),
('000000002b9e98bc012b9f4ffe920013', '000000002b904fe6012b905b65d50003', 'Spring 2.5.6.SEC02 下载（含文档）', '最稳定的2.5.x版本', NULL, '<p>\n	Spring 2.5.6是目前最稳定的2.5.x版本，下载包内含2.5.6的jar包，相关依赖的jar包，以及spring源码，参考手册，java api文档。如果你的工程还在使用2.5.x系列，建议升级到此版本。</p>\n<p>\n	此版本的ChangeLog如下：</p>\n<blockquote>\n	<p>\n		Changes in version 2.5.6.SEC02 (2010-06-16)<br />\n		-------------------------------------<br />\n		<br />\n		Package org.springframework.beans<br />\n		* changed CachedIntrospectionResults to ignore Class.getClassLoader() method<br />\n		<br />\n		<br />\n		Changes in version 2.5.6.SEC01 (2009-04-22)<br />\n		-------------------------------------<br />\n		<br />\n		Package org.springframework.aop<br />\n		* changed serialization behavior of AbstractRegexpMethodPointcut and JdkRegexpMethodPointcut to avoid recompilation<br />\n		<br />\n		Package org.springframework.core<br />\n		* fixed issue with GenericTypeResolver where garbage collection was prevented under certain circumstances<br />\n		<br />\n		<br />\n		Changes in version 2.5.6 (2008-10-31)<br />\n		-------------------------------------<br />\n		<br />\n		General<br />\n		* removed outdated EAR support from sample applications<br />\n		* upgraded to AspectJ 1.6.2 (retaining compatibility with AspectJ 1.5.x and 1.6.x)<br />\n		* upgraded to EHCache 1.5.0 (retaining compatibility with EHCache 1.2 and higher)<br />\n		* upgraded to TestNG 5.8 (retaining compatibility with TestNG 5.5 and higher)<br />\n		* upgraded to OpenJPA 1.1.0 (retaining compatibility with OpenJPA 1.0.x as well as 1.2.0)<br />\n		* upgraded to EclipseLink 1.0.1 (EclipseLinkJpaVendorAdapter requires EclipseLink 1.0.0+ now)<br />\n		<br />\n		Package org.springframework.aop<br />\n		* AbstractAutoProxyCreator (as used by &quot;aop:config&quot;) correctly ignores null bean instances<br />\n		* &quot;aop:aspect&quot; doesn&#39;t insist on aspect bean reference to be specified when just containing declare-parents elements<br />\n		* &quot;bean&quot; pointcut matches exposed FactoryBean products only; &quot;&amp;...&quot; syntax supported for matching FactoryBean itself<br />\n		<br />\n		Package org.springframework.beans<br />\n		* BeanUtils skips conventional editor check for array classes (in order to not break AspectJ weaving)<br />\n		* BeanWrapper&#39;s introspection resolves bridge methods to find setter method for getter method with covariant return type<br />\n		* TypeMismatchException message differentiates between editor with inappropriate value returned versus no editor at all<br />\n		* containing bean definition is exposed to ParserContext for BeanDefinitionDecorators as well<br />\n		* BeanDefinition objects are considered equal even if their originating resource objects are different<br />\n		* AbstractFactoryBean&#39;s early singleton proxy handles equals, hashCode and toString calls locally (avoiding eager init)<br />\n		* PropertyPathFactoryBean logs a warning if the target bean is still in creation at the time of obtaining the property<br />\n		* exposed public &quot;copyRegisteredEditorsTo&quot; method on ConfigurableBeanFactory interface<br />\n		* fixed corner case in AbstractBeanDefinition where a ClassCastException could arise in &quot;getBeanClass(Name)&quot;<br />\n		* DefaultSingletonBeanRegistry eagerly cleans up cached dependency information when destroying a bean<br />\n		* AbstractBeanFactory rejects getBean request with arguments in case of a pre-existing singleton of same name as well<br />\n		* AbstractAutowireCapableBeanFactory preserves possible matches hint in property exception<br />\n		* SmartInstantiationAwareBeanPostProcessor&#39;s &quot;determineCandidateConstructors&quot; is only invoked for non-null bean Class<br />\n		* ServiceLocatorFactoryBean handles equals and hashCode based on proxy object identity<br />\n		* factored out &quot;createBeanDefinition&quot; template method in BeanDefinitionParserDelegate<br />\n		* turned visibility of BeanDefinitionParserDelegate&#39;s &quot;checkNameUniqueness&quot; method to protected<br />\n		* XML list/set/map elements (in both the beans and the util namespace) support nested description element<br />\n		<br />\n		Package org.springframework.cache<br />\n		* EhCacheFactoryBean obtains decorated Ehcache instead of raw Cache, honoring pre-configured cache decorators<br />\n		* removed useless &quot;diskStorePath&quot; property from EhCacheFactoryBean (ignored by all current EHCache versions anyway)<br />\n		<br />\n		Package org.springframework.context<br />\n		* DefaultMessageSourceResolvable and FieldError implement &quot;equals&quot; and &quot;hashCode&quot; such that all fields are respected<br />\n		* ClassPathBeanDefinitionScanner performs trace/debug logging during class resource introspection<br />\n		* ClassPathBeanDefinitionScanner ignores same class found multiple times in the classpath (i.e. equal bean definition)<br />\n		* component-scan preserves original source of scanned bean definitions, for silently ignoring already scanned classes<br />\n		* annotation-config registers PersistenceAnnotationBeanPostProcessor independent from client bundle&#39;s class loader<br />\n		* added CUSTOM value to FilterType enumeration<br />\n		<br />\n		Package org.springframework.core<br />\n		* ClassPathResource uses cleaned path for relative resources as well<br />\n		* PathMatchingResourcePatternResolver considers URL protocol &quot;vfszip&quot; as jar file (to search JBoss-managed jars)<br />\n		* GenericCollectionTypeResolver correctly resolves collection element type even when target bean is a collection itself<br />\n		<br />\n		Package org.springframework.ejb<br />\n		* SpringBeanAutowiringInterceptor calls &quot;InvocationContext.proceed()&quot; in order to invoke subsequent interceptors as well<br />\n		<br />\n		Package org.springframework.instrument<br />\n		* ShadowingClassLoader excludes &quot;net.sf.cglib.&quot; package from shadowing by default<br />\n		<br />\n		Package org.springframework.jdbc<br />\n		* provided Jdbc4SqlXmlHandler as default implementation of the SqlXmlHandler interface<br />\n		* added SqlValue class to &quot;jdbc.support&quot; package, with SqlXmlValue derived from SqlValue instead of SqlTypeValue<br />\n		* SQLErrorCodesFactory always loads its &quot;sql-error-codes.xml&quot; files from Spring&#39;s class loader (-&gt; static singleton)<br />\n		* added &quot;transientDataAccessResourceCodes&quot; category to &quot;sql-error-codes.xml&quot;, with default codes for DB2 and Sybase<br />\n		* SQLErrorCodeSQLExceptionTranslator applies default SQLExceptionSubclassTranslator after error code translation only<br />\n		* SQLErrorCodeSQLExceptionTranslator is able to work without fallback SQLState translation as well<br />\n		* SQLExceptionSubclassTranslator translates SQLFeatureNotSupportedException to InvalidDataAccessApiUsageException<br />\n		* SQLStateSQLExceptionTranslator returns TransientDataAccessResourceException for well-known vendor-specific SQL states<br />\n		* factored out AbstractFallbackSQLExceptionTranslator base class for consistent &quot;fallbackTranslator&quot; capabilities<br />\n		* CallableStatementCreatorFactory strictly honors &quot;SqlParameter.isInputValueProvided&quot; (allowing for statement caching)<br />\n		* JdbcTemplate passes full Calendar argument to JDBC driver even in case of no SQL type specified<br />\n		* JdbcTemplate does not call the costly &quot;Statement.getWarnings()&quot; unless ignoreWarnings=false or debug logging is on<br />\n		* added &quot;checkFullyPopulated&quot; setting to BeanPropertyRowMapper, for validating that all bean properties have been mapped<br />\n		<br />\n		Package org.springframework.jms<br />\n		* JmsException message and logged JMSException message explicitly includes linked exception now if not already contained<br />\n		* SingleConnectionFactory only calls &quot;Connection.stop()&quot; on reset when the shared Connection has actually been started<br />\n		* SingleConnectionFactory explicitly creates Queue/TopicConnection when first call is createQueue/TopicConnection method<br />\n		* CachingConnectionFactory explicitly creates Queue/TopicSession when first call is createQueue/TopicConnection method<br />\n		* CachingConnectionFactory&#39;s JMS Session proxies implement SessionProxy interface, allowing for access to target Session<br />\n		* CachingConnectionFactory rolls back cached transacted JMS Sessions on logical close if no commit/rollback was issued<br />\n		* CachingConnectionFactory explicitly closes cached JMS Sessions on Connection close<br />\n		* CachingConnectionFactory&#39;s cached producers pass on &quot;disableMessageID&quot; and &quot;disableMessageTimestamp&quot; properties<br />\n		* CachingConnectionFactory also caches MessageConsumers (controlled through &quot;cacheConsumers&quot; property)<br />\n		* AbstractJmsListeningContainer eagerly clears shared JMS Connection after releasing, avoiding repeated close exceptions<br />\n		* revised DefaultMessageListenerContainer to correctly work with non-JMS transaction manager and CACHE_CONNECTION level<br />\n		* DefaultMessageListenerContainer supports a stop notification callback for unlimited maxMessagesPerTask as well now<br />\n		* introduced SubscriptionNameProvider interface for message listener objects suggesting default subscription names<br />\n		* &quot;jms:listener-container&quot; uses actual message listener object&#39;s class name as default subscription name<br />\n		<br />\n		Package org.springframework.jmx<br />\n		* fixed NotificationListenerHolder to correctly handle multiple specified object names<br />\n		* added &quot;allowEagerInit&quot; property to MBeanExporter, for autodetecting lazy-init beans and FactoryBean-produced objects<br />\n		* added &quot;environment&quot; property to MBeanClientInterceptor and NotificationListenerRegistar, allowing for JMX env entries<br />\n		* added &quot;refreshOnConnectFailure&quot; property to MBeanClientInterceptor, allowing for reconnect in case of I/O failure<br />\n		<br />\n		Package org.springframework.mail<br />\n		* ConfigurableMimeFileTypeMap explicitly closes the InputStream that it uses for &quot;mime.types&quot; resource reading<br />\n		<br />\n		Package org.springframework.mock<br />\n		* SimpleNamingContextBuilder supports &quot;deactivate()&quot;+&quot;activate()&quot;, with the standard JNDI provider exposed inbetween<br />\n		<br />\n		Package org.springframework.orm<br />\n		* HibernateTemplate detects Spring-managed transactional Session even with SessionFactory proxy and allowCreate=false<br />\n		* HibernateTemplate&#39;s &quot;loadAll&quot; operation selects distinct root entities (avoiding duplicate entries in result list)<br />\n		* HibernateTemplate translates Hibernate&#39;s DataException into a Spring DataIntegrityViolationException (for consistency)<br />\n		* fixed HibernateTransactionManager&#39;s &quot;earlyFlushBeforeCommit&quot; feature to apply to the outermost transaction only<br />\n		* added &quot;packagesToScan&quot; property to Hibernate AnnotationSessionFactoryBean, for autodetection of @Entity classes<br />\n		* HibernateJpaDialect checks &quot;EntityManager.getDelegate()&quot; as well to find Hibernate Session (for Seam compatibility)<br />\n		* added &quot;persistenceXmlLocation&quot; property to DefaultPersistenceUnitManager, as alternative to &quot;persistenceXmlLocations&quot;<br />\n		* @PersistenceContext of type TRANSACTION allows returned Query objects to be parameterized and executed as well<br />\n		* @PersistenceContext for default EntityManagerFactory lookup works even in an @Configurable Hibernate entity<br />\n		<br />\n		Package org.springframework.remoting<br />\n		* added &quot;interceptors&quot; property to RemoteExporter, allowing for registering custom AOP interceptors before the endpoint<br />\n		* RmiClientInterceptor always logs connect failure at warn level, even when debug logging (incl. stacktrace) is active<br />\n		* JndiRmiClientInterceptor skips narrowing for RmiInvocationHandler stubs (fixing a regression in 2.5.4)<br />\n		* Hessian/Burlap service exporters explicitly close input and output streams now (not relying on servlet container)<br />\n		* Simple/CommonsHttpInvokerRequestExecutor set the current locale according to LocaleContextHolder as HTTP lang header<br />\n		* JaxWsPortProxyFactoryBean exposes the JAX-WS BindingProvider interface in the Spring-generated proxy as well<br />\n		<br />\n		Package org.springframework.scheduling<br />\n		* SchedulerFactoryBean populates scheduler context first before satisfying SchedulerContextAware on a given JobFactory<br />\n		* SchedulerFactoryBean uses bean name as default scheduler name (when &quot;schedulerName&quot; property not explicitly specified)<br />\n		* SchedulerFactoryBean does not accept a pre-registered Scheduler instance in the Quartz SchedulerRepository anymore<br />\n		* SchedulerFactoryBean does not expose the Spring-created/managed Scheduler to the Quartz SchedulerRepository anymore<br />\n		* added &quot;exposeSchedulerInRepository&quot; flag to SchedulerFactoryBean, for explicit exposure to the SchedulerRepository<br />\n		* introduced SchedulerAccessorBean for registering jobs/triggers/listeners on an existing Quartz Scheduler instance<br />\n		* ScheduledExecutorFactoryBean uses Runnable decorator for logging exceptions that lead to termination of execution<br />\n		<br />\n		Package org.springframework.test<br />\n		* SpringJUnit4ClassRunner skips execution of test classes with non-matching @IfProfileValue annotation completely<br />\n		<br />\n		Package org.springframework.transaction<br />\n		* AbstractPlatformTransactionManager resumes after any kind of inner begin failure (not just after TransactionException)<br />\n		* TransactionSynchronizationManager interaction gets logged at trace level only (minimizing debug log per transaction)<br />\n		* JotmFactoryBean sets &quot;defaultTimeout&quot; value as actual JOTM default (even if no transaction timeout specified at all)<br />\n		<br />\n		Package org.springframework.util<br />\n		* fixed &quot;StringUtils.delete&quot; to prevent an eternal loop in case of the pattern being empty<br />\n		* &quot;StringUtils.cleanPath&quot; preserves leading slash if given in original path<br />\n		* &quot;FileSystemUtils.copyRecursively&quot; ignores &#39;special&#39; files (i.e. neither a regular file nor a directory)<br />\n		<br />\n		Package org.springframework.web<br />\n		* HttpRequestHandlerServlet propagates HTTP request locale into Spring&#39;s LocaleContextHolder<br />\n		* revised &quot;WebUtils.extractFilenameFromUrlPath&quot; to search actual URI part only even when given a URL with query string<br />\n		* Log4jNestedDiagnosticContextFilter/Interceptor explicitly remove the NDC stack if depth=0 after the &quot;NDC.pop()&quot; call<br />\n		* fixed FacesWebRequest&#39;s &quot;getParameterValues&quot; implementation to use &quot;ExternalContext.getRequestParameterValuesMap&quot;<br />\n		* PortletContextResource cleans given path (analogous to ServletContextResource)<br />\n		* Servlet/PortletContextResource accept path with leading &quot;/../&quot; part as well (as accepted by most servlet containers)<br />\n		* DispatcherServlet removes error-view-driven servlet request attributes after rendering (for Tomcat compatibility)<br />\n		* exposed &quot;getParamName()&quot; method on LocaleChangeInterceptor and ThemeChangeInterceptor<br />\n		* added &quot;cacheSecondsForSessionAttributeHandlers&quot; property to Servlet/Portlet AnnotationMethodHandlerAdapter<br />\n		* AnnotationMethodHandlerAdapter exposes special ModelMap that removes BindingResult if target attribute gets replaced<br />\n		* Servlet AnnotationMethodHandlerAdapter always takes first exact @RequestMapping path match as best path match<br />\n		* @MVC handler methods, model attribute methods and init binder methods allow for overriding a generic superclass method<br />\n		* @ModelAttribute annotated handler method arguments can resolve to a null value as well (when contained in the model)<br />\n		* standard method argument subtypes (such as a Principal subclass) fail with a descriptive exception if incompatible<br />\n		* Portlet AbstractCommandController falls back to lazy command creation if session timed out after action phase<br />\n		* ByteArray/StringMultipartFileEditor do not log warning but rather include root cause in IllegalArgumentException<br />\n		* InternalResourceView&#39;s &quot;preventDispatchLoop&quot; checks against the same request&#39;s URI only (for Portlet compatibility)<br />\n		* made RedirectView&#39;s &quot;renderMergedOutputModel&quot; implementation non-final<br />\n		* VelocityConfigurer exposes ServletContext as VelocityEngine attribute (analogous to the standard VelocityViewServlet)<br />\n		* revised XsltView to specify full resource URI as StreamSource system id, for properly resolving relative paths<br />\n		* officially deprecated AbstractXsltView in favor of XsltView and its more flexible &quot;locateSource&quot; mechanism<br />\n		* revised error logging during XSLT processing to properly log compilation errors before an eventual fatal exception<br />\n		* moved internal TransformerUtils helper class to generic &quot;org.springframework.util.xml&quot; package</p>\n</blockquote>\n', 'Spring 2.5.6是目前最稳定的2.5.x版本，下载包内含2.5.6的jar包，相关依赖的jar包，以及spring源码，参考手册，java api文档。如果你的工程还在使用2.5.x系列，建议升级到此版本。', 1286812800000, '2.5.6', 'Rod Johnson', '', 'springsource', '', '官方下载-http://s3.amazonaws.com/dist.springframework.org/release/SPR/spring-framework-2.5.6.SEC02-with-docs.zip\n本站下载-http://story.ajava.org/spring/2.5.6.sec02-with-docs.zip', '35M', '所有系统', 'Apache', '英文', 1286868041362, 1286868041362, 'admin'),
('000000002b9e98bc012b9f87e7940018', '000000002b904fe6012b905b3c450002', 'Spring 2.0.8 在线API文档', '详细的Spring api javadoc', NULL, '<p>\n	Spring 2.0.8 在线API文档，是开发和学习spring必不可少的文档，建议大家收藏。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.springframework.aop</li>\n		<li>\n			org.springframework.aop.aspectj</li>\n		<li>\n			org.springframework.aop.aspectj.annotation</li>\n		<li>\n			org.springframework.aop.aspectj.autoproxy</li>\n		<li>\n			org.springframework.aop.config</li>\n		<li>\n			org.springframework.aop.framework</li>\n		<li>\n			org.springframework.aop.framework.adapter</li>\n		<li>\n			org.springframework.aop.framework.autoproxy</li>\n		<li>\n			org.springframework.aop.framework.autoproxy.target</li>\n		<li>\n			org.springframework.aop.interceptor</li>\n		<li>\n			org.springframework.aop.scope</li>\n		<li>\n			org.springframework.aop.support</li>\n		<li>\n			org.springframework.aop.support.annotation</li>\n		<li>\n			org.springframework.aop.target</li>\n		<li>\n			org.springframework.aop.target.dynamic</li>\n		<li>\n			org.springframework.beans</li>\n		<li>\n			org.springframework.beans.annotation</li>\n		<li>\n			org.springframework.beans.factory</li>\n		<li>\n			org.springframework.beans.factory.access</li>\n		<li>\n			org.springframework.beans.factory.annotation</li>\n		<li>\n			org.springframework.beans.factory.config</li>\n		<li>\n			org.springframework.beans.factory.generic</li>\n		<li>\n			org.springframework.beans.factory.parsing</li>\n		<li>\n			org.springframework.beans.factory.support</li>\n		<li>\n			org.springframework.beans.factory.wiring</li>\n		<li>\n			org.springframework.beans.factory.xml</li>\n		<li>\n			org.springframework.beans.propertyeditors</li>\n		<li>\n			org.springframework.beans.support</li>\n		<li>\n			org.springframework.cache.ehcache</li>\n		<li>\n			org.springframework.context</li>\n		<li>\n			org.springframework.context.access</li>\n		<li>\n			org.springframework.context.event</li>\n		<li>\n			org.springframework.context.i18n</li>\n		<li>\n			org.springframework.context.support</li>\n		<li>\n			org.springframework.core</li>\n		<li>\n			org.springframework.core.annotation</li>\n		<li>\n			org.springframework.core.enums</li>\n		<li>\n			org.springframework.core.io</li>\n		<li>\n			org.springframework.core.io.support</li>\n		<li>\n			org.springframework.core.style</li>\n		<li>\n			org.springframework.core.task</li>\n		<li>\n			org.springframework.dao</li>\n		<li>\n			org.springframework.dao.annotation</li>\n		<li>\n			org.springframework.dao.support</li>\n		<li>\n			org.springframework.ejb.access</li>\n		<li>\n			org.springframework.ejb.config</li>\n		<li>\n			org.springframework.ejb.support</li>\n		<li>\n			org.springframework.instrument</li>\n		<li>\n			org.springframework.instrument.classloading</li>\n		<li>\n			org.springframework.instrument.classloading.glassfish</li>\n		<li>\n			org.springframework.instrument.classloading.oc4j</li>\n		<li>\n			org.springframework.instrument.classloading.tomcat</li>\n		<li>\n			org.springframework.jca.cci</li>\n		<li>\n			org.springframework.jca.cci.connection</li>\n		<li>\n			org.springframework.jca.cci.core</li>\n		<li>\n			org.springframework.jca.cci.core.support</li>\n		<li>\n			org.springframework.jca.cci.object</li>\n		<li>\n			org.springframework.jca.support</li>\n		<li>\n			org.springframework.jca.work</li>\n		<li>\n			org.springframework.jdbc</li>\n		<li>\n			org.springframework.jdbc.core</li>\n		<li>\n			org.springframework.jdbc.core.namedparam</li>\n		<li>\n			org.springframework.jdbc.core.simple</li>\n		<li>\n			org.springframework.jdbc.core.support</li>\n		<li>\n			org.springframework.jdbc.datasource</li>\n		<li>\n			org.springframework.jdbc.datasource.lookup</li>\n		<li>\n			org.springframework.jdbc.object</li>\n		<li>\n			org.springframework.jdbc.support</li>\n		<li>\n			org.springframework.jdbc.support.incrementer</li>\n		<li>\n			org.springframework.jdbc.support.lob</li>\n		<li>\n			org.springframework.jdbc.support.nativejdbc</li>\n		<li>\n			org.springframework.jdbc.support.rowset</li>\n		<li>\n			org.springframework.jms</li>\n		<li>\n			org.springframework.jms.connection</li>\n		<li>\n			org.springframework.jms.core</li>\n		<li>\n			org.springframework.jms.core.support</li>\n		<li>\n			org.springframework.jms.listener</li>\n		<li>\n			org.springframework.jms.listener.adapter</li>\n		<li>\n			org.springframework.jms.listener.serversession</li>\n		<li>\n			org.springframework.jms.remoting</li>\n		<li>\n			org.springframework.jms.support</li>\n		<li>\n			org.springframework.jms.support.converter</li>\n		<li>\n			org.springframework.jms.support.destination</li>\n		<li>\n			org.springframework.jmx</li>\n		<li>\n			org.springframework.jmx.access</li>\n		<li>\n			org.springframework.jmx.export</li>\n		<li>\n			org.springframework.jmx.export.annotation</li>\n		<li>\n			org.springframework.jmx.export.assembler</li>\n		<li>\n			org.springframework.jmx.export.metadata</li>\n		<li>\n			org.springframework.jmx.export.naming</li>\n		<li>\n			org.springframework.jmx.export.notification</li>\n		<li>\n			org.springframework.jmx.support</li>\n		<li>\n			org.springframework.jndi</li>\n		<li>\n			org.springframework.mail</li>\n		<li>\n			org.springframework.mail.cos</li>\n		<li>\n			org.springframework.mail.javamail</li>\n		<li>\n			org.springframework.metadata</li>\n		<li>\n			org.springframework.metadata.commons</li>\n		<li>\n			org.springframework.mock.jndi</li>\n		<li>\n			org.springframework.mock.web</li>\n		<li>\n			org.springframework.mock.web.portlet</li>\n		<li>\n			org.springframework.orm</li>\n		<li>\n			org.springframework.orm.hibernate</li>\n		<li>\n			org.springframework.orm.hibernate.support</li>\n		<li>\n			org.springframework.orm.hibernate3</li>\n		<li>\n			org.springframework.orm.hibernate3.annotation</li>\n		<li>\n			org.springframework.orm.hibernate3.support</li>\n		<li>\n			org.springframework.orm.ibatis</li>\n		<li>\n			org.springframework.orm.ibatis.support</li>\n		<li>\n			org.springframework.orm.jdo</li>\n		<li>\n			org.springframework.orm.jdo.support</li>\n		<li>\n			org.springframework.orm.jpa</li>\n		<li>\n			org.springframework.orm.jpa.persistenceunit</li>\n		<li>\n			org.springframework.orm.jpa.support</li>\n		<li>\n			org.springframework.orm.jpa.vendor</li>\n		<li>\n			org.springframework.orm.toplink</li>\n		<li>\n			org.springframework.orm.toplink.support</li>\n		<li>\n			org.springframework.remoting</li>\n		<li>\n			org.springframework.remoting.caucho</li>\n		<li>\n			org.springframework.remoting.httpinvoker</li>\n		<li>\n			org.springframework.remoting.jaxrpc</li>\n		<li>\n			org.springframework.remoting.jaxrpc.support</li>\n		<li>\n			org.springframework.remoting.rmi</li>\n		<li>\n			org.springframework.remoting.support</li>\n		<li>\n			org.springframework.scheduling</li>\n		<li>\n			org.springframework.scheduling.backportconcurrent</li>\n		<li>\n			org.springframework.scheduling.commonj</li>\n		<li>\n			org.springframework.scheduling.concurrent</li>\n		<li>\n			org.springframework.scheduling.quartz</li>\n		<li>\n			org.springframework.scheduling.support</li>\n		<li>\n			org.springframework.scheduling.timer</li>\n		<li>\n			org.springframework.scripting</li>\n		<li>\n			org.springframework.scripting.bsh</li>\n		<li>\n			org.springframework.scripting.config</li>\n		<li>\n			org.springframework.scripting.groovy</li>\n		<li>\n			org.springframework.scripting.jruby</li>\n		<li>\n			org.springframework.scripting.support</li>\n		<li>\n			org.springframework.stereotype</li>\n		<li>\n			org.springframework.test</li>\n		<li>\n			org.springframework.test.annotation</li>\n		<li>\n			org.springframework.test.jpa</li>\n		<li>\n			org.springframework.test.web</li>\n		<li>\n			org.springframework.transaction</li>\n		<li>\n			org.springframework.transaction.annotation</li>\n		<li>\n			org.springframework.transaction.config</li>\n		<li>\n			org.springframework.transaction.interceptor</li>\n		<li>\n			org.springframework.transaction.jta</li>\n		<li>\n			org.springframework.transaction.support</li>\n		<li>\n			org.springframework.ui</li>\n		<li>\n			org.springframework.ui.context</li>\n		<li>\n			org.springframework.ui.context.support</li>\n		<li>\n			org.springframework.ui.freemarker</li>\n		<li>\n			org.springframework.ui.jasperreports</li>\n		<li>\n			org.springframework.ui.velocity</li>\n		<li>\n			org.springframework.util</li>\n		<li>\n			org.springframework.util.comparator</li>\n		<li>\n			org.springframework.util.xml</li>\n		<li>\n			org.springframework.validation</li>\n		<li>\n			org.springframework.web</li>\n		<li>\n			org.springframework.web.bind</li>\n		<li>\n			org.springframework.web.context</li>\n		<li>\n			org.springframework.web.context.request</li>\n		<li>\n			org.springframework.web.context.support</li>\n		<li>\n			org.springframework.web.filter</li>\n		<li>\n			org.springframework.web.jsf</li>\n		<li>\n			org.springframework.web.multipart</li>\n		<li>\n			org.springframework.web.multipart.commons</li>\n		<li>\n			org.springframework.web.multipart.cos</li>\n		<li>\n			org.springframework.web.multipart.support</li>\n		<li>\n			org.springframework.web.portlet</li>\n		<li>\n			org.springframework.web.portlet.bind</li>\n		<li>\n			org.springframework.web.portlet.context</li>\n		<li>\n			org.springframework.web.portlet.handler</li>\n		<li>\n			org.springframework.web.portlet.multipart</li>\n		<li>\n			org.springframework.web.portlet.mvc</li>\n		<li>\n			org.springframework.web.portlet.util</li>\n		<li>\n			org.springframework.web.servlet</li>\n		<li>\n			org.springframework.web.servlet.handler</li>\n		<li>\n			org.springframework.web.servlet.handler.metadata</li>\n		<li>\n			org.springframework.web.servlet.i18n</li>\n		<li>\n			org.springframework.web.servlet.mvc</li>\n		<li>\n			org.springframework.web.servlet.mvc.multiaction</li>\n		<li>\n			org.springframework.web.servlet.mvc.support</li>\n		<li>\n			org.springframework.web.servlet.mvc.throwaway</li>\n		<li>\n			org.springframework.web.servlet.support</li>\n		<li>\n			org.springframework.web.servlet.tags</li>\n		<li>\n			org.springframework.web.servlet.tags.form</li>\n		<li>\n			org.springframework.web.servlet.theme</li>\n		<li>\n			org.springframework.web.servlet.view</li>\n		<li>\n			org.springframework.web.servlet.view.document</li>\n		<li>\n			org.springframework.web.servlet.view.freemarker</li>\n		<li>\n			org.springframework.web.servlet.view.jasperreports</li>\n		<li>\n			org.springframework.web.servlet.view.tiles</li>\n		<li>\n			org.springframework.web.servlet.view.velocity</li>\n		<li>\n			org.springframework.web.servlet.view.xslt</li>\n		<li>\n			org.springframework.web.struts</li>\n		<li>\n			org.springframework.web.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/spring/2.0.8-javadoc-en/" target="_blank">Spring 2.0.8&nbsp; 在线API文档</a></p>\n', 'Spring 2.0.8 在线API文档，是开发和学习spring必不可少的文档，建议大家收藏。', 1286812800000, '2.0.8', 'Rod Johnson', '', 'springsource', '', '', '', '所有系统', 'Apache', '英文', 1286871705492, 1286871774227, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b9e98bc012b9f8e7203001e', '000000002b904fe6012b905b3c450002', 'Spring 2.5.6.SEC02 在线API文档', '详细的Spring api javadoc', NULL, '<p>\n	Spring 2.5.6 在线API文档，是开发和学习spring必不可少的文档，建议大家收藏。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.springframework.aop</li>\n		<li>\n			org.springframework.aop.aspectj</li>\n		<li>\n			org.springframework.aop.aspectj.annotation</li>\n		<li>\n			org.springframework.aop.aspectj.autoproxy</li>\n		<li>\n			org.springframework.aop.config</li>\n		<li>\n			org.springframework.aop.framework</li>\n		<li>\n			org.springframework.aop.framework.adapter</li>\n		<li>\n			org.springframework.aop.framework.autoproxy</li>\n		<li>\n			org.springframework.aop.framework.autoproxy.target</li>\n		<li>\n			org.springframework.aop.interceptor</li>\n		<li>\n			org.springframework.aop.scope</li>\n		<li>\n			org.springframework.aop.support</li>\n		<li>\n			org.springframework.aop.support.annotation</li>\n		<li>\n			org.springframework.aop.target</li>\n		<li>\n			org.springframework.aop.target.dynamic</li>\n		<li>\n			org.springframework.beans</li>\n		<li>\n			org.springframework.beans.annotation</li>\n		<li>\n			org.springframework.beans.factory</li>\n		<li>\n			org.springframework.beans.factory.access</li>\n		<li>\n			org.springframework.beans.factory.access.el</li>\n		<li>\n			org.springframework.beans.factory.annotation</li>\n		<li>\n			org.springframework.beans.factory.config</li>\n		<li>\n			org.springframework.beans.factory.generic</li>\n		<li>\n			org.springframework.beans.factory.parsing</li>\n		<li>\n			org.springframework.beans.factory.serviceloader</li>\n		<li>\n			org.springframework.beans.factory.support</li>\n		<li>\n			org.springframework.beans.factory.wiring</li>\n		<li>\n			org.springframework.beans.factory.xml</li>\n		<li>\n			org.springframework.beans.propertyeditors</li>\n		<li>\n			org.springframework.beans.support</li>\n		<li>\n			org.springframework.cache.ehcache</li>\n		<li>\n			org.springframework.context</li>\n		<li>\n			org.springframework.context.access</li>\n		<li>\n			org.springframework.context.annotation</li>\n		<li>\n			org.springframework.context.config</li>\n		<li>\n			org.springframework.context.event</li>\n		<li>\n			org.springframework.context.i18n</li>\n		<li>\n			org.springframework.context.support</li>\n		<li>\n			org.springframework.context.weaving</li>\n		<li>\n			org.springframework.core</li>\n		<li>\n			org.springframework.core.annotation</li>\n		<li>\n			org.springframework.core.enums</li>\n		<li>\n			org.springframework.core.io</li>\n		<li>\n			org.springframework.core.io.support</li>\n		<li>\n			org.springframework.core.style</li>\n		<li>\n			org.springframework.core.task</li>\n		<li>\n			org.springframework.core.task.support</li>\n		<li>\n			org.springframework.core.type</li>\n		<li>\n			org.springframework.core.type.classreading</li>\n		<li>\n			org.springframework.core.type.filter</li>\n		<li>\n			org.springframework.dao</li>\n		<li>\n			org.springframework.dao.annotation</li>\n		<li>\n			org.springframework.dao.support</li>\n		<li>\n			org.springframework.ejb.access</li>\n		<li>\n			org.springframework.ejb.config</li>\n		<li>\n			org.springframework.ejb.interceptor</li>\n		<li>\n			org.springframework.ejb.support</li>\n		<li>\n			org.springframework.instrument</li>\n		<li>\n			org.springframework.instrument.classloading</li>\n		<li>\n			org.springframework.instrument.classloading.glassfish</li>\n		<li>\n			org.springframework.instrument.classloading.oc4j</li>\n		<li>\n			org.springframework.instrument.classloading.tomcat</li>\n		<li>\n			org.springframework.instrument.classloading.weblogic</li>\n		<li>\n			org.springframework.jca.cci</li>\n		<li>\n			org.springframework.jca.cci.connection</li>\n		<li>\n			org.springframework.jca.cci.core</li>\n		<li>\n			org.springframework.jca.cci.core.support</li>\n		<li>\n			org.springframework.jca.cci.object</li>\n		<li>\n			org.springframework.jca.context</li>\n		<li>\n			org.springframework.jca.endpoint</li>\n		<li>\n			org.springframework.jca.support</li>\n		<li>\n			org.springframework.jca.work</li>\n		<li>\n			org.springframework.jca.work.glassfish</li>\n		<li>\n			org.springframework.jca.work.jboss</li>\n		<li>\n			org.springframework.jdbc</li>\n		<li>\n			org.springframework.jdbc.core</li>\n		<li>\n			org.springframework.jdbc.core.metadata</li>\n		<li>\n			org.springframework.jdbc.core.namedparam</li>\n		<li>\n			org.springframework.jdbc.core.simple</li>\n		<li>\n			org.springframework.jdbc.core.support</li>\n		<li>\n			org.springframework.jdbc.datasource</li>\n		<li>\n			org.springframework.jdbc.datasource.lookup</li>\n		<li>\n			org.springframework.jdbc.object</li>\n		<li>\n			org.springframework.jdbc.support</li>\n		<li>\n			org.springframework.jdbc.support.incrementer</li>\n		<li>\n			org.springframework.jdbc.support.lob</li>\n		<li>\n			org.springframework.jdbc.support.nativejdbc</li>\n		<li>\n			org.springframework.jdbc.support.rowset</li>\n		<li>\n			org.springframework.jdbc.support.xml</li>\n		<li>\n			org.springframework.jms</li>\n		<li>\n			org.springframework.jms.config</li>\n		<li>\n			org.springframework.jms.connection</li>\n		<li>\n			org.springframework.jms.core</li>\n		<li>\n			org.springframework.jms.core.support</li>\n		<li>\n			org.springframework.jms.listener</li>\n		<li>\n			org.springframework.jms.listener.adapter</li>\n		<li>\n			org.springframework.jms.listener.endpoint</li>\n		<li>\n			org.springframework.jms.listener.serversession</li>\n		<li>\n			org.springframework.jms.remoting</li>\n		<li>\n			org.springframework.jms.support</li>\n		<li>\n			org.springframework.jms.support.converter</li>\n		<li>\n			org.springframework.jms.support.destination</li>\n		<li>\n			org.springframework.jmx</li>\n		<li>\n			org.springframework.jmx.access</li>\n		<li>\n			org.springframework.jmx.export</li>\n		<li>\n			org.springframework.jmx.export.annotation</li>\n		<li>\n			org.springframework.jmx.export.assembler</li>\n		<li>\n			org.springframework.jmx.export.metadata</li>\n		<li>\n			org.springframework.jmx.export.naming</li>\n		<li>\n			org.springframework.jmx.export.notification</li>\n		<li>\n			org.springframework.jmx.support</li>\n		<li>\n			org.springframework.jndi</li>\n		<li>\n			org.springframework.jndi.support</li>\n		<li>\n			org.springframework.mail</li>\n		<li>\n			org.springframework.mail.javamail</li>\n		<li>\n			org.springframework.metadata</li>\n		<li>\n			org.springframework.metadata.commons</li>\n		<li>\n			org.springframework.mock.jndi</li>\n		<li>\n			org.springframework.mock.web</li>\n		<li>\n			org.springframework.mock.web.portlet</li>\n		<li>\n			org.springframework.orm</li>\n		<li>\n			org.springframework.orm.hibernate3</li>\n		<li>\n			org.springframework.orm.hibernate3.annotation</li>\n		<li>\n			org.springframework.orm.hibernate3.support</li>\n		<li>\n			org.springframework.orm.ibatis</li>\n		<li>\n			org.springframework.orm.ibatis.support</li>\n		<li>\n			org.springframework.orm.jdo</li>\n		<li>\n			org.springframework.orm.jdo.support</li>\n		<li>\n			org.springframework.orm.jpa</li>\n		<li>\n			org.springframework.orm.jpa.persistenceunit</li>\n		<li>\n			org.springframework.orm.jpa.support</li>\n		<li>\n			org.springframework.orm.jpa.vendor</li>\n		<li>\n			org.springframework.orm.toplink</li>\n		<li>\n			org.springframework.orm.toplink.support</li>\n		<li>\n			org.springframework.remoting</li>\n		<li>\n			org.springframework.remoting.caucho</li>\n		<li>\n			org.springframework.remoting.httpinvoker</li>\n		<li>\n			org.springframework.remoting.jaxrpc</li>\n		<li>\n			org.springframework.remoting.jaxrpc.support</li>\n		<li>\n			org.springframework.remoting.jaxws</li>\n		<li>\n			org.springframework.remoting.rmi</li>\n		<li>\n			org.springframework.remoting.soap</li>\n		<li>\n			org.springframework.remoting.support</li>\n		<li>\n			org.springframework.scheduling</li>\n		<li>\n			org.springframework.scheduling.backportconcurrent</li>\n		<li>\n			org.springframework.scheduling.commonj</li>\n		<li>\n			org.springframework.scheduling.concurrent</li>\n		<li>\n			org.springframework.scheduling.quartz</li>\n		<li>\n			org.springframework.scheduling.support</li>\n		<li>\n			org.springframework.scheduling.timer</li>\n		<li>\n			org.springframework.scripting</li>\n		<li>\n			org.springframework.scripting.bsh</li>\n		<li>\n			org.springframework.scripting.config</li>\n		<li>\n			org.springframework.scripting.groovy</li>\n		<li>\n			org.springframework.scripting.jruby</li>\n		<li>\n			org.springframework.scripting.support</li>\n		<li>\n			org.springframework.stereotype</li>\n		<li>\n			org.springframework.test</li>\n		<li>\n			org.springframework.test.annotation</li>\n		<li>\n			org.springframework.test.context</li>\n		<li>\n			org.springframework.test.context.junit38</li>\n		<li>\n			org.springframework.test.context.junit4</li>\n		<li>\n			org.springframework.test.context.support</li>\n		<li>\n			org.springframework.test.context.testng</li>\n		<li>\n			org.springframework.test.context.transaction</li>\n		<li>\n			org.springframework.test.jdbc</li>\n		<li>\n			org.springframework.test.jpa</li>\n		<li>\n			org.springframework.test.util</li>\n		<li>\n			org.springframework.test.web</li>\n		<li>\n			org.springframework.transaction</li>\n		<li>\n			org.springframework.transaction.annotation</li>\n		<li>\n			org.springframework.transaction.config</li>\n		<li>\n			org.springframework.transaction.interceptor</li>\n		<li>\n			org.springframework.transaction.jta</li>\n		<li>\n			org.springframework.transaction.support</li>\n		<li>\n			org.springframework.ui</li>\n		<li>\n			org.springframework.ui.context</li>\n		<li>\n			org.springframework.ui.context.support</li>\n		<li>\n			org.springframework.ui.freemarker</li>\n		<li>\n			org.springframework.ui.jasperreports</li>\n		<li>\n			org.springframework.ui.velocity</li>\n		<li>\n			org.springframework.util</li>\n		<li>\n			org.springframework.util.comparator</li>\n		<li>\n			org.springframework.util.xml</li>\n		<li>\n			org.springframework.validation</li>\n		<li>\n			org.springframework.validation.support</li>\n		<li>\n			org.springframework.web</li>\n		<li>\n			org.springframework.web.bind</li>\n		<li>\n			org.springframework.web.bind.annotation</li>\n		<li>\n			org.springframework.web.bind.annotation.support</li>\n		<li>\n			org.springframework.web.bind.support</li>\n		<li>\n			org.springframework.web.context</li>\n		<li>\n			org.springframework.web.context.request</li>\n		<li>\n			org.springframework.web.context.support</li>\n		<li>\n			org.springframework.web.filter</li>\n		<li>\n			org.springframework.web.jsf</li>\n		<li>\n			org.springframework.web.jsf.el</li>\n		<li>\n			org.springframework.web.multipart</li>\n		<li>\n			org.springframework.web.multipart.commons</li>\n		<li>\n			org.springframework.web.multipart.support</li>\n		<li>\n			org.springframework.web.portlet</li>\n		<li>\n			org.springframework.web.portlet.bind</li>\n		<li>\n			org.springframework.web.portlet.context</li>\n		<li>\n			org.springframework.web.portlet.handler</li>\n		<li>\n			org.springframework.web.portlet.multipart</li>\n		<li>\n			org.springframework.web.portlet.mvc</li>\n		<li>\n			org.springframework.web.portlet.mvc.annotation</li>\n		<li>\n			org.springframework.web.portlet.util</li>\n		<li>\n			org.springframework.web.servlet</li>\n		<li>\n			org.springframework.web.servlet.handler</li>\n		<li>\n			org.springframework.web.servlet.handler.metadata</li>\n		<li>\n			org.springframework.web.servlet.i18n</li>\n		<li>\n			org.springframework.web.servlet.mvc</li>\n		<li>\n			org.springframework.web.servlet.mvc.annotation</li>\n		<li>\n			org.springframework.web.servlet.mvc.multiaction</li>\n		<li>\n			org.springframework.web.servlet.mvc.support</li>\n		<li>\n			org.springframework.web.servlet.mvc.throwaway</li>\n		<li>\n			org.springframework.web.servlet.support</li>\n		<li>\n			org.springframework.web.servlet.tags</li>\n		<li>\n			org.springframework.web.servlet.tags.form</li>\n		<li>\n			org.springframework.web.servlet.theme</li>\n		<li>\n			org.springframework.web.servlet.view</li>\n		<li>\n			org.springframework.web.servlet.view.document</li>\n		<li>\n			org.springframework.web.servlet.view.freemarker</li>\n		<li>\n			org.springframework.web.servlet.view.jasperreports</li>\n		<li>\n			org.springframework.web.servlet.view.tiles</li>\n		<li>\n			org.springframework.web.servlet.view.tiles2</li>\n		<li>\n			org.springframework.web.servlet.view.velocity</li>\n		<li>\n			org.springframework.web.servlet.view.xslt</li>\n		<li>\n			org.springframework.web.struts</li>\n		<li>\n			org.springframework.web.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/spring/2.5.6.sec02-javadoc-en/" target="_blank">Spring 2.5.6.SEC02&nbsp; 在线API文档</a></p>\n', 'Spring 2.5.6 在线API文档，是开发和学习spring必不可少的文档，建议大家收藏。', 1286812800000, '2.5.6', 'Rod Johnson', '', 'springsource', '', '', '', '所有系统', 'Apache', '英文', 1286872134147, 1286872134147, 'admin'),
('000000002b9e98bc012b9f92f5b30022', '000000002b904fe6012b905b3c450002', 'Spring 3.0.4 在线API文档', '详细的Spring api javadoc', NULL, '<p>\n	Spring 3.0.4在线API文档，是开发和学习spring必不可少的文档，建议大家收藏。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.springframework.aop</li>\n		<li>\n			org.springframework.aop.aspectj</li>\n		<li>\n			org.springframework.aop.aspectj.annotation</li>\n		<li>\n			org.springframework.aop.aspectj.autoproxy</li>\n		<li>\n			org.springframework.aop.config</li>\n		<li>\n			org.springframework.aop.framework</li>\n		<li>\n			org.springframework.aop.framework.adapter</li>\n		<li>\n			org.springframework.aop.framework.autoproxy</li>\n		<li>\n			org.springframework.aop.framework.autoproxy.target</li>\n		<li>\n			org.springframework.aop.interceptor</li>\n		<li>\n			org.springframework.aop.scope</li>\n		<li>\n			org.springframework.aop.support</li>\n		<li>\n			org.springframework.aop.support.annotation</li>\n		<li>\n			org.springframework.aop.target</li>\n		<li>\n			org.springframework.aop.target.dynamic</li>\n		<li>\n			org.springframework.beans</li>\n		<li>\n			org.springframework.beans.annotation</li>\n		<li>\n			org.springframework.beans.factory</li>\n		<li>\n			org.springframework.beans.factory.access</li>\n		<li>\n			org.springframework.beans.factory.access.el</li>\n		<li>\n			org.springframework.beans.factory.annotation</li>\n		<li>\n			org.springframework.beans.factory.aspectj</li>\n		<li>\n			org.springframework.beans.factory.config</li>\n		<li>\n			org.springframework.beans.factory.parsing</li>\n		<li>\n			org.springframework.beans.factory.serviceloader</li>\n		<li>\n			org.springframework.beans.factory.support</li>\n		<li>\n			org.springframework.beans.factory.wiring</li>\n		<li>\n			org.springframework.beans.factory.xml</li>\n		<li>\n			org.springframework.beans.propertyeditors</li>\n		<li>\n			org.springframework.beans.support</li>\n		<li>\n			org.springframework.cache.ehcache</li>\n		<li>\n			org.springframework.context</li>\n		<li>\n			org.springframework.context.access</li>\n		<li>\n			org.springframework.context.annotation</li>\n		<li>\n			org.springframework.context.config</li>\n		<li>\n			org.springframework.context.event</li>\n		<li>\n			org.springframework.context.expression</li>\n		<li>\n			org.springframework.context.i18n</li>\n		<li>\n			org.springframework.context.support</li>\n		<li>\n			org.springframework.context.weaving</li>\n		<li>\n			org.springframework.core</li>\n		<li>\n			org.springframework.core.annotation</li>\n		<li>\n			org.springframework.core.convert</li>\n		<li>\n			org.springframework.core.convert.converter</li>\n		<li>\n			org.springframework.core.convert.support</li>\n		<li>\n			org.springframework.core.enums</li>\n		<li>\n			org.springframework.core.io</li>\n		<li>\n			org.springframework.core.io.support</li>\n		<li>\n			org.springframework.core.style</li>\n		<li>\n			org.springframework.core.task</li>\n		<li>\n			org.springframework.core.task.support</li>\n		<li>\n			org.springframework.core.type</li>\n		<li>\n			org.springframework.core.type.classreading</li>\n		<li>\n			org.springframework.core.type.filter</li>\n		<li>\n			org.springframework.dao</li>\n		<li>\n			org.springframework.dao.annotation</li>\n		<li>\n			org.springframework.dao.support</li>\n		<li>\n			org.springframework.ejb.access</li>\n		<li>\n			org.springframework.ejb.config</li>\n		<li>\n			org.springframework.ejb.interceptor</li>\n		<li>\n			org.springframework.ejb.support</li>\n		<li>\n			org.springframework.expression</li>\n		<li>\n			org.springframework.expression.common</li>\n		<li>\n			org.springframework.expression.spel</li>\n		<li>\n			org.springframework.expression.spel.ast</li>\n		<li>\n			org.springframework.expression.spel.standard</li>\n		<li>\n			org.springframework.expression.spel.support</li>\n		<li>\n			org.springframework.format</li>\n		<li>\n			org.springframework.format.annotation</li>\n		<li>\n			org.springframework.format.datetime</li>\n		<li>\n			org.springframework.format.datetime.joda</li>\n		<li>\n			org.springframework.format.number</li>\n		<li>\n			org.springframework.format.support</li>\n		<li>\n			org.springframework.http</li>\n		<li>\n			org.springframework.http.client</li>\n		<li>\n			org.springframework.http.client.support</li>\n		<li>\n			org.springframework.http.converter</li>\n		<li>\n			org.springframework.http.converter.feed</li>\n		<li>\n			org.springframework.http.converter.json</li>\n		<li>\n			org.springframework.http.converter.xml</li>\n		<li>\n			org.springframework.http.server</li>\n		<li>\n			org.springframework.instrument</li>\n		<li>\n			org.springframework.instrument.classloading</li>\n		<li>\n			org.springframework.instrument.classloading.glassfish</li>\n		<li>\n			org.springframework.instrument.classloading.jboss</li>\n		<li>\n			org.springframework.instrument.classloading.oc4j</li>\n		<li>\n			org.springframework.instrument.classloading.tomcat</li>\n		<li>\n			org.springframework.instrument.classloading.weblogic</li>\n		<li>\n			org.springframework.jca.cci</li>\n		<li>\n			org.springframework.jca.cci.connection</li>\n		<li>\n			org.springframework.jca.cci.core</li>\n		<li>\n			org.springframework.jca.cci.core.support</li>\n		<li>\n			org.springframework.jca.cci.object</li>\n		<li>\n			org.springframework.jca.context</li>\n		<li>\n			org.springframework.jca.endpoint</li>\n		<li>\n			org.springframework.jca.support</li>\n		<li>\n			org.springframework.jca.work</li>\n		<li>\n			org.springframework.jca.work.glassfish</li>\n		<li>\n			org.springframework.jca.work.jboss</li>\n		<li>\n			org.springframework.jdbc</li>\n		<li>\n			org.springframework.jdbc.config</li>\n		<li>\n			org.springframework.jdbc.core</li>\n		<li>\n			org.springframework.jdbc.core.metadata</li>\n		<li>\n			org.springframework.jdbc.core.namedparam</li>\n		<li>\n			org.springframework.jdbc.core.simple</li>\n		<li>\n			org.springframework.jdbc.core.support</li>\n		<li>\n			org.springframework.jdbc.datasource</li>\n		<li>\n			org.springframework.jdbc.datasource.embedded</li>\n		<li>\n			org.springframework.jdbc.datasource.init</li>\n		<li>\n			org.springframework.jdbc.datasource.lookup</li>\n		<li>\n			org.springframework.jdbc.object</li>\n		<li>\n			org.springframework.jdbc.support</li>\n		<li>\n			org.springframework.jdbc.support.incrementer</li>\n		<li>\n			org.springframework.jdbc.support.lob</li>\n		<li>\n			org.springframework.jdbc.support.nativejdbc</li>\n		<li>\n			org.springframework.jdbc.support.rowset</li>\n		<li>\n			org.springframework.jdbc.support.xml</li>\n		<li>\n			org.springframework.jms</li>\n		<li>\n			org.springframework.jms.config</li>\n		<li>\n			org.springframework.jms.connection</li>\n		<li>\n			org.springframework.jms.core</li>\n		<li>\n			org.springframework.jms.core.support</li>\n		<li>\n			org.springframework.jms.listener</li>\n		<li>\n			org.springframework.jms.listener.adapter</li>\n		<li>\n			org.springframework.jms.listener.endpoint</li>\n		<li>\n			org.springframework.jms.remoting</li>\n		<li>\n			org.springframework.jms.support</li>\n		<li>\n			org.springframework.jms.support.converter</li>\n		<li>\n			org.springframework.jms.support.destination</li>\n		<li>\n			org.springframework.jmx</li>\n		<li>\n			org.springframework.jmx.access</li>\n		<li>\n			org.springframework.jmx.export</li>\n		<li>\n			org.springframework.jmx.export.annotation</li>\n		<li>\n			org.springframework.jmx.export.assembler</li>\n		<li>\n			org.springframework.jmx.export.metadata</li>\n		<li>\n			org.springframework.jmx.export.naming</li>\n		<li>\n			org.springframework.jmx.export.notification</li>\n		<li>\n			org.springframework.jmx.support</li>\n		<li>\n			org.springframework.jndi</li>\n		<li>\n			org.springframework.jndi.support</li>\n		<li>\n			org.springframework.mail</li>\n		<li>\n			org.springframework.mail.javamail</li>\n		<li>\n			org.springframework.mock.jndi</li>\n		<li>\n			org.springframework.mock.staticmock</li>\n		<li>\n			org.springframework.mock.web</li>\n		<li>\n			org.springframework.mock.web.portlet</li>\n		<li>\n			org.springframework.orm</li>\n		<li>\n			org.springframework.orm.hibernate3</li>\n		<li>\n			org.springframework.orm.hibernate3.annotation</li>\n		<li>\n			org.springframework.orm.hibernate3.support</li>\n		<li>\n			org.springframework.orm.ibatis</li>\n		<li>\n			org.springframework.orm.ibatis.support</li>\n		<li>\n			org.springframework.orm.jdo</li>\n		<li>\n			org.springframework.orm.jdo.support</li>\n		<li>\n			org.springframework.orm.jpa</li>\n		<li>\n			org.springframework.orm.jpa.persistenceunit</li>\n		<li>\n			org.springframework.orm.jpa.support</li>\n		<li>\n			org.springframework.orm.jpa.vendor</li>\n		<li>\n			org.springframework.oxm</li>\n		<li>\n			org.springframework.oxm.castor</li>\n		<li>\n			org.springframework.oxm.config</li>\n		<li>\n			org.springframework.oxm.jaxb</li>\n		<li>\n			org.springframework.oxm.jibx</li>\n		<li>\n			org.springframework.oxm.mime</li>\n		<li>\n			org.springframework.oxm.support</li>\n		<li>\n			org.springframework.oxm.xmlbeans</li>\n		<li>\n			org.springframework.oxm.xstream</li>\n		<li>\n			org.springframework.remoting</li>\n		<li>\n			org.springframework.remoting.caucho</li>\n		<li>\n			org.springframework.remoting.httpinvoker</li>\n		<li>\n			org.springframework.remoting.jaxrpc</li>\n		<li>\n			org.springframework.remoting.jaxws</li>\n		<li>\n			org.springframework.remoting.rmi</li>\n		<li>\n			org.springframework.remoting.soap</li>\n		<li>\n			org.springframework.remoting.support</li>\n		<li>\n			org.springframework.scheduling</li>\n		<li>\n			org.springframework.scheduling.annotation</li>\n		<li>\n			org.springframework.scheduling.backportconcurrent</li>\n		<li>\n			org.springframework.scheduling.commonj</li>\n		<li>\n			org.springframework.scheduling.concurrent</li>\n		<li>\n			org.springframework.scheduling.config</li>\n		<li>\n			org.springframework.scheduling.quartz</li>\n		<li>\n			org.springframework.scheduling.support</li>\n		<li>\n			org.springframework.scheduling.timer</li>\n		<li>\n			org.springframework.scripting</li>\n		<li>\n			org.springframework.scripting.bsh</li>\n		<li>\n			org.springframework.scripting.config</li>\n		<li>\n			org.springframework.scripting.groovy</li>\n		<li>\n			org.springframework.scripting.jruby</li>\n		<li>\n			org.springframework.scripting.support</li>\n		<li>\n			org.springframework.stereotype</li>\n		<li>\n			org.springframework.test</li>\n		<li>\n			org.springframework.test.annotation</li>\n		<li>\n			org.springframework.test.context</li>\n		<li>\n			org.springframework.test.context.junit38</li>\n		<li>\n			org.springframework.test.context.junit4</li>\n		<li>\n			org.springframework.test.context.junit4.statements</li>\n		<li>\n			org.springframework.test.context.support</li>\n		<li>\n			org.springframework.test.context.testng</li>\n		<li>\n			org.springframework.test.context.transaction</li>\n		<li>\n			org.springframework.test.jdbc</li>\n		<li>\n			org.springframework.test.jpa</li>\n		<li>\n			org.springframework.test.util</li>\n		<li>\n			org.springframework.test.web</li>\n		<li>\n			org.springframework.transaction</li>\n		<li>\n			org.springframework.transaction.annotation</li>\n		<li>\n			org.springframework.transaction.config</li>\n		<li>\n			org.springframework.transaction.interceptor</li>\n		<li>\n			org.springframework.transaction.jta</li>\n		<li>\n			org.springframework.transaction.support</li>\n		<li>\n			org.springframework.ui</li>\n		<li>\n			org.springframework.ui.context</li>\n		<li>\n			org.springframework.ui.context.support</li>\n		<li>\n			org.springframework.ui.freemarker</li>\n		<li>\n			org.springframework.ui.jasperreports</li>\n		<li>\n			org.springframework.ui.velocity</li>\n		<li>\n			org.springframework.util</li>\n		<li>\n			org.springframework.util.comparator</li>\n		<li>\n			org.springframework.util.xml</li>\n		<li>\n			org.springframework.validation</li>\n		<li>\n			org.springframework.validation.beanvalidation</li>\n		<li>\n			org.springframework.validation.support</li>\n		<li>\n			org.springframework.web</li>\n		<li>\n			org.springframework.web.bind</li>\n		<li>\n			org.springframework.web.bind.annotation</li>\n		<li>\n			org.springframework.web.bind.annotation.support</li>\n		<li>\n			org.springframework.web.bind.support</li>\n		<li>\n			org.springframework.web.client</li>\n		<li>\n			org.springframework.web.client.support</li>\n		<li>\n			org.springframework.web.context</li>\n		<li>\n			org.springframework.web.context.request</li>\n		<li>\n			org.springframework.web.context.support</li>\n		<li>\n			org.springframework.web.filter</li>\n		<li>\n			org.springframework.web.jsf</li>\n		<li>\n			org.springframework.web.jsf.el</li>\n		<li>\n			org.springframework.web.multipart</li>\n		<li>\n			org.springframework.web.multipart.commons</li>\n		<li>\n			org.springframework.web.multipart.support</li>\n		<li>\n			org.springframework.web.portlet</li>\n		<li>\n			org.springframework.web.portlet.bind</li>\n		<li>\n			org.springframework.web.portlet.bind.annotation</li>\n		<li>\n			org.springframework.web.portlet.context</li>\n		<li>\n			org.springframework.web.portlet.handler</li>\n		<li>\n			org.springframework.web.portlet.multipart</li>\n		<li>\n			org.springframework.web.portlet.mvc</li>\n		<li>\n			org.springframework.web.portlet.mvc.annotation</li>\n		<li>\n			org.springframework.web.portlet.util</li>\n		<li>\n			org.springframework.web.servlet</li>\n		<li>\n			org.springframework.web.servlet.config</li>\n		<li>\n			org.springframework.web.servlet.handler</li>\n		<li>\n			org.springframework.web.servlet.i18n</li>\n		<li>\n			org.springframework.web.servlet.mvc</li>\n		<li>\n			org.springframework.web.servlet.mvc.annotation</li>\n		<li>\n			org.springframework.web.servlet.mvc.multiaction</li>\n		<li>\n			org.springframework.web.servlet.mvc.support</li>\n		<li>\n			org.springframework.web.servlet.resource</li>\n		<li>\n			org.springframework.web.servlet.support</li>\n		<li>\n			org.springframework.web.servlet.tags</li>\n		<li>\n			org.springframework.web.servlet.tags.form</li>\n		<li>\n			org.springframework.web.servlet.theme</li>\n		<li>\n			org.springframework.web.servlet.view</li>\n		<li>\n			org.springframework.web.servlet.view.document</li>\n		<li>\n			org.springframework.web.servlet.view.feed</li>\n		<li>\n			org.springframework.web.servlet.view.freemarker</li>\n		<li>\n			org.springframework.web.servlet.view.jasperreports</li>\n		<li>\n			org.springframework.web.servlet.view.json</li>\n		<li>\n			org.springframework.web.servlet.view.tiles</li>\n		<li>\n			org.springframework.web.servlet.view.tiles2</li>\n		<li>\n			org.springframework.web.servlet.view.velocity</li>\n		<li>\n			org.springframework.web.servlet.view.xml</li>\n		<li>\n			org.springframework.web.servlet.view.xslt</li>\n		<li>\n			org.springframework.web.struts</li>\n		<li>\n			org.springframework.web.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/spring/3.0.4-javadoc-en/" target="_blank">Spring 3.0.4&nbsp; 在线API文档</a></p>\n', 'Spring 3.0.4在线API文档，是开发和学习spring必不可少的文档，建议大家收藏。', 1286812800000, '3.0.4', 'Rod Johnson', '', 'springsource', '', '', '', '所有系统', 'Apache', '英文', 1286872430003, 1286936652876, 'admin'),
('000000002b9e98bc012b9f9a61250026', '000000002b904fe6012b905bd4060004', 'spring 2.0.8 在线Java源码', '在线查看spring源代码', NULL, '<p>\n	spring 2.0.8 在线Java源码，直接通过浏览器浏览spring的源代码，方便开发人员学习spring的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.springframework.aop</li>\n		<li>\n			org.springframework.aop.aspectj</li>\n		<li>\n			org.springframework.aop.aspectj.annotation</li>\n		<li>\n			org.springframework.aop.aspectj.autoproxy</li>\n		<li>\n			org.springframework.aop.config</li>\n		<li>\n			org.springframework.aop.framework</li>\n		<li>\n			org.springframework.aop.framework.adapter</li>\n		<li>\n			org.springframework.aop.framework.autoproxy</li>\n		<li>\n			org.springframework.aop.framework.autoproxy.target</li>\n		<li>\n			org.springframework.aop.interceptor</li>\n		<li>\n			org.springframework.aop.scope</li>\n		<li>\n			org.springframework.aop.support</li>\n		<li>\n			org.springframework.aop.support.annotation</li>\n		<li>\n			org.springframework.aop.target</li>\n		<li>\n			org.springframework.aop.target.dynamic</li>\n		<li>\n			org.springframework.beans</li>\n		<li>\n			org.springframework.beans.annotation</li>\n		<li>\n			org.springframework.beans.factory</li>\n		<li>\n			org.springframework.beans.factory.access</li>\n		<li>\n			org.springframework.beans.factory.annotation</li>\n		<li>\n			org.springframework.beans.factory.config</li>\n		<li>\n			org.springframework.beans.factory.generic</li>\n		<li>\n			org.springframework.beans.factory.parsing</li>\n		<li>\n			org.springframework.beans.factory.support</li>\n		<li>\n			org.springframework.beans.factory.wiring</li>\n		<li>\n			org.springframework.beans.factory.xml</li>\n		<li>\n			org.springframework.beans.propertyeditors</li>\n		<li>\n			org.springframework.beans.support</li>\n		<li>\n			org.springframework.cache.ehcache</li>\n		<li>\n			org.springframework.context</li>\n		<li>\n			org.springframework.context.access</li>\n		<li>\n			org.springframework.context.event</li>\n		<li>\n			org.springframework.context.i18n</li>\n		<li>\n			org.springframework.context.support</li>\n		<li>\n			org.springframework.core</li>\n		<li>\n			org.springframework.core.annotation</li>\n		<li>\n			org.springframework.core.enums</li>\n		<li>\n			org.springframework.core.io</li>\n		<li>\n			org.springframework.core.io.support</li>\n		<li>\n			org.springframework.core.style</li>\n		<li>\n			org.springframework.core.task</li>\n		<li>\n			org.springframework.dao</li>\n		<li>\n			org.springframework.dao.annotation</li>\n		<li>\n			org.springframework.dao.support</li>\n		<li>\n			org.springframework.ejb.access</li>\n		<li>\n			org.springframework.ejb.config</li>\n		<li>\n			org.springframework.ejb.support</li>\n		<li>\n			org.springframework.instrument</li>\n		<li>\n			org.springframework.instrument.classloading</li>\n		<li>\n			org.springframework.instrument.classloading.glassfish</li>\n		<li>\n			org.springframework.instrument.classloading.oc4j</li>\n		<li>\n			org.springframework.instrument.classloading.tomcat</li>\n		<li>\n			org.springframework.jca.cci</li>\n		<li>\n			org.springframework.jca.cci.connection</li>\n		<li>\n			org.springframework.jca.cci.core</li>\n		<li>\n			org.springframework.jca.cci.core.support</li>\n		<li>\n			org.springframework.jca.cci.object</li>\n		<li>\n			org.springframework.jca.support</li>\n		<li>\n			org.springframework.jca.work</li>\n		<li>\n			org.springframework.jdbc</li>\n		<li>\n			org.springframework.jdbc.core</li>\n		<li>\n			org.springframework.jdbc.core.namedparam</li>\n		<li>\n			org.springframework.jdbc.core.simple</li>\n		<li>\n			org.springframework.jdbc.core.support</li>\n		<li>\n			org.springframework.jdbc.datasource</li>\n		<li>\n			org.springframework.jdbc.datasource.lookup</li>\n		<li>\n			org.springframework.jdbc.object</li>\n		<li>\n			org.springframework.jdbc.support</li>\n		<li>\n			org.springframework.jdbc.support.incrementer</li>\n		<li>\n			org.springframework.jdbc.support.lob</li>\n		<li>\n			org.springframework.jdbc.support.nativejdbc</li>\n		<li>\n			org.springframework.jdbc.support.rowset</li>\n		<li>\n			org.springframework.jms</li>\n		<li>\n			org.springframework.jms.connection</li>\n		<li>\n			org.springframework.jms.core</li>\n		<li>\n			org.springframework.jms.core.support</li>\n		<li>\n			org.springframework.jms.listener</li>\n		<li>\n			org.springframework.jms.listener.adapter</li>\n		<li>\n			org.springframework.jms.listener.serversession</li>\n		<li>\n			org.springframework.jms.remoting</li>\n		<li>\n			org.springframework.jms.support</li>\n		<li>\n			org.springframework.jms.support.converter</li>\n		<li>\n			org.springframework.jms.support.destination</li>\n		<li>\n			org.springframework.jmx</li>\n		<li>\n			org.springframework.jmx.access</li>\n		<li>\n			org.springframework.jmx.export</li>\n		<li>\n			org.springframework.jmx.export.annotation</li>\n		<li>\n			org.springframework.jmx.export.assembler</li>\n		<li>\n			org.springframework.jmx.export.metadata</li>\n		<li>\n			org.springframework.jmx.export.naming</li>\n		<li>\n			org.springframework.jmx.export.notification</li>\n		<li>\n			org.springframework.jmx.support</li>\n		<li>\n			org.springframework.jndi</li>\n		<li>\n			org.springframework.mail</li>\n		<li>\n			org.springframework.mail.cos</li>\n		<li>\n			org.springframework.mail.javamail</li>\n		<li>\n			org.springframework.metadata</li>\n		<li>\n			org.springframework.metadata.commons</li>\n		<li>\n			org.springframework.mock.jndi</li>\n		<li>\n			org.springframework.mock.web</li>\n		<li>\n			org.springframework.mock.web.portlet</li>\n		<li>\n			org.springframework.orm</li>\n		<li>\n			org.springframework.orm.hibernate</li>\n		<li>\n			org.springframework.orm.hibernate.support</li>\n		<li>\n			org.springframework.orm.hibernate3</li>\n		<li>\n			org.springframework.orm.hibernate3.annotation</li>\n		<li>\n			org.springframework.orm.hibernate3.support</li>\n		<li>\n			org.springframework.orm.ibatis</li>\n		<li>\n			org.springframework.orm.ibatis.support</li>\n		<li>\n			org.springframework.orm.jdo</li>\n		<li>\n			org.springframework.orm.jdo.support</li>\n		<li>\n			org.springframework.orm.jpa</li>\n		<li>\n			org.springframework.orm.jpa.persistenceunit</li>\n		<li>\n			org.springframework.orm.jpa.support</li>\n		<li>\n			org.springframework.orm.jpa.vendor</li>\n		<li>\n			org.springframework.orm.toplink</li>\n		<li>\n			org.springframework.orm.toplink.support</li>\n		<li>\n			org.springframework.remoting</li>\n		<li>\n			org.springframework.remoting.caucho</li>\n		<li>\n			org.springframework.remoting.httpinvoker</li>\n		<li>\n			org.springframework.remoting.jaxrpc</li>\n		<li>\n			org.springframework.remoting.jaxrpc.support</li>\n		<li>\n			org.springframework.remoting.rmi</li>\n		<li>\n			org.springframework.remoting.support</li>\n		<li>\n			org.springframework.scheduling</li>\n		<li>\n			org.springframework.scheduling.backportconcurrent</li>\n		<li>\n			org.springframework.scheduling.commonj</li>\n		<li>\n			org.springframework.scheduling.concurrent</li>\n		<li>\n			org.springframework.scheduling.quartz</li>\n		<li>\n			org.springframework.scheduling.support</li>\n		<li>\n			org.springframework.scheduling.timer</li>\n		<li>\n			org.springframework.scripting</li>\n		<li>\n			org.springframework.scripting.bsh</li>\n		<li>\n			org.springframework.scripting.config</li>\n		<li>\n			org.springframework.scripting.groovy</li>\n		<li>\n			org.springframework.scripting.jruby</li>\n		<li>\n			org.springframework.scripting.support</li>\n		<li>\n			org.springframework.stereotype</li>\n		<li>\n			org.springframework.test</li>\n		<li>\n			org.springframework.test.annotation</li>\n		<li>\n			org.springframework.test.jpa</li>\n		<li>\n			org.springframework.test.web</li>\n		<li>\n			org.springframework.transaction</li>\n		<li>\n			org.springframework.transaction.annotation</li>\n		<li>\n			org.springframework.transaction.config</li>\n		<li>\n			org.springframework.transaction.interceptor</li>\n		<li>\n			org.springframework.transaction.jta</li>\n		<li>\n			org.springframework.transaction.support</li>\n		<li>\n			org.springframework.ui</li>\n		<li>\n			org.springframework.ui.context</li>\n		<li>\n			org.springframework.ui.context.support</li>\n		<li>\n			org.springframework.ui.freemarker</li>\n		<li>\n			org.springframework.ui.jasperreports</li>\n		<li>\n			org.springframework.ui.velocity</li>\n		<li>\n			org.springframework.util</li>\n		<li>\n			org.springframework.util.comparator</li>\n		<li>\n			org.springframework.util.xml</li>\n		<li>\n			org.springframework.validation</li>\n		<li>\n			org.springframework.web</li>\n		<li>\n			org.springframework.web.bind</li>\n		<li>\n			org.springframework.web.context</li>\n		<li>\n			org.springframework.web.context.request</li>\n		<li>\n			org.springframework.web.context.support</li>\n		<li>\n			org.springframework.web.filter</li>\n		<li>\n			org.springframework.web.jsf</li>\n		<li>\n			org.springframework.web.multipart</li>\n		<li>\n			org.springframework.web.multipart.commons</li>\n		<li>\n			org.springframework.web.multipart.cos</li>\n		<li>\n			org.springframework.web.multipart.support</li>\n		<li>\n			org.springframework.web.portlet</li>\n		<li>\n			org.springframework.web.portlet.bind</li>\n		<li>\n			org.springframework.web.portlet.context</li>\n		<li>\n			org.springframework.web.portlet.handler</li>\n		<li>\n			org.springframework.web.portlet.multipart</li>\n		<li>\n			org.springframework.web.portlet.mvc</li>\n		<li>\n			org.springframework.web.portlet.util</li>\n		<li>\n			org.springframework.web.servlet</li>\n		<li>\n			org.springframework.web.servlet.handler</li>\n		<li>\n			org.springframework.web.servlet.handler.metadata</li>\n		<li>\n			org.springframework.web.servlet.i18n</li>\n		<li>\n			org.springframework.web.servlet.mvc</li>\n		<li>\n			org.springframework.web.servlet.mvc.multiaction</li>\n		<li>\n			org.springframework.web.servlet.mvc.support</li>\n		<li>\n			org.springframework.web.servlet.mvc.throwaway</li>\n		<li>\n			org.springframework.web.servlet.support</li>\n		<li>\n			org.springframework.web.servlet.tags</li>\n		<li>\n			org.springframework.web.servlet.tags.form</li>\n		<li>\n			org.springframework.web.servlet.theme</li>\n		<li>\n			org.springframework.web.servlet.view</li>\n		<li>\n			org.springframework.web.servlet.view.document</li>\n		<li>\n			org.springframework.web.servlet.view.freemarker</li>\n		<li>\n			org.springframework.web.servlet.view.jasperreports</li>\n		<li>\n			org.springframework.web.servlet.view.tiles</li>\n		<li>\n			org.springframework.web.servlet.view.velocity</li>\n		<li>\n			org.springframework.web.servlet.view.xslt</li>\n		<li>\n			org.springframework.web.struts</li>\n		<li>\n			org.springframework.web.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/spring/2.0.8-src/" target="_blank">spring 2.0.8 在线Java源码</a></p>\n', 'spring 2.0.8 在线Java源码，直接通过浏览器浏览spring的源代码，方便开发人员学习spring的内部实现。', 1286812800000, '2.0.8', 'Rod Johnson', '', 'springsource', '', '', '', '所有系统', 'Apache', '英文', 1286872916261, 1286873066316, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b9e98bc012b9fa5507e0040', '000000002b904fe6012b905bd4060004', 'Spring 2.5.6.SEC02 在线Java源码', '在线查看spring源代码', NULL, '<p>\n	spring 2.5.6 在线Java源码，直接通过浏览器浏览spring的源代码，方便开发人员学习spring的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.springframework.aop</li>\n		<li>\n			org.springframework.aop.aspectj</li>\n		<li>\n			org.springframework.aop.aspectj.annotation</li>\n		<li>\n			org.springframework.aop.aspectj.autoproxy</li>\n		<li>\n			org.springframework.aop.config</li>\n		<li>\n			org.springframework.aop.framework</li>\n		<li>\n			org.springframework.aop.framework.adapter</li>\n		<li>\n			org.springframework.aop.framework.autoproxy</li>\n		<li>\n			org.springframework.aop.framework.autoproxy.target</li>\n		<li>\n			org.springframework.aop.interceptor</li>\n		<li>\n			org.springframework.aop.scope</li>\n		<li>\n			org.springframework.aop.support</li>\n		<li>\n			org.springframework.aop.support.annotation</li>\n		<li>\n			org.springframework.aop.target</li>\n		<li>\n			org.springframework.aop.target.dynamic</li>\n		<li>\n			org.springframework.beans</li>\n		<li>\n			org.springframework.beans.annotation</li>\n		<li>\n			org.springframework.beans.factory</li>\n		<li>\n			org.springframework.beans.factory.access</li>\n		<li>\n			org.springframework.beans.factory.access.el</li>\n		<li>\n			org.springframework.beans.factory.annotation</li>\n		<li>\n			org.springframework.beans.factory.config</li>\n		<li>\n			org.springframework.beans.factory.generic</li>\n		<li>\n			org.springframework.beans.factory.parsing</li>\n		<li>\n			org.springframework.beans.factory.serviceloader</li>\n		<li>\n			org.springframework.beans.factory.support</li>\n		<li>\n			org.springframework.beans.factory.wiring</li>\n		<li>\n			org.springframework.beans.factory.xml</li>\n		<li>\n			org.springframework.beans.propertyeditors</li>\n		<li>\n			org.springframework.beans.support</li>\n		<li>\n			org.springframework.cache.ehcache</li>\n		<li>\n			org.springframework.context</li>\n		<li>\n			org.springframework.context.access</li>\n		<li>\n			org.springframework.context.annotation</li>\n		<li>\n			org.springframework.context.config</li>\n		<li>\n			org.springframework.context.event</li>\n		<li>\n			org.springframework.context.i18n</li>\n		<li>\n			org.springframework.context.support</li>\n		<li>\n			org.springframework.context.weaving</li>\n		<li>\n			org.springframework.core</li>\n		<li>\n			org.springframework.core.annotation</li>\n		<li>\n			org.springframework.core.enums</li>\n		<li>\n			org.springframework.core.io</li>\n		<li>\n			org.springframework.core.io.support</li>\n		<li>\n			org.springframework.core.style</li>\n		<li>\n			org.springframework.core.task</li>\n		<li>\n			org.springframework.core.task.support</li>\n		<li>\n			org.springframework.core.type</li>\n		<li>\n			org.springframework.core.type.classreading</li>\n		<li>\n			org.springframework.core.type.filter</li>\n		<li>\n			org.springframework.dao</li>\n		<li>\n			org.springframework.dao.annotation</li>\n		<li>\n			org.springframework.dao.support</li>\n		<li>\n			org.springframework.ejb.access</li>\n		<li>\n			org.springframework.ejb.config</li>\n		<li>\n			org.springframework.ejb.interceptor</li>\n		<li>\n			org.springframework.ejb.support</li>\n		<li>\n			org.springframework.instrument</li>\n		<li>\n			org.springframework.instrument.classloading</li>\n		<li>\n			org.springframework.instrument.classloading.glassfish</li>\n		<li>\n			org.springframework.instrument.classloading.oc4j</li>\n		<li>\n			org.springframework.instrument.classloading.tomcat</li>\n		<li>\n			org.springframework.instrument.classloading.weblogic</li>\n		<li>\n			org.springframework.jca.cci</li>\n		<li>\n			org.springframework.jca.cci.connection</li>\n		<li>\n			org.springframework.jca.cci.core</li>\n		<li>\n			org.springframework.jca.cci.core.support</li>\n		<li>\n			org.springframework.jca.cci.object</li>\n		<li>\n			org.springframework.jca.context</li>\n		<li>\n			org.springframework.jca.endpoint</li>\n		<li>\n			org.springframework.jca.support</li>\n		<li>\n			org.springframework.jca.work</li>\n		<li>\n			org.springframework.jca.work.glassfish</li>\n		<li>\n			org.springframework.jca.work.jboss</li>\n		<li>\n			org.springframework.jdbc</li>\n		<li>\n			org.springframework.jdbc.core</li>\n		<li>\n			org.springframework.jdbc.core.metadata</li>\n		<li>\n			org.springframework.jdbc.core.namedparam</li>\n		<li>\n			org.springframework.jdbc.core.simple</li>\n		<li>\n			org.springframework.jdbc.core.support</li>\n		<li>\n			org.springframework.jdbc.datasource</li>\n		<li>\n			org.springframework.jdbc.datasource.lookup</li>\n		<li>\n			org.springframework.jdbc.object</li>\n		<li>\n			org.springframework.jdbc.support</li>\n		<li>\n			org.springframework.jdbc.support.incrementer</li>\n		<li>\n			org.springframework.jdbc.support.lob</li>\n		<li>\n			org.springframework.jdbc.support.nativejdbc</li>\n		<li>\n			org.springframework.jdbc.support.rowset</li>\n		<li>\n			org.springframework.jdbc.support.xml</li>\n		<li>\n			org.springframework.jms</li>\n		<li>\n			org.springframework.jms.config</li>\n		<li>\n			org.springframework.jms.connection</li>\n		<li>\n			org.springframework.jms.core</li>\n		<li>\n			org.springframework.jms.core.support</li>\n		<li>\n			org.springframework.jms.listener</li>\n		<li>\n			org.springframework.jms.listener.adapter</li>\n		<li>\n			org.springframework.jms.listener.endpoint</li>\n		<li>\n			org.springframework.jms.listener.serversession</li>\n		<li>\n			org.springframework.jms.remoting</li>\n		<li>\n			org.springframework.jms.support</li>\n		<li>\n			org.springframework.jms.support.converter</li>\n		<li>\n			org.springframework.jms.support.destination</li>\n		<li>\n			org.springframework.jmx</li>\n		<li>\n			org.springframework.jmx.access</li>\n		<li>\n			org.springframework.jmx.export</li>\n		<li>\n			org.springframework.jmx.export.annotation</li>\n		<li>\n			org.springframework.jmx.export.assembler</li>\n		<li>\n			org.springframework.jmx.export.metadata</li>\n		<li>\n			org.springframework.jmx.export.naming</li>\n		<li>\n			org.springframework.jmx.export.notification</li>\n		<li>\n			org.springframework.jmx.support</li>\n		<li>\n			org.springframework.jndi</li>\n		<li>\n			org.springframework.jndi.support</li>\n		<li>\n			org.springframework.mail</li>\n		<li>\n			org.springframework.mail.javamail</li>\n		<li>\n			org.springframework.metadata</li>\n		<li>\n			org.springframework.metadata.commons</li>\n		<li>\n			org.springframework.mock.jndi</li>\n		<li>\n			org.springframework.mock.web</li>\n		<li>\n			org.springframework.mock.web.portlet</li>\n		<li>\n			org.springframework.orm</li>\n		<li>\n			org.springframework.orm.hibernate3</li>\n		<li>\n			org.springframework.orm.hibernate3.annotation</li>\n		<li>\n			org.springframework.orm.hibernate3.support</li>\n		<li>\n			org.springframework.orm.ibatis</li>\n		<li>\n			org.springframework.orm.ibatis.support</li>\n		<li>\n			org.springframework.orm.jdo</li>\n		<li>\n			org.springframework.orm.jdo.support</li>\n		<li>\n			org.springframework.orm.jpa</li>\n		<li>\n			org.springframework.orm.jpa.persistenceunit</li>\n		<li>\n			org.springframework.orm.jpa.support</li>\n		<li>\n			org.springframework.orm.jpa.vendor</li>\n		<li>\n			org.springframework.orm.toplink</li>\n		<li>\n			org.springframework.orm.toplink.support</li>\n		<li>\n			org.springframework.remoting</li>\n		<li>\n			org.springframework.remoting.caucho</li>\n		<li>\n			org.springframework.remoting.httpinvoker</li>\n		<li>\n			org.springframework.remoting.jaxrpc</li>\n		<li>\n			org.springframework.remoting.jaxrpc.support</li>\n		<li>\n			org.springframework.remoting.jaxws</li>\n		<li>\n			org.springframework.remoting.rmi</li>\n		<li>\n			org.springframework.remoting.soap</li>\n		<li>\n			org.springframework.remoting.support</li>\n		<li>\n			org.springframework.scheduling</li>\n		<li>\n			org.springframework.scheduling.backportconcurrent</li>\n		<li>\n			org.springframework.scheduling.commonj</li>\n		<li>\n			org.springframework.scheduling.concurrent</li>\n		<li>\n			org.springframework.scheduling.quartz</li>\n		<li>\n			org.springframework.scheduling.support</li>\n		<li>\n			org.springframework.scheduling.timer</li>\n		<li>\n			org.springframework.scripting</li>\n		<li>\n			org.springframework.scripting.bsh</li>\n		<li>\n			org.springframework.scripting.config</li>\n		<li>\n			org.springframework.scripting.groovy</li>\n		<li>\n			org.springframework.scripting.jruby</li>\n		<li>\n			org.springframework.scripting.support</li>\n		<li>\n			org.springframework.stereotype</li>\n		<li>\n			org.springframework.test</li>\n		<li>\n			org.springframework.test.annotation</li>\n		<li>\n			org.springframework.test.context</li>\n		<li>\n			org.springframework.test.context.junit38</li>\n		<li>\n			org.springframework.test.context.junit4</li>\n		<li>\n			org.springframework.test.context.support</li>\n		<li>\n			org.springframework.test.context.testng</li>\n		<li>\n			org.springframework.test.context.transaction</li>\n		<li>\n			org.springframework.test.jdbc</li>\n		<li>\n			org.springframework.test.jpa</li>\n		<li>\n			org.springframework.test.util</li>\n		<li>\n			org.springframework.test.web</li>\n		<li>\n			org.springframework.transaction</li>\n		<li>\n			org.springframework.transaction.annotation</li>\n		<li>\n			org.springframework.transaction.config</li>\n		<li>\n			org.springframework.transaction.interceptor</li>\n		<li>\n			org.springframework.transaction.jta</li>\n		<li>\n			org.springframework.transaction.support</li>\n		<li>\n			org.springframework.ui</li>\n		<li>\n			org.springframework.ui.context</li>\n		<li>\n			org.springframework.ui.context.support</li>\n		<li>\n			org.springframework.ui.freemarker</li>\n		<li>\n			org.springframework.ui.jasperreports</li>\n		<li>\n			org.springframework.ui.velocity</li>\n		<li>\n			org.springframework.util</li>\n		<li>\n			org.springframework.util.comparator</li>\n		<li>\n			org.springframework.util.xml</li>\n		<li>\n			org.springframework.validation</li>\n		<li>\n			org.springframework.validation.support</li>\n		<li>\n			org.springframework.web</li>\n		<li>\n			org.springframework.web.bind</li>\n		<li>\n			org.springframework.web.bind.annotation</li>\n		<li>\n			org.springframework.web.bind.annotation.support</li>\n		<li>\n			org.springframework.web.bind.support</li>\n		<li>\n			org.springframework.web.context</li>\n		<li>\n			org.springframework.web.context.request</li>\n		<li>\n			org.springframework.web.context.support</li>\n		<li>\n			org.springframework.web.filter</li>\n		<li>\n			org.springframework.web.jsf</li>\n		<li>\n			org.springframework.web.jsf.el</li>\n		<li>\n			org.springframework.web.multipart</li>\n		<li>\n			org.springframework.web.multipart.commons</li>\n		<li>\n			org.springframework.web.multipart.support</li>\n		<li>\n			org.springframework.web.portlet</li>\n		<li>\n			org.springframework.web.portlet.bind</li>\n		<li>\n			org.springframework.web.portlet.context</li>\n		<li>\n			org.springframework.web.portlet.handler</li>\n		<li>\n			org.springframework.web.portlet.multipart</li>\n		<li>\n			org.springframework.web.portlet.mvc</li>\n		<li>\n			org.springframework.web.portlet.mvc.annotation</li>\n		<li>\n			org.springframework.web.portlet.util</li>\n		<li>\n			org.springframework.web.servlet</li>\n		<li>\n			org.springframework.web.servlet.handler</li>\n		<li>\n			org.springframework.web.servlet.handler.metadata</li>\n		<li>\n			org.springframework.web.servlet.i18n</li>\n		<li>\n			org.springframework.web.servlet.mvc</li>\n		<li>\n			org.springframework.web.servlet.mvc.annotation</li>\n		<li>\n			org.springframework.web.servlet.mvc.multiaction</li>\n		<li>\n			org.springframework.web.servlet.mvc.support</li>\n		<li>\n			org.springframework.web.servlet.mvc.throwaway</li>\n		<li>\n			org.springframework.web.servlet.support</li>\n		<li>\n			org.springframework.web.servlet.tags</li>\n		<li>\n			org.springframework.web.servlet.tags.form</li>\n		<li>\n			org.springframework.web.servlet.theme</li>\n		<li>\n			org.springframework.web.servlet.view</li>\n		<li>\n			org.springframework.web.servlet.view.document</li>\n		<li>\n			org.springframework.web.servlet.view.freemarker</li>\n		<li>\n			org.springframework.web.servlet.view.jasperreports</li>\n		<li>\n			org.springframework.web.servlet.view.tiles</li>\n		<li>\n			org.springframework.web.servlet.view.tiles2</li>\n		<li>\n			org.springframework.web.servlet.view.velocity</li>\n		<li>\n			org.springframework.web.servlet.view.xslt</li>\n		<li>\n			org.springframework.web.struts</li>\n		<li>\n			org.springframework.web.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/spring/2.5.6.sec02-src/" target="_blank">Spring 2.5.6.SEC02 在线Java源码</a></p>\n', 'spring 2.5.6 在线Java源码，直接通过浏览器浏览spring的源代码，方便开发人员学习spring的内部实现。', 1286812800000, '2.5.6', 'Rod Johnson', '', 'springsource', '', '', '', '所有系统', 'Apache', '英文', 1286873632894, 1286873632894, 'admin'),
('000000002b9e98bc012b9faa55ac0045', '000000002b904fe6012b905bd4060004', 'Spring 3.0.4 在线Java源码', '在线查看spring源代码', NULL, '<p>\n	Spring 3.0.4 在线Java源码，直接通过浏览器浏览spring的源代码，方便开发人员学习spring的内部实现。</p>\n<p>\n	此文档包含了如下package：</p>\n<blockquote>\n	<ol>\n		<li>\n			org.springframework.aop</li>\n		<li>\n			org.springframework.aop.aspectj</li>\n		<li>\n			org.springframework.aop.aspectj.annotation</li>\n		<li>\n			org.springframework.aop.aspectj.autoproxy</li>\n		<li>\n			org.springframework.aop.config</li>\n		<li>\n			org.springframework.aop.framework</li>\n		<li>\n			org.springframework.aop.framework.adapter</li>\n		<li>\n			org.springframework.aop.framework.autoproxy</li>\n		<li>\n			org.springframework.aop.framework.autoproxy.target</li>\n		<li>\n			org.springframework.aop.interceptor</li>\n		<li>\n			org.springframework.aop.scope</li>\n		<li>\n			org.springframework.aop.support</li>\n		<li>\n			org.springframework.aop.support.annotation</li>\n		<li>\n			org.springframework.aop.target</li>\n		<li>\n			org.springframework.aop.target.dynamic</li>\n		<li>\n			org.springframework.beans</li>\n		<li>\n			org.springframework.beans.annotation</li>\n		<li>\n			org.springframework.beans.factory</li>\n		<li>\n			org.springframework.beans.factory.access</li>\n		<li>\n			org.springframework.beans.factory.access.el</li>\n		<li>\n			org.springframework.beans.factory.annotation</li>\n		<li>\n			org.springframework.beans.factory.aspectj</li>\n		<li>\n			org.springframework.beans.factory.config</li>\n		<li>\n			org.springframework.beans.factory.parsing</li>\n		<li>\n			org.springframework.beans.factory.serviceloader</li>\n		<li>\n			org.springframework.beans.factory.support</li>\n		<li>\n			org.springframework.beans.factory.wiring</li>\n		<li>\n			org.springframework.beans.factory.xml</li>\n		<li>\n			org.springframework.beans.propertyeditors</li>\n		<li>\n			org.springframework.beans.support</li>\n		<li>\n			org.springframework.cache.ehcache</li>\n		<li>\n			org.springframework.context</li>\n		<li>\n			org.springframework.context.access</li>\n		<li>\n			org.springframework.context.annotation</li>\n		<li>\n			org.springframework.context.config</li>\n		<li>\n			org.springframework.context.event</li>\n		<li>\n			org.springframework.context.expression</li>\n		<li>\n			org.springframework.context.i18n</li>\n		<li>\n			org.springframework.context.support</li>\n		<li>\n			org.springframework.context.weaving</li>\n		<li>\n			org.springframework.core</li>\n		<li>\n			org.springframework.core.annotation</li>\n		<li>\n			org.springframework.core.convert</li>\n		<li>\n			org.springframework.core.convert.converter</li>\n		<li>\n			org.springframework.core.convert.support</li>\n		<li>\n			org.springframework.core.enums</li>\n		<li>\n			org.springframework.core.io</li>\n		<li>\n			org.springframework.core.io.support</li>\n		<li>\n			org.springframework.core.style</li>\n		<li>\n			org.springframework.core.task</li>\n		<li>\n			org.springframework.core.task.support</li>\n		<li>\n			org.springframework.core.type</li>\n		<li>\n			org.springframework.core.type.classreading</li>\n		<li>\n			org.springframework.core.type.filter</li>\n		<li>\n			org.springframework.dao</li>\n		<li>\n			org.springframework.dao.annotation</li>\n		<li>\n			org.springframework.dao.support</li>\n		<li>\n			org.springframework.ejb.access</li>\n		<li>\n			org.springframework.ejb.config</li>\n		<li>\n			org.springframework.ejb.interceptor</li>\n		<li>\n			org.springframework.ejb.support</li>\n		<li>\n			org.springframework.expression</li>\n		<li>\n			org.springframework.expression.common</li>\n		<li>\n			org.springframework.expression.spel</li>\n		<li>\n			org.springframework.expression.spel.ast</li>\n		<li>\n			org.springframework.expression.spel.standard</li>\n		<li>\n			org.springframework.expression.spel.support</li>\n		<li>\n			org.springframework.format</li>\n		<li>\n			org.springframework.format.annotation</li>\n		<li>\n			org.springframework.format.datetime</li>\n		<li>\n			org.springframework.format.datetime.joda</li>\n		<li>\n			org.springframework.format.number</li>\n		<li>\n			org.springframework.format.support</li>\n		<li>\n			org.springframework.http</li>\n		<li>\n			org.springframework.http.client</li>\n		<li>\n			org.springframework.http.client.support</li>\n		<li>\n			org.springframework.http.converter</li>\n		<li>\n			org.springframework.http.converter.feed</li>\n		<li>\n			org.springframework.http.converter.json</li>\n		<li>\n			org.springframework.http.converter.xml</li>\n		<li>\n			org.springframework.http.server</li>\n		<li>\n			org.springframework.instrument</li>\n		<li>\n			org.springframework.instrument.classloading</li>\n		<li>\n			org.springframework.instrument.classloading.glassfish</li>\n		<li>\n			org.springframework.instrument.classloading.jboss</li>\n		<li>\n			org.springframework.instrument.classloading.oc4j</li>\n		<li>\n			org.springframework.instrument.classloading.tomcat</li>\n		<li>\n			org.springframework.instrument.classloading.weblogic</li>\n		<li>\n			org.springframework.jca.cci</li>\n		<li>\n			org.springframework.jca.cci.connection</li>\n		<li>\n			org.springframework.jca.cci.core</li>\n		<li>\n			org.springframework.jca.cci.core.support</li>\n		<li>\n			org.springframework.jca.cci.object</li>\n		<li>\n			org.springframework.jca.context</li>\n		<li>\n			org.springframework.jca.endpoint</li>\n		<li>\n			org.springframework.jca.support</li>\n		<li>\n			org.springframework.jca.work</li>\n		<li>\n			org.springframework.jca.work.glassfish</li>\n		<li>\n			org.springframework.jca.work.jboss</li>\n		<li>\n			org.springframework.jdbc</li>\n		<li>\n			org.springframework.jdbc.config</li>\n		<li>\n			org.springframework.jdbc.core</li>\n		<li>\n			org.springframework.jdbc.core.metadata</li>\n		<li>\n			org.springframework.jdbc.core.namedparam</li>\n		<li>\n			org.springframework.jdbc.core.simple</li>\n		<li>\n			org.springframework.jdbc.core.support</li>\n		<li>\n			org.springframework.jdbc.datasource</li>\n		<li>\n			org.springframework.jdbc.datasource.embedded</li>\n		<li>\n			org.springframework.jdbc.datasource.init</li>\n		<li>\n			org.springframework.jdbc.datasource.lookup</li>\n		<li>\n			org.springframework.jdbc.object</li>\n		<li>\n			org.springframework.jdbc.support</li>\n		<li>\n			org.springframework.jdbc.support.incrementer</li>\n		<li>\n			org.springframework.jdbc.support.lob</li>\n		<li>\n			org.springframework.jdbc.support.nativejdbc</li>\n		<li>\n			org.springframework.jdbc.support.rowset</li>\n		<li>\n			org.springframework.jdbc.support.xml</li>\n		<li>\n			org.springframework.jms</li>\n		<li>\n			org.springframework.jms.config</li>\n		<li>\n			org.springframework.jms.connection</li>\n		<li>\n			org.springframework.jms.core</li>\n		<li>\n			org.springframework.jms.core.support</li>\n		<li>\n			org.springframework.jms.listener</li>\n		<li>\n			org.springframework.jms.listener.adapter</li>\n		<li>\n			org.springframework.jms.listener.endpoint</li>\n		<li>\n			org.springframework.jms.remoting</li>\n		<li>\n			org.springframework.jms.support</li>\n		<li>\n			org.springframework.jms.support.converter</li>\n		<li>\n			org.springframework.jms.support.destination</li>\n		<li>\n			org.springframework.jmx</li>\n		<li>\n			org.springframework.jmx.access</li>\n		<li>\n			org.springframework.jmx.export</li>\n		<li>\n			org.springframework.jmx.export.annotation</li>\n		<li>\n			org.springframework.jmx.export.assembler</li>\n		<li>\n			org.springframework.jmx.export.metadata</li>\n		<li>\n			org.springframework.jmx.export.naming</li>\n		<li>\n			org.springframework.jmx.export.notification</li>\n		<li>\n			org.springframework.jmx.support</li>\n		<li>\n			org.springframework.jndi</li>\n		<li>\n			org.springframework.jndi.support</li>\n		<li>\n			org.springframework.mail</li>\n		<li>\n			org.springframework.mail.javamail</li>\n		<li>\n			org.springframework.mock.jndi</li>\n		<li>\n			org.springframework.mock.staticmock</li>\n		<li>\n			org.springframework.mock.web</li>\n		<li>\n			org.springframework.mock.web.portlet</li>\n		<li>\n			org.springframework.orm</li>\n		<li>\n			org.springframework.orm.hibernate3</li>\n		<li>\n			org.springframework.orm.hibernate3.annotation</li>\n		<li>\n			org.springframework.orm.hibernate3.support</li>\n		<li>\n			org.springframework.orm.ibatis</li>\n		<li>\n			org.springframework.orm.ibatis.support</li>\n		<li>\n			org.springframework.orm.jdo</li>\n		<li>\n			org.springframework.orm.jdo.support</li>\n		<li>\n			org.springframework.orm.jpa</li>\n		<li>\n			org.springframework.orm.jpa.persistenceunit</li>\n		<li>\n			org.springframework.orm.jpa.support</li>\n		<li>\n			org.springframework.orm.jpa.vendor</li>\n		<li>\n			org.springframework.oxm</li>\n		<li>\n			org.springframework.oxm.castor</li>\n		<li>\n			org.springframework.oxm.config</li>\n		<li>\n			org.springframework.oxm.jaxb</li>\n		<li>\n			org.springframework.oxm.jibx</li>\n		<li>\n			org.springframework.oxm.mime</li>\n		<li>\n			org.springframework.oxm.support</li>\n		<li>\n			org.springframework.oxm.xmlbeans</li>\n		<li>\n			org.springframework.oxm.xstream</li>\n		<li>\n			org.springframework.remoting</li>\n		<li>\n			org.springframework.remoting.caucho</li>\n		<li>\n			org.springframework.remoting.httpinvoker</li>\n		<li>\n			org.springframework.remoting.jaxrpc</li>\n		<li>\n			org.springframework.remoting.jaxws</li>\n		<li>\n			org.springframework.remoting.rmi</li>\n		<li>\n			org.springframework.remoting.soap</li>\n		<li>\n			org.springframework.remoting.support</li>\n		<li>\n			org.springframework.scheduling</li>\n		<li>\n			org.springframework.scheduling.annotation</li>\n		<li>\n			org.springframework.scheduling.backportconcurrent</li>\n		<li>\n			org.springframework.scheduling.commonj</li>\n		<li>\n			org.springframework.scheduling.concurrent</li>\n		<li>\n			org.springframework.scheduling.config</li>\n		<li>\n			org.springframework.scheduling.quartz</li>\n		<li>\n			org.springframework.scheduling.support</li>\n		<li>\n			org.springframework.scheduling.timer</li>\n		<li>\n			org.springframework.scripting</li>\n		<li>\n			org.springframework.scripting.bsh</li>\n		<li>\n			org.springframework.scripting.config</li>\n		<li>\n			org.springframework.scripting.groovy</li>\n		<li>\n			org.springframework.scripting.jruby</li>\n		<li>\n			org.springframework.scripting.support</li>\n		<li>\n			org.springframework.stereotype</li>\n		<li>\n			org.springframework.test</li>\n		<li>\n			org.springframework.test.annotation</li>\n		<li>\n			org.springframework.test.context</li>\n		<li>\n			org.springframework.test.context.junit38</li>\n		<li>\n			org.springframework.test.context.junit4</li>\n		<li>\n			org.springframework.test.context.junit4.statements</li>\n		<li>\n			org.springframework.test.context.support</li>\n		<li>\n			org.springframework.test.context.testng</li>\n		<li>\n			org.springframework.test.context.transaction</li>\n		<li>\n			org.springframework.test.jdbc</li>\n		<li>\n			org.springframework.test.jpa</li>\n		<li>\n			org.springframework.test.util</li>\n		<li>\n			org.springframework.test.web</li>\n		<li>\n			org.springframework.transaction</li>\n		<li>\n			org.springframework.transaction.annotation</li>\n		<li>\n			org.springframework.transaction.config</li>\n		<li>\n			org.springframework.transaction.interceptor</li>\n		<li>\n			org.springframework.transaction.jta</li>\n		<li>\n			org.springframework.transaction.support</li>\n		<li>\n			org.springframework.ui</li>\n		<li>\n			org.springframework.ui.context</li>\n		<li>\n			org.springframework.ui.context.support</li>\n		<li>\n			org.springframework.ui.freemarker</li>\n		<li>\n			org.springframework.ui.jasperreports</li>\n		<li>\n			org.springframework.ui.velocity</li>\n		<li>\n			org.springframework.util</li>\n		<li>\n			org.springframework.util.comparator</li>\n		<li>\n			org.springframework.util.xml</li>\n		<li>\n			org.springframework.validation</li>\n		<li>\n			org.springframework.validation.beanvalidation</li>\n		<li>\n			org.springframework.validation.support</li>\n		<li>\n			org.springframework.web</li>\n		<li>\n			org.springframework.web.bind</li>\n		<li>\n			org.springframework.web.bind.annotation</li>\n		<li>\n			org.springframework.web.bind.annotation.support</li>\n		<li>\n			org.springframework.web.bind.support</li>\n		<li>\n			org.springframework.web.client</li>\n		<li>\n			org.springframework.web.client.support</li>\n		<li>\n			org.springframework.web.context</li>\n		<li>\n			org.springframework.web.context.request</li>\n		<li>\n			org.springframework.web.context.support</li>\n		<li>\n			org.springframework.web.filter</li>\n		<li>\n			org.springframework.web.jsf</li>\n		<li>\n			org.springframework.web.jsf.el</li>\n		<li>\n			org.springframework.web.multipart</li>\n		<li>\n			org.springframework.web.multipart.commons</li>\n		<li>\n			org.springframework.web.multipart.support</li>\n		<li>\n			org.springframework.web.portlet</li>\n		<li>\n			org.springframework.web.portlet.bind</li>\n		<li>\n			org.springframework.web.portlet.bind.annotation</li>\n		<li>\n			org.springframework.web.portlet.context</li>\n		<li>\n			org.springframework.web.portlet.handler</li>\n		<li>\n			org.springframework.web.portlet.multipart</li>\n		<li>\n			org.springframework.web.portlet.mvc</li>\n		<li>\n			org.springframework.web.portlet.mvc.annotation</li>\n		<li>\n			org.springframework.web.portlet.util</li>\n		<li>\n			org.springframework.web.servlet</li>\n		<li>\n			org.springframework.web.servlet.config</li>\n		<li>\n			org.springframework.web.servlet.handler</li>\n		<li>\n			org.springframework.web.servlet.i18n</li>\n		<li>\n			org.springframework.web.servlet.mvc</li>\n		<li>\n			org.springframework.web.servlet.mvc.annotation</li>\n		<li>\n			org.springframework.web.servlet.mvc.multiaction</li>\n		<li>\n			org.springframework.web.servlet.mvc.support</li>\n		<li>\n			org.springframework.web.servlet.resource</li>\n		<li>\n			org.springframework.web.servlet.support</li>\n		<li>\n			org.springframework.web.servlet.tags</li>\n		<li>\n			org.springframework.web.servlet.tags.form</li>\n		<li>\n			org.springframework.web.servlet.theme</li>\n		<li>\n			org.springframework.web.servlet.view</li>\n		<li>\n			org.springframework.web.servlet.view.document</li>\n		<li>\n			org.springframework.web.servlet.view.feed</li>\n		<li>\n			org.springframework.web.servlet.view.freemarker</li>\n		<li>\n			org.springframework.web.servlet.view.jasperreports</li>\n		<li>\n			org.springframework.web.servlet.view.json</li>\n		<li>\n			org.springframework.web.servlet.view.tiles</li>\n		<li>\n			org.springframework.web.servlet.view.tiles2</li>\n		<li>\n			org.springframework.web.servlet.view.velocity</li>\n		<li>\n			org.springframework.web.servlet.view.xml</li>\n		<li>\n			org.springframework.web.servlet.view.xslt</li>\n		<li>\n			org.springframework.web.struts</li>\n		<li>\n			org.springframework.web.util</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/spring/3.0.4-src/" target="_blank">Spring 3.0.4&nbsp; 在线Java源码</a></p>\n', 'Spring 3.0.4 在线Java源码，直接通过浏览器浏览spring的源代码，方便开发人员学习spring的内部实现。', 1286812800000, '3.0.4', 'Rod Johnson', '', 'springsource', '', '', '', '所有系统', 'Apache', '英文', 1286873961900, 1286873961900, 'admin'),
('000000002b9e98bc012b9fb6fb4d0049', '000000002b904fe6012b905b65d50003', 'Spring 3.0.4.RELEASE 下载', '最稳定的3.0.x版本', NULL, '<p>\n	Spring 3.0.4是目前最稳定的3.0.x版本，下载包内含3.0.4的jar包，相关依赖的jar包，以及spring源码。如果你的工程还在使用3.0.x系列，建议升级到此版本。</p>\n', 'Spring 3.0.4是目前最稳定的3.0.x版本，下载包内含3.0.4的jar包，相关依赖的jar包，以及spring源码。如果你的工程还在使用3.0.x系列，建议升级到此版本。', 1286812800000, '3.0.4', 'Rod Johnson', '', 'springsource', '', '官方下载-http://s3.amazonaws.com/dist.springframework.org/release/SPR/spring-framework-3.0.4.RELEASE.zip\n本站下载-http://story.ajava.org/spring/3.0.4.release.zip', '22M', '所有系统', 'Apache', '英文', 1286874790734, 1286874790734, 'admin'),
('000000002b9e98bc012b9fb94791004d', '000000002b904fe6012b905b65d50003', 'Spring 3.0.4.RELEASE 下载（含文档）', '最稳定的3.0.x版本', NULL, '<p>\n	Spring 3.0.4是目前最稳定的3.0.x版本，下载包内含3.0.4的jar包，相关依赖的jar包，以及spring源码，参考手册，java api文档。。如果你的工程还在使用3.0.x系列，建议升级到此版本。</p>\n', 'Spring 3.0.4是目前最稳定的3.0.x版本，下载包内含3.0.4的jar包，相关依赖的jar包，以及spring源码，参考手册，java api文档。。如果你的工程还在使用3.0.x系列，建议升级到此版本。', 1286812800000, '3.0.4', 'Rod Johnson', '', 'springsource', '', '官方下载-http://s3.amazonaws.com/dist.springframework.org/release/SPR/spring-framework-3.0.4.RELEASE-with-docs.zip\n本站下载-http://story.ajava.org/spring/3.0.4.release-with-docs.zip', '45M', '所有系统', 'Apache', '英文', 1286874941329, 1286874941329, 'admin'),
('000000002b9e98bc012b9fc2b9ab0051', '000000002b904fe6012b905b3c450002', 'Spring Framework 在线开发参考手册（2.0.x）', 'Spring官方文档', NULL, '<p>\n	Spring Framework 官方开发参考手册的中文版本。此文档内容覆盖了Spring的所有特性，是学习、开发Spring的最好文档。</p>\n<p>\n	本文档目录如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			简介</li>\n		<li>\n			Spring 2.0 的新特性</li>\n		<li>\n			控制反转容器</li>\n		<li>\n			资源</li>\n		<li>\n			校验，数据绑定，BeanWrapper，与属性编辑器</li>\n		<li>\n			使用Spring进行面向切面编程（AOP）</li>\n		<li>\n			Spring AOP APIs</li>\n		<li>\n			测试</li>\n		<li>\n			事务管理</li>\n		<li>\n			DAO支持</li>\n		<li>\n			使用JDBC进行数据访问</li>\n		<li>\n			使用ORM工具进行数据访问</li>\n		<li>\n			Web框架</li>\n		<li>\n			集成视图技术</li>\n		<li>\n			集成其它Web框架</li>\n		<li>\n			Portlet MVC框架</li>\n		<li>\n			使用Spring进行远程访问与Web服务</li>\n		<li>\n			Enterprise Java Bean(EJB)集成</li>\n		<li>\n			JMS</li>\n		<li>\n			JMX</li>\n		<li>\n			JCA CCI</li>\n		<li>\n			Spring邮件抽象层</li>\n		<li>\n			Spring中的定时调度(Scheduling)和线程池(Thread Pooling)</li>\n		<li>\n			动态语言支持</li>\n		<li>\n			注解和源代码级的元数据支持</li>\n		<li>\n			XML Schema-based configuration</li>\n		<li>\n			Extensible XML authoring</li>\n		<li>\n			spring-beans-2.0.dtd</li>\n		<li>\n			spring.tld</li>\n		<li>\n			spring-form.tld</li>\n		<li>\n			Spring 2.0 开发手册中文化项目</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/spring/2.0.x-reference-zh/html/">Spring Framework 在线开发参考手册</a></p>\n', 'Spring Framework 官方开发参考手册的中文版本。此文档内容覆盖了Spring的所有特性，是学习、开发Spring的最好文档。', 1286812800000, '2.0.x', '丁雪丰', '', '满江红', '', '', '', '所有系统', 'CC3', '中文', 1286875560363, 1286936979142, 'admin'),
('000000002b9e98bc012b9fc9b4740055', '000000002b904fe6012b905b3c450002', 'Spring Framework 在线开发参考手册（2.5.x）', 'Spring官方文档', NULL, '<p>\n	Spring Framework 官方开发参考手册的中文版本。此文档内容覆盖了Spring的所有特性，是学习、开发Spring的最好文档。</p>\n<p>\n	本文档目录如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			简介</li>\n		<li>\n			Spring 2.0 的新特性</li>\n		<li>\n			控制反转容器</li>\n		<li>\n			资源</li>\n		<li>\n			校验，数据绑定，BeanWrapper，与属性编辑器</li>\n		<li>\n			使用Spring进行面向切面编程（AOP）</li>\n		<li>\n			Spring AOP APIs</li>\n		<li>\n			测试</li>\n		<li>\n			事务管理</li>\n		<li>\n			DAO支持</li>\n		<li>\n			使用JDBC进行数据访问</li>\n		<li>\n			使用ORM工具进行数据访问</li>\n		<li>\n			Web框架</li>\n		<li>\n			集成视图技术</li>\n		<li>\n			集成其它Web框架</li>\n		<li>\n			Portlet MVC框架</li>\n		<li>\n			使用Spring进行远程访问与Web服务</li>\n		<li>\n			Enterprise Java Bean(EJB)集成</li>\n		<li>\n			JMS</li>\n		<li>\n			JMX</li>\n		<li>\n			JCA CCI</li>\n		<li>\n			Spring邮件抽象层</li>\n		<li>\n			Spring中的定时调度(Scheduling)和线程池(Thread Pooling)</li>\n		<li>\n			动态语言支持</li>\n		<li>\n			注解和源代码级的元数据支持</li>\n		<li>\n			XML Schema-based configuration</li>\n		<li>\n			Extensible XML authoring</li>\n		<li>\n			spring-beans-2.0.dtd</li>\n		<li>\n			spring.tld</li>\n		<li>\n			spring-form.tld</li>\n		<li>\n			Spring 2.0 开发手册中文化项目</li>\n	</ol>\n</blockquote>\n<p>\n	打开<a href="http://story.ajava.org/spring/2.5.x-reference-zh/html/">Spring Framework 在线开发参考手册</a></p>\n<p>\n	打开<a href="http://story.ajava.org/spring/2.5.x-reference-zhs/html/">Spring Framework 在线开发参考手册（单页）</a></p>\n', 'Spring Framework 官方开发参考手册的中文版本。此文档内容覆盖了Spring的所有特性，是学习、开发Spring的最好文档。', 1286812800000, '2.5.x', '丁雪丰', '', '满江红', '', '', '', '所有系统', 'CC3', '中文', 1286876017780, 1286937077707, 'admin'),
('000000002b9e98bc012ba37176660061', '000000002b904fe6012b905b65d50003', 'Spring Framework 开发参考手册 下载（2.0.x）', '含chm、html、pdf格式', NULL, '<p>\n	Spring Framework 官方开发参考手册的中文版本。此文档内容覆盖了Spring的所有特性，是学习、开发Spring的最好文档。</p>\n<p>\n	本文档目录如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			简介</li>\n		<li>\n			Spring 2.0 的新特性</li>\n		<li>\n			控制反转容器</li>\n		<li>\n			资源</li>\n		<li>\n			校验，数据绑定，BeanWrapper，与属性编辑器</li>\n		<li>\n			使用Spring进行面向切面编程（AOP）</li>\n		<li>\n			Spring AOP APIs</li>\n		<li>\n			测试</li>\n		<li>\n			事务管理</li>\n		<li>\n			DAO支持</li>\n		<li>\n			使用JDBC进行数据访问</li>\n		<li>\n			使用ORM工具进行数据访问</li>\n		<li>\n			Web框架</li>\n		<li>\n			集成视图技术</li>\n		<li>\n			集成其它Web框架</li>\n		<li>\n			Portlet MVC框架</li>\n		<li>\n			使用Spring进行远程访问与Web服务</li>\n		<li>\n			Enterprise Java Bean(EJB)集成</li>\n		<li>\n			JMS</li>\n		<li>\n			JMX</li>\n		<li>\n			JCA CCI</li>\n		<li>\n			Spring邮件抽象层</li>\n		<li>\n			Spring中的定时调度(Scheduling)和线程池(Thread Pooling)</li>\n		<li>\n			动态语言支持</li>\n		<li>\n			注解和源代码级的元数据支持</li>\n		<li>\n			XML Schema-based configuration</li>\n		<li>\n			Extensible XML authoring</li>\n		<li>\n			spring-beans-2.0.dtd</li>\n		<li>\n			spring.tld</li>\n		<li>\n			spring-form.tld</li>\n		<li>\n			Spring 2.0 开发手册中文化项目</li>\n	</ol>\n</blockquote>\n', 'Spring Framework 官方开发参考手册的中文版本。此文档内容覆盖了Spring的所有特性，是学习、开发Spring的最好文档。本站提供chm、html、pdf三种格式下载。', 1286899200000, '2.0.x', '丁雪丰', '', '满江红', '', 'CHM下载-http://story.ajava.org/spring/2.0.x-reference-zh-chm.zip\nHTML下载-http://story.ajava.org/spring/2.0.x-reference-zh-html.zip\nPDF下载-http://story.ajava.org/spring/2.0.x-reference-zh-pdf.zip', '2M-3M', '所有系统', 'CC3', '中文', 1286937343590, 1286937343590, 'admin'),
('000000002b9e98bc012ba37621760065', '000000002b904fe6012b905b65d50003', 'Spring Framework 开发参考手册 下载（2.5.x）', '含chm、html、pdf格式', NULL, '<p>\n	Spring Framework 官方开发参考手册的中文版本。此文档内容覆盖了Spring的所有特性，是学习、开发Spring的最好文档。本站提供chm、html、pdf三种格式下载。</p>\n<p>\n	本文档目录如下：</p>\n<blockquote>\n	<ol>\n		<li>\n			前言</li>\n		<li>\n			简介</li>\n		<li>\n			Spring 2.0 的新特性</li>\n		<li>\n			控制反转容器</li>\n		<li>\n			资源</li>\n		<li>\n			校验，数据绑定，BeanWrapper，与属性编辑器</li>\n		<li>\n			使用Spring进行面向切面编程（AOP）</li>\n		<li>\n			Spring AOP APIs</li>\n		<li>\n			测试</li>\n		<li>\n			事务管理</li>\n		<li>\n			DAO支持</li>\n		<li>\n			使用JDBC进行数据访问</li>\n		<li>\n			使用ORM工具进行数据访问</li>\n		<li>\n			Web框架</li>\n		<li>\n			集成视图技术</li>\n		<li>\n			集成其它Web框架</li>\n		<li>\n			Portlet MVC框架</li>\n		<li>\n			使用Spring进行远程访问与Web服务</li>\n		<li>\n			Enterprise Java Bean(EJB)集成</li>\n		<li>\n			JMS</li>\n		<li>\n			JMX</li>\n		<li>\n			JCA CCI</li>\n		<li>\n			Spring邮件抽象层</li>\n		<li>\n			Spring中的定时调度(Scheduling)和线程池(Thread Pooling)</li>\n		<li>\n			动态语言支持</li>\n		<li>\n			注解和源代码级的元数据支持</li>\n		<li>\n			XML Schema-based configuration</li>\n		<li>\n			Extensible XML authoring</li>\n		<li>\n			spring-beans-2.0.dtd</li>\n		<li>\n			spring.tld</li>\n		<li>\n			spring-form.tld</li>\n		<li>\n			Spring 2.0 开发手册中文化项目</li>\n	</ol>\n</blockquote>\n', 'Spring Framework 官方开发参考手册的中文版本。此文档内容覆盖了Spring的所有特性，是学习、开发Spring的最好文档。本站提供chm、html、pdf三种格式下载。', 1286899200000, '2.5.x', '丁雪丰', '', '满江红', '', 'CHM下载-http://story.ajava.org/spring/2.5.x-reference-zh-chm.zip\nHTML下载-http://story.ajava.org/spring/2.5.x-reference-zh-html.zip\nHTML单页下载-http://story.ajava.org/spring/2.5.x-reference-zh-htmls.zip\nPDF下载-http://story.ajava.org/spring/2.5.x-reference-zh-pdf.zip', '2M-3M', '所有系统', 'CC3', '中文', 1286937649526, 1286937649526, 'admin'),
('000000002b9e98bc012ba43eb09a006a', '000000002b904fe6012b905b65d50003', '《Spring 开发指南》PDF下载', '夏昕编写', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://www.ajava.org/upload/2010-10/spring-developer-guide-zh-pdf.png" /></p>\n<p>\n	本文正是针对SpringFramework的开发指南， 讲述了SpringFramework的设计思想以及在开发中的实际使用。同时穿插了一些笔者在项目实作中的经验所得。 本书从以下几方面讲述Spring：Spring初探、Spring 基础语义、Spring 高级特性、数据持久层、Aspect Oriented Programming。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		Spring初探<br />\n		&nbsp;&nbsp; &nbsp;准备工作<br />\n		&nbsp;&nbsp; &nbsp;构建Spring基础代码<br />\n		Spring 基础语义<br />\n		&nbsp;&nbsp; &nbsp;Dependency Injection<br />\n		&nbsp;&nbsp; &nbsp;Spring Bean封装机制<br />\n		Spring 高级特性<br />\n		&nbsp;&nbsp; &nbsp;Web应用与MVC<br />\n		&nbsp;&nbsp; &nbsp;WebWork2 &amp; Spring<br />\n		数据持久层<br />\n		&nbsp;&nbsp; &nbsp;事务管理<br />\n		&nbsp;&nbsp; &nbsp;持久层封装<br />\n		Aspect Oriented Programming<br />\n		&nbsp;&nbsp; &nbsp;AOP概念<br />\n		&nbsp;&nbsp; &nbsp;AOP in Spring</p>\n	<br />\n	<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n		&nbsp;</div>\n</blockquote>\n', '本文正是针对SpringFramework的开发指南， 讲述了SpringFramework的设计思想以及在开发中的实际使用。同时穿插了一些笔者在项目实作中的经验所得。 本书从以下几方面讲述Spring：Spring初探、Spring 基础语义、Spring 高级特性、数据持久层、Aspect Oriented Programming。', 1286899200000, '1.0', '夏昕', '', '满江红', '', '本站下载-http://story.ajava.org/spring/spring-developer-guide-zh-pdf.zip', '606K', '所有系统', 'CC3', '中文', 1286950793371, 1286950793371, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b9e98bc012ba52433fa006e', '000000002b904fe6012b905b65d50003', '《精通Spring》PDF下载', '针对spring 1.x版本', NULL, '<blockquote>\n	<p>\n		本书为PDF扫描版本。如果您想购买此书，可到<a href="http://www.china-pub.com/24483">http://www.china-pub.com/24483</a></p>\n</blockquote>\n<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook20001-25000/24483/shupi.jpg" style="width: 285px; height: 400px;" /></p>\n<p>\n	书深入剖析了当前流行的轻量级开发框架Spring技术。总共分成3部分。第一部分，重点阐述Spring的架构。这部分内容循序渐进带领开发者进入 Spring中。主要在于阐述Spring IOC和Spring AOP。第二部分，重点阐述Spring的使用。这部分内容从简化Java/J2EE的角度出发，从J2EE平台各个技术层面分析并给出大量的研究实例， 对Spring提供的API进行阐述。主要在于阐述Spring对J2EE API提供的服务抽象。第三部分，重点阐述Spring高级专题。这部分内容重点对视图技术进行了研究，因为对于开发Web应用而言，前端界面的开发往往 工作量很大。因此，使用合理的视图技术开发Web应用对于项目的成功与否很关键。另外，Web应用的安全性往往也是企业应用中最为重要的需求之一，而用于 Spring的Acegi安全框架很好地解决了这个问题，这也是第三部分重点研究的内容之一。</p>\n<p>\n	本书献给所有的Java、J2EE开发者阅读。</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第一部分 Spring 架构分析<br />\n		第1 章Spring 启程 3<br />\n		1.1 背景知识 3<br />\n		1.2 运行Spring 实例应用 3<br />\n		1.2.1 实例1：example1 4<br />\n		1.2.2 实例2：example2 7<br />\n		1.2.3 实例3：example3 8<br />\n		1.2.4 实例4：example4 9<br />\n		1.3 Spring I/O 实用类 12<br />\n		1.4 小结 13<br />\n		第2 章安装和构建Spring 15<br />\n		2.1 获得二进制文件 15<br />\n		2.2 基于源代码构建Spring 17<br />\n		2.2.1 基于CVS 访问以获得源代码 17<br />\n		2.2.2 构建Spring 框架 20<br />\n		2.2.3 重要Ant 任务 25<br />\n		2.3 安装Spring 27<br />\n		2.4 小结 28<br />\n		第3 章控制反转（Spring IoC） 29<br />\n		3.1 IoC 背景知识 29<br />\n		.3.2 Spring IoC 30<br />\n		3.2.1 BeanFactory 30<br />\n		3.2.2 ApplicationContext 39<br />\n		3.3 IoC 其他内容 43<br />\n		3.3.1 发布并监听事件 43<br />\n		3.3.2 自定义JavaBean 属性编辑器 46<br />\n		3.4 小结 48<br />\n		第4 章面向方面编程（Spring AOP）49<br />\n		4.1 AOP 及Spring AOP 背景知识.49<br />\n		4.2 Spring AOP 装备 51<br />\n		4.2.1 Before 装备 52<br />\n		4.2.2 After 装备 55<br />\n		4.2.3 Throws 装备 58<br />\n		4.2.4 Around 装备 61<br />\n		4.3 ProxyFactoryBean 65<br />\n		4.4 对象池 68<br />\n		4.5 小结 71<br />\n		第5 章深入Spring 架构 73<br />\n		5.1 架构概述.73<br />\n		5.2 Spring 具体构件 74<br />\n		5.2.1 Spring 上下文 74<br />\n		5.2.2 Spring Web 75<br />\n		5.2.3 Spring 数据访问对象（DAO） 76<br />\n		5.2.4 Spring ORM 78<br />\n		5.2.5 Spring Web MVC 框架 78<br />\n		5.3 综合实例分析 78<br />\n		5.3.1 实例概述 80<br />\n		5.3.2 安装和配置example11 83<br />\n		5.3.3 架构分析 88<br />\n		5.4 小结 92<br />\n		第二部分 Spring 应用开发<br />\n		第6 章命名服务&mdash;&mdash;JNDI 97<br />\n		6.1 背景 97<br />\n		6.2 Spring 对JNDI 提供的支持 98<br />\n		6.2.1 JndiObjectFactoryBean 99<br />\n		6.2.2 JndiObjectTargetSource 102<br />\n		6.2.3 JndiTemplate 105<br />\n		6.2.4 JndiCallback 109<br />\n		6.3 小结 110<br />\n		第7 章 事务服务&mdash;&mdash;JTA 111<br />\n		7.1 背景 111<br />\n		7.2 Spring 对事务管理提供的支持 112<br />\n		7.2.1 PlatformTransactionManager 113<br />\n		7.2.2 声明式事务 117<br />\n		7.2.3 编程式事务 133<br />\n		7.3 小结 136<br />\n		第8 章 消息服务&mdash;&mdash;JMS 137<br />\n		8.1 背景 137<br />\n		8.2 Spring 对JMS 提供的支持 138<br />\n		8.2.1 JmsTemplate 139<br />\n		8.2.2 事务管理 164<br />\n		8.3 小结 165<br />\n		第9 章 邮件服务&mdash;&mdash;JavaMail 167<br />\n		9.1 背景 167<br />\n		9.2 Spring 对JavaMail 提供的支持 167<br />\n		9.2.1 使用CosMailSenderImpl 168<br />\n		9.2.2 使用JavaMailSenderImpl 170<br />\n		9.3 小结 172<br />\n		第10 章企业Bean 服务&mdash;&mdash;EJB 173<br />\n		10.1 背景 173<br />\n		10.2 Spring 对EJB 提供的支持 173<br />\n		10.2.1 开发EJB 176<br />\n		10.2.2 访问EJB 187<br />\n		10.3 小结 189<br />\n		第11 章持久化服务&mdash;&mdash;DAO 、JDBC 、ORM 191<br />\n		11.1 背景 191<br />\n		11.2 Spring 对DAO 提供的支持 192<br />\n		11.3 Spring 对JDBC 提供的支持 193<br />\n		11.3.1 JdbcTemplate 193<br />\n		11.3.2 DataSourceTransaction Manager 200<br />\n		11.3.3 连接数据库的方式 200<br />\n		11.3.4 将JDBC 操作建模为Java 对象 201<br />\n		11.4 Spring 对ORM 提供的支持 206<br />\n		11.4.1 Hibernate 介绍 207<br />\n		11.4.2 Hibernate 集成支持 216<br />\n		11.5 小结 224<br />\n		第12 章任务调度服务&mdash;&mdash;Quartz 、Timer 225<br />\n		12.1 背景 225<br />\n		12.2 Spring 对Quartz 提供的支持 225<br />\n		12.2.1 QuartzJobBean 和JobDetailBean 的使用 228<br />\n		12.2.2 MethodInvokingJobDetail FactoryBean 的使用 233<br />\n		12.3 Spring 对Timer 提供的支持 238<br />\n		12.3.1 ScheduledTimerTask 的使用 239<br />\n		12.3.2 MethodInovkingTimerTask FactoryBean 的使用 243<br />\n		12.4 小结 247<br />\n		第13 章远程服务 249<br />\n		13.1 背景 249<br />\n		13.2 Spring 对远程服务提供的支持 251<br />\n		13.2.1 RMI 使能服务 251<br />\n		13.2.2 Hessian 使能服务 259<br />\n		13.2.3 Burlap 使能服务 267<br />\n		13.2.4 HTTP Invoker 使能服务 273<br />\n		13.3 Spring 对Web 服务提供的支持 280<br />\n		13.4 小结 291<br />\n		第三部分 Spring 高级主题<br />\n		第14 章视图技术集成 295<br />\n		14.1 Spring Web MVC 296<br />\n		14.1.1 配置DispatcherServlet 297<br />\n		14.1.2 开发及配置Controller 298<br />\n		14.1.3 配置ViewResolver 300<br />\n		14.1.4 配置HandlerMapping 302<br />\n		14.2 Struts 303<br />\n		14.2.1 Spring JPetStore 的ApplicationContext 集成方式 304<br />\n		14.2.2 Spring 提供的集成方式 306<br />\n		14.3 Tapestry 309<br />\n		14.4 JSF 309<br />\n		14.5 JSP 和JSTL 309<br />\n		14.6 Velocity 和FreeMarker 310<br />\n		14.7 XSLT 311<br />\n		14.8 Tiles 311<br />\n		14.9 JasperReports 312<br />\n		14.10 文档视图 313<br />\n		14.11 小结 313<br />\n		第15 章Tapestry 集成 315<br />\n		15.1 Tapestry 介绍 315<br />\n		15.2 Page 和组件模板 318<br />\n		15.3 创建Tapestry 组件 320<br />\n		15.4 Tapestry 校验子系统 320<br />\n		15.5 管理服务器端状态 327<br />\n		15.6 配置Tapestry 应用 328<br />\n		15.7 与Spring 集成 329<br />\n		15.8 小结 332<br />\n		第16 章 JSF 集成 333<br />\n		16.1 Web 前端开发的趋势 333<br />\n		16.2 JSF 介绍 334<br />\n		16.3 Spring 和JSF-Spring 提供的JSF 集成 336<br />\n		16.4 example29 实例研究 337<br />\n		16.4.1 部署及使用 338<br />\n		16.4.2 开发过程 343<br />\n		16.4.3 Spring 提供的JSF 集成能力 355<br />\n		16.4.4 JSF-Spring 项目提供的JSF 集成能力 355<br />\n		16.5 小结 357<br />\n		第17 章用于Spring 的Acegi 安全框架 359<br />\n		17.1 Acegi 介绍 359<br />\n		17.2 Acegi 架构及使用 362<br />\n		17.2.1 构建contacts 应用 362<br />\n		17.2.2 Acegi 架构综述 370<br />\n		17.2.3 Web 资源的认证 372<br />\n		17.2.4 Web 资源的授权 377<br />\n		17.2.5 配置Acegi Servlet 过滤器 378<br />\n		17.2.6 方法级的认证和授权 388<br />\n		17.3 其他内容 389<br />\n		17.3.1 实现密码的加密处理 391<br />\n		17.3.2 缓存用户信息 393<br />\n		17.4 小结 394<br />\n		附录A 实例代码安装 395<br />\n		A.1 代码说明 395<br />\n		A.2 钟情JBoss 395<br />\n		A.3 工具下载与安装 396<br />\n		A.3.1 Spring IDE 396<br />\n		A.3.2 Tapestry Spindle 400<br />\n		A.3.3 JBoss IDE 406<br />\n		A.3.4 Hibernate Synchronzier 411<br />\n		A.4 代码使用 411<br />\n		附录B spring-beans.dtd 的内容模型 413<br />\n		B.1 beans 节点 413<br />\n		B.2 bean 节点 414<br />\n		B.3 constructor-arg 节点 417<br />\n		B.4 property 节点 419<br />\n		B.5 lookup-method 节点 419<br />\n		B.6 replaced-method 节点 420<br />\n		附录C 参考资料 421<br />\n		后记 425</p>\n</blockquote>', '本书深入剖析了当前流行的轻量级开发框架Spring技术。总共分成3部分。第一部分，重点阐述Spring的架构。这部分内容循序渐进带领开发者进入 Spring中。主要在于阐述Spring IOC和Spring AOP。第二部分，重点阐述Spring的使用。这部分内容从简化Java/J2EE的角度出发，从J2EE平台各个技术层面分析并给出大量的研究实例，对Spring提供的API进行阐述。主要在于阐述Spring对J2EE API提供的服务抽象。第三部分，重点阐述Spring高级专题。这部分内容重点对视图技术进行了研究，因为对于开发Web应用而言，前端界面的开发往往工作量很大。因此，使用合理的视图技术开发Web应用对于项目的成功与否很关键。另外，Web应用的安全性往往也是企业应用中最为重要的需求之一，而用于 Spring的Acegi安全框架很好地解决了这个问题，这也是第三部分重点研究的内容之一。', 1286899200000, '1.0', '罗时飞', '', '电子工业出版社', '', '本站下载-http://story.ajava.org/spring/master-spring-zh-pdf.zip', '46M', '所有系统', 'CC3', '中文', 1286965834746, 1286966132064, 'admin'),
('000000002b9e98bc012ba5691e3e0076', '000000002b904fe6012b905b65d50003', '《一步一步开发Spring Framework 应用程序》PDF下载', 'Spring 入门教程', NULL, '<p>\n	这是一个关于如何使用Spring Framework从无到有开发一个Web应用的逐步的指南。本文分成几个部分，你可以按顺序阅读或者根据你对他们的熟悉程度，跳过某些章节。</p>\n<p>\n	&nbsp;</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<div firebugversion="1.5.4" style="display: none;">\n	&nbsp;</div>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第1部分 - 设置基本应用程序和环境<br />\n		第1步 - 开发目录<br />\n		第2步 &ndash; INDEX.JSP<br />\n		第3步 &ndash; 将应用程序部署到TOMCAT<br />\n		第4步 &ndash; 测试应用<br />\n		第5步 &ndash; 下载SPRING分发包<br />\n		第6步 &ndash; 修改WEB-INF目录中的WEB.XML<br />\n		第7步 - 把JAR文件复制到WEB-INF/LIB<br />\n		第8步 - 创建你的控制器<br />\n		第9步 - 构建应用程序<br />\n		第10步 &ndash; 复制并修改LOG4J.PROPERTIES<br />\n		第11步 &ndash; 部署应用程序<br />\n		第12步 - 创建一个视图<br />\n		总结.14<br />\n		第2部分 - 开发和配置应用程序<br />\n		第13步 &ndash; 改进INDEX.JSP<br />\n		第14步 &ndash; 改进视图和控制器<br />\n		第15步 &ndash; 解耦视图和控制器<br />\n		第16步 &ndash; 添加一些业务逻辑的类<br />\n		第 17 步 &ndash; 修改视图用于现实业务数据并且添加消息绑定的支持<br />\n		第18步 &ndash; 添加一些测试数据来自动组装一些业务对象<br />\n		第19步 &ndash; 添加消息绑定以及给BUILD.XML添加&ldquo;CLEAN&rdquo;目标<br />\n		第3部分 - 为应用程序添加单元测试和表单<br />\n		第20步 &ndash; 为SPRINGAPPCONTROLLER添加单元测试<br />\n		第21步 &ndash; 为PRODUCTMANAGER添加单元测试和新的功能<br />\n		第22步 &ndash; 添加一个表单<br />\n		第4部分 - 实现数据库持久<br />\n		第23步 &ndash; 添加ANT任务来创建和载入测试数据<br />\n		第24步 &ndash; 为JDBC创建一个数据访问对象（DAO）的实现<br />\n		第25步 &ndash; 修改WEB应用来使用数据库持久<br />\n		第26步 &ndash; 修复损坏的测试</p>\n</blockquote>\n', '这是一个关于如何使用Spring Framework从无到有开发一个Web应用的逐步的指南。本文分成几个部分，你可以按顺序阅读或者根据你对他们的熟悉程度，跳过某些章节。', 1286899200000, '1.0', 'Thomas Risberg', '', 'AJava', '', '本站下载-http://story.ajava.org/spring/step-by-step-develop-spring-zh-pdf.zip', '446K', '所有系统', 'CC3', '中文', 1286970351166, 1286970900991, 'admin'),
('000000002b9e98bc012ba570cf74007a', '000000002b904fe6012b905b65d50003', '《Spring.NET框架参考文档》CHM下载', 'Spring在.Net中的使用', NULL, '<p>\n	Java社区早已有人将java版的文档翻译成中文，且目前有不少Spring的书籍可购买，但由于java与dotNet技术本身的差异，java版spring与spring.net还是存在一些细节上的不同，所以我决定将Spring.NET的文档翻译为中文，希望能对初学Spring.Net的朋友有所帮助。当然了，如果可以，还是建议您去阅读英文原文。不过，我会尽量保证译文和原文的一致性，使其更符合中文阅读习惯，更易理解。目标而已，能否实现自然要靠大家帮助，如果您觉得还可以，就拿来看看，您能从中获益就是对它的肯定。如果您觉得很糟糕，也别骂我，毕竟把这堆垃圾放在网上，也不至于对您造成损失。</p>\n<p>\n	&nbsp;</p>\n<div firebugversion="1.5.4" id="_firebugConsole" style="display: none;">\n	&nbsp;</div>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		第一章 序言<br />\n		第二章 简介<br />\n		2.1.概述<br />\n		2.2.背景<br />\n		2.3.模块<br />\n		2.4.许可证信息<br />\n		2.5.支持<br />\n		第三章 背景<br />\n		3.1.控制反转<br />\n		第一部分 核心技术<br />\n		第四章 对象、对象工厂和应用程序上下文<br />\n		4.1.简介<br />\n		4.2.IObjectFactory，IApplicationContext和IObjectDefinition接口介绍<br />\n		4.2.1.The IObjectFactory和IApplicationContext<br />\n		4.2.2.对象定义<br />\n		4.2.3.对象的创建<br />\n		4.2.3.1.通过构造器创建对象<br />\n		4.2.3.2.通过静态工厂方法创建对象<br />\n		4.2.3.3.通过实例工厂方法创建对象<br />\n		4.2.4.泛型类的对象创建<br />\n		4.2.4.1.通过构造器创建泛型类的对象<br />\n		4.2.4.2.通过静态工厂方法创建泛型类的对象<br />\n		4.2.4.3.通过实例工厂方法创建泛型类的对象<br />\n		4.2.5.对象标识符（id和name）<br />\n		4.2.6.Singleton和Prototype<br />\n		4.3.属性，协作对象，自动装配和依赖检查<br />\n		4.3.1.设置对象的属性和协作对象<br />\n		4.3.2.构造器参数解析<br />\n		4.3.2.1.根据参数类型匹配构造器参数<br />\n		4.3.2.2.根据参数索引匹配构造器参数<br />\n		4.3.2.3.根据名称匹配构造器参数<br />\n		4.3.3.详细讨论对象属性和构造器参数<br />\n		4.3.3.1.设置空值<br />\n		4.3.3.2.设置集合值<br />\n		4.3.3.3.设置泛型集合的值<br />\n		4.3.3.4.设置索引器属性<br />\n		4.3.3.5.内联对象定义<br />\n		4.3.3.6.idref节点<br />\n		4.3.3.7.引用协作对象<br />\n		4.3.3.8.value和ref节点的简短格式<br />\n		4.3.3.9.复合属性名<br />\n		4.3.4.方法注入<br />\n		4.3.4.1.查询方法注入<br />\n		4.3.4.2.替换任意方法<br />\n		4.3.5.引用其他对象或类型的成员<br />\n		4.3.5.1.使用对象或类的属性值进行注入<br />\n		4.3.5.2.使用字段值进行注入<br />\n		4.3.5.3.使用方法的返回值进行注入<br />\n		4.3.6.IFactoryObject接口的其它实现<br />\n		4.3.6.1.Log4Net<br />\n		4.3.7.使用depends-on<br />\n		4.3.8.自动装配协作对象<br />\n		4.3.9.检查依赖项<br />\n		4.4.类型转换<br />\n		4.4.1.枚举类型的转换<br />\n		4.4.2.内置的类型转换器<br />\n		4.4.3.自定义类型转换器<br />\n		4.4.3.1.使用CustomConverterConfigurer类<br />\n		4.5.自定义对象的行为<br />\n		4.5.生命周期接口<br />\n		4.5.1.1.IInitializingObject接口和init-method属性<br />\n		4.5.1.2.IDisposable接口和destroy-method属性<br />\n		4.5.2.让对象了解自己的容器<br />\n		4.5.2.1.IObjectFactoryAware接口<br />\n		4.5.2.2.IObjectNameAware接口<br />\n		4.5.3.IFactoryObject接口<br />\n		4.6.抽象与子对象定义<br />\n		4.7.与IObjectFactory接口交互<br />\n		4.7.1.获得IFactoryObject对象本身，而非其产品<br />\n		4.8.使用IObjectPostProcessor接口自定义对象<br />\n		4.9.使用IObjectFactoryPostProcessor定制对象工厂<br />\n		4.9.1.PropertyPlaceholderConfigurer类<br />\n		4.9.1.1.使用环境变量进行替换<br />\n		4.9.2.PropertyOverrideConfigurer类<br />\n		4.10.使用alias节点为对象添加别名<br />\n		4.11.IApplicationContext简介<br />\n		4.12.配置应用程序上下文<br />\n		4.12.1.注册自定义解析器<br />\n		4.12.2.创建自定义资源处理器<br />\n		4.12.3.配置类型别名<br />\n		4.12.4.注册类型转换器<br />\n		4.13.IApplicationContext接口的扩展功能<br />\n		4.13.1.上下文继承<br />\n		4.13.2.使用IMessageSource接口<br />\n		4.13.3.在Spring.NET内部使用资源<br />\n		4.13.4.松耦合事件模型<br />\n		4.13.5.IApplicationContext的事件通知<br />\n		4.14.定制IApplicationContex中对象的行为<br />\n		4.14.1.IApplicationContextAware标识接口<br />\n		4.14.2.IObjectPostProcessor接口<br />\n		4.14.3.IObjectFactoryPostProcessor接口<br />\n		4.14.4.PropertyPlaceholderConfigurer类<br />\n		4.15.从其它文件中导入对象定义<br />\n		4.16.服务定位器访问<br />\n		第五章. IObjectWrapper接口和类型转换<br />\n		5.1.简介<br />\n		5.2.使用IObjectWrapper接口管理对象<br />\n		5.2.1.读、写普通及嵌套的属性<br />\n		5.2.2.其它功能<br />\n		5.3.类型转换<br />\n		5.3.1.转换枚举类型<br />\n		5.4.内置类型转换器<br />\n		第六章. IResource接口<br />\n		6.1.简介<br />\n		6.2.IResource接口<br />\n		6.3.内置的IResource实现类<br />\n		6.4.IResourceLoader接口<br />\n		6.5.IResourceLoaderAware接口<br />\n		6.6.应用程序上下文和IResource路径<br />\n		第七章. 多线程和并发操作<br />\n		7.1.简介<br />\n		7.2.线程本地存储<br />\n		7.3.同步基础<br />\n		7.3.1.ISync<br />\n		7.3.2.SyncHolder<br />\n		7.3.3.Latch<br />\n		7.3.4.Semaphore<br />\n		第八章. 对象池<br />\n		8.1.简介<br />\n		8.2.接口和实现<br />\n		第九章. Spring.NET杂记<br />\n		9.1.简介<br />\n		9.2.PathMatcher<br />\n		9.2.1.通用规则<br />\n		9.2.2.匹配文件名<br />\n		9.2.3.匹配子目录<br />\n		9.2.4.大小写需要考虑，斜线可以任意<br />\n		第十章. 表达式求值<br />\n		10.1.简介<br />\n		10.2.表达式求值<br />\n		10.3.语言参考<br />\n		10.3.1.文字表达式<br />\n		10.3.2.属性，数组，列表，字典，索引器<br />\n		10.3.2.1.定义内联的数组、列表和词典<br />\n		10.3.3.方法<br />\n		10.3.4.操作符<br />\n		10.3.4.1.关系操作符<br />\n		10.3.4.2.逻辑操作符<br />\n		10.3.4.3.算术运算符<br />\n		10.3.5.赋值<br />\n		10.3.6.表达式列表<br />\n		10.3.7.类型<br />\n		10.3.8.类型注册<br />\n		10.3.9.构造器<br />\n		10.3.10.变量<br />\n		10.3.10.1.&#39;#this&#39;和&#39;#root&#39;变量<br />\n		10.3.11.三元操作符(If-Then-Else)<br />\n		10.3.12.列表的投影（Projection）和选择（Selection）<br />\n		10.3.13. 集合处理器和聚合器<br />\n		10.3.13.1.Count聚合器<br />\n		10.3.13.2.Sum聚合器<br />\n		10.3.13.3.Average聚合器<br />\n		10.3.13.4.Minimum聚合器<br />\n		10.3.13.5.Maximum聚合器<br />\n		10.3.13.6.nonNull处理器<br />\n		10.3.13.7.distinct处理器<br />\n		10.3.13.8.sort处理器<br />\n		10.3.14.引用容器中的对象<br />\n		10.3.15.Lambda表达式<br />\n		10.3.16.空目标<br />\n		10.4.本章使用的示例类型<br />\n		第十一章. 验证框架<br />\n		11.1.简介<br />\n		11.2.用法示例<br />\n		11.3.验证对象组<br />\n		11.4.验证对象<br />\n		11.4.1.条件验证对象<br />\n		11.4.2.必需性验证对象<br />\n		11.4.3.正则表达式验证对象<br />\n		11.4.4.通用验证对象<br />\n		11.4.5.条件型验证<br />\n		11.5.验证行为<br />\n		11.5.1.错误消息行为<br />\n		11.5.2.通用行为<br />\n		11.6.引用验证对象<br />\n		11.7.在ASP.NET中的使用技巧<br />\n		11.7.1.显示验证错误<br />\n		11.7.1.1.配置错误显示类<br />\n		第十二章. 使用Spring.NET进行面向方面的编程<br />\n		12.1.简介<br />\n		12.1.1.AOP基本概念<br />\n		12.1.2.Spring.NET AOP的功能<br />\n		12.1.3.Spring.NET的AOP代理<br />\n		12.2.Spring.NET中的切入点<br />\n		12.2.1.概念<br />\n		12.2.2.切入点的操作<br />\n		12.2.3.Spring.NET提供的切入点实现类<br />\n		12.2.3.1.静态切入点<br />\n		12.2.3.2.动态切入点<br />\n		12.2.4.自定义切入点<br />\n		12.3.Spring.NET的通知类型<br />\n		12.3.1.通知的生命周期<br />\n		12.3.2.通知类型<br />\n		12.3.2.1.拦截环绕通知<br />\n		12.3.2.2.前置通知<br />\n		12.3.2.3.异常通知<br />\n		12.3.2.4.后置通知<br />\n		12.3.2.5.引入通知<br />\n		12.4.Spring.NET中的Advisor<br />\n		12.5.使用ProxyFactoryObject创建AOP代理<br />\n		12.5.1.基本原理<br />\n		12.5.2.ProxyFactoryObject的属性<br />\n		12.5.3.代理接口<br />\n		12.5.4.代理一个类<br />\n		12.6.使用ProxyFactory类以编程方式创建AOP代理<br />\n		12.7.管理目标对象<br />\n		12.8.使用&ldquo;自动代理&rdquo;功能<br />\n		12.8.1.自动代理对象的定义<br />\n		12.8.1.1.ObjectNameAutoProxyCreator<br />\n		12.8.1.2.DefaultAdvisorAutoProxyCreator<br />\n		12.8.1.3.AbstractAutoProxyCreator<br />\n		12.8.2.使用特性驱动的自动代理<br />\n		12.9.使用TargetSources<br />\n		12.9.1.动态切换TargetSource<br />\n		12.9.2.池化TargetSource<br />\n		12.9.3.PrototypeTargetSource<br />\n		12.10.定义新的通知类型<br />\n		12.11.参考资源<br />\n		第十三章.通用日志抽象层<br />\n		13.1.简介<br />\n		13.1.1.Logging API<br />\n		13.2.实现与配置<br />\n		13.2.1.控制台Logger<br />\n		13.3.Log4Net<br />\n		第二部分. 中间层数据访问<br />\n		第十四章. 事务管理<br />\n		14.1.简介<br />\n		14.2.动机<br />\n		14.3.核心接口<br />\n		14.4.用事务进行资源同步<br />\n		14.4.1.高层次方法<br />\n		14.4.2.低层次方法<br />\n		14.5.声明式事务管理<br />\n		14.5.1.理解Spring.NET声明式事务管理的实现<br />\n		14.5.2.第一个例子<br />\n		14.5.3.Transaction特性的设置<br />\n		14.5.4.通过AutoProxyCreator使用声明式事务<br />\n		14.5.5.通过TransactionProxyFactoryObject使用声明式事务<br />\n		14.5.6. 通过ProxyFactoryObject使用声明式事务<br />\n		14.5.7. Using Abstract object definitions<br />\n		14.5.8. Declarative Transactions using ProxyFactoryObject<br />\n		14.6. 编程方式的事务管理<br />\n		14.6.1.使用TransactionTemplate<br />\n		14.6.2.使用IPlatformTransactionManager<br />\n		14.7.选择编程方式还是声明方式<br />\n		第十五章. 数据访问对象<br />\n		15.1.简介<br />\n		15.2.统一的异常体系<br />\n		15.3.为数据访问对象提供的统一抽象基类<br />\n		第十六章. DbProvider<br />\n		16.1.简介<br />\n		16.1.1.IDbProvider和DbProviderFactory<br />\n		16.1.2. XML配置<br />\n		16.1.3.管理连接字符串<br />\n		第十七章. 使用ADO.NET进行数据访问<br />\n		17.1.简介<br />\n		17.2.动机<br />\n		17.3.Provider抽象<br />\n		17.3.1.创建IDbProvider类型的实例<br />\n		17.4.命名空间<br />\n		17.5.数据访问的方式<br />\n		17.6.AdoTemplate简介<br />\n		17.6.1.执行回调<br />\n		17.6.2.在.NET 2.0中执行回调<br />\n		17.6.3. .NET 1.1<br />\n		17.6.4.AdoTemplate方法指南<br />\n		17.7.异常翻译<br />\n		17.8.参数管理<br />\n		17.8.1. IDbParametersBuilder<br />\n		17.8.2. IDbParameters<br />\n		17.9. Mapping DBNull values<br />\n		17.10. Basic data access operations<br />\n		17.10.1. ExecuteNonQuery<br />\n		17.10.2. ExecuteScalar<br />\n		17.11. Queries and Lightweight Object Mapping<br />\n		17.11.1. ResultSetExtractor<br />\n		17.11.2. RowCallback<br />\n		17.11.3. RowMapper<br />\n		17.11.4. Query for a single object<br />\n		17.11.5. Query using a CommandCreator<br />\n		17.12. DataTable and DataSet<br />\n		17.12.1. DataTables<br />\n		17.12.2. DataSets<br />\n		17.13. Deriving Stored Procedure Parameters<br />\n		17.14. Database operations as Objects<br />\n		17.14.1. AdoNonQuery<br />\n		17.14.2. AdoQuery<br />\n		17.14.3. MappingAdoQuery<br />\n		17.14.4. Stored Procedure<br />\n		17.14.5. DataSetOperation<br />\n		18. ORM集成<br />\n		18.1. 简介<br />\n		第三部分. Web框架<br />\n		第十九章. Web框架<br />\n		19.1.简介<br />\n		19.2.自动装载应用程序上下文和应用程序上下文嵌套<br />\n		19.2.1. 配置<br />\n		19.2.2.上下文嵌套<br />\n		19.3.为ASP.NET页面进行依赖注入<br />\n		19.3.1.为Web控件进行依赖注入<br />\n		19.4.Master Page<br />\n		19.4.1.将子页面与Master Page关联<br />\n		19.5.双向数据绑定<br />\n		19.5.1.数据绑定的后台实现<br />\n		19.5.1.1.绑定方向<br />\n		19.5.1.2.Formatters<br />\n		19.5.1.3.类型转换<br />\n		19.5.1.4.数据绑定事件<br />\n		19.6.本地化<br />\n		19.6.1.使用Localizer进行自动本地化（&ldquo;推&rdquo;模型）<br />\n		19.6.2.使用Localizer<br />\n		19.6.3.手动应用资源（&ldquo;拉&rdquo;模型的本地化）<br />\n		19.6.4.在Web应用程序中进行图像本地化<br />\n		19.6.5.全局资源<br />\n		19.6.6.用户语言文化管理<br />\n		19.6.6.1. DefaultWebCultureResolver<br />\n		19.6.6.2. RequestCultureResolver<br />\n		19.6.6.3. SessionCultureResolver<br />\n		19.6.6.4. CookieCultureResolver<br />\n		19.6.7.更改语言文化<br />\n		19.7.结果映射<br />\n		19.8.客户端脚本<br />\n		19.8.1.在HTML的head节点内注册客户端脚本<br />\n		19.8.2.向节点中添加CSS定义<br />\n		19.8.3.全局目录（Well-Known Directories）<br />\n		第四部分. 服务<br />\n		第二十章. .NET Remoting<br />\n		20.1.简介<br />\n		20.2.在服务端发布SAO<br />\n		20.2.1.SAO Singleton<br />\n		20.2.2.SAO SingleCall<br />\n		20.2.3.IIS应用程序配置<br />\n		20.3.在客户端访问SAO<br />\n		20.4.CAO 最佳实践<br />\n		20.5.在服务端注册CAO<br />\n		20.5.1.向CAO对象应用AOP通知<br />\n		20.6.在客户端访问CAO<br />\n		20.6.1.向客户端的CAO对象应用AOP通知<br />\n		20.7. XML Schema for configuration<br />\n		20.8.参考资源<br />\n		第二十一章. .NET企业服务<br />\n		21.1.简介<br />\n		21.2.服务组件<br />\n		21.3.服务端<br />\n		21.4.客户端<br />\n		第二十二章. Web服务<br />\n		22.1.服务端<br />\n		22.1.1.消除对.asmx文件的依赖<br />\n		22.1.2.向web服务中注入依赖项<br />\n		22.1.3.将PONO发布为web服务<br />\n		22.1.4.将AOP代理发布为web服务<br />\n		22.1.5.客户端的问题<br />\n		22.2.客户端<br />\n		22.2.1.WebServiceProxyFactory<br />\n		22.2.2.WebServiceClientFactory<br />\n		第二十三章. Windows后台服务<br />\n		23.1.备注<br />\n		23.2.简介<br />\n		23.3.Spring.Services.WindowsService.Process.exe应用程序<br />\n		23.3.1.安装<br />\n		23.3.2.配置<br />\n		23.4.将应用程序上下文发布为Windows服务<br />\n		23.4.1.service.config<br />\n		23.4.1.1.让应用程序了解自身的位置<br />\n		23.4.2.watcher.xml - 可选的配置<br />\n		23.4.3.bin目录 - 可选<br />\n		23.5.自定义或扩展<br />\n		23.5.1. .config文件<br />\n		第五部分. 与Visual Studio.NET集成<br />\n		第二十四章. 与Visual Studio.NET集成<br />\n		24.1.XML编辑与验证<br />\n		24.2.XML Schema的版本<br />\n		24.3.集成API文档<br />\n		第六部分. 快速入门程序<br />\n		第二十五章. IoC快速入门<br />\n		25.1.简介<br />\n		25.2.Movie Finder<br />\n		25.2.1.开始建立MovieFinder应用程序<br />\n		25.2.2.第一个对象定义<br />\n		25.2.3.属性注入<br />\n		25.2.4.构造器参数注入<br />\n		25.2.5.总结<br />\n		25.2.6.日志<br />\n		25.3.应用程序上下文和IMessageSource接口<br />\n		25.3.1.简介<br />\n		25.4.应用程序上下文和IEventRegistry接口<br />\n		25.4.1.简介<br />\n		25.5.对象池示例<br />\n		25.5.1.实现Spring.Pool.IPoolableObjectFactory<br />\n		25.5.2.使用池中的对象<br />\n		25.5.3.利用executor执行并行的grep<br />\n		25.6.AOP<br />\n		第二十六章. AOP指南<br />\n		26.1.简介<br />\n		26.2.基础知识<br />\n		26.2.1.应用通知<br />\n		26.2.2.使用切入点－基本概念<br />\n		26.3.深入探讨<br />\n		26.3.1.其它类型的通知<br />\n		26.3.1.1.前置通知<br />\n		26.3.1.2.后置通知<br />\n		26.3.1.3.异常通知<br />\n		26.3.1.4.引入(mixins)<br />\n		26.3.1.5.通知链<br />\n		26.3.1.6.配置通知<br />\n		26.3.2.使用特性定义切入点<br />\n		26.4.The Spring.NET AOP Cookbook<br />\n		26.4.1.缓存<br />\n		26.4.2.性能监视<br />\n		26.4.3.重试规则<br />\n		Spring.NET AOP最佳实践<br />\n		第二十七章. .NET Remoting快速入门<br />\n		27.1.简介<br />\n		27.2.Remoting实例程序<br />\n		27.3.实现<br />\n		27.4.运行程序<br />\n		27.5.Remoting Schema<br />\n		27.6.参考资源<br />\n		第二十八章. Web框架快速入门<br />\n		28.1.简介<br />\n		第二十九章. SpringAir - 参考程序<br />\n		29.1.简介<br />\n		29.2.架构<br />\n		29.3.实现<br />\n		29.3.1.业务层<br />\n		29.3.2.服务层<br />\n		29.3.3.Web层<br />\n		29.4.总结<br />\n		第三十章. 数据访问快速入门<br />\n		30.1.简介<br />\n		第三十一章. 事务管理快速入门<br />\n		31.1.简介<br />\n		31.2.应用程序概述<br />\n		31.2.1.接口<br />\n		第七部分. Java开发人员必读<br />\n		第三十二章. Java开发人员必读<br />\n		32.1.简介<br />\n		32.2.Beans和Objects<br />\n		32.3.PropertyEditor和TypeConverter<br />\n		32.4.ResourceBundle和ResourceManager<br />\n		32.5.异常<br />\n		32.6.应用程序配置<br />\n		32.7.AOP框架<br />\n		32.7.1.不能在ProxyFactoryObject的InterceptorNames属性中指定目标对象名<br />\n		附录A. Spring.NET的spring-objects.xsd</p>\n</blockquote>\n', 'Java社区早已有人将java版的文档翻译成中文，且目前有不少Spring的书籍可购买，但由于java与dotNet技术本身的差异，java版spring与spring.net还是存在一些细节上的不同，所以我决定将Spring.NET的文档翻译为中文，希望能对初学Spring.Net的朋友有所帮助。当然了，如果可以，还是建议您去阅读英文原文。不过，我会尽量保证译文和原文的一致性，使其更符合中文阅读习惯，更易理解。目标而已，能否实现自然要靠大家帮助，如果您觉得还可以，就拿来看看，您能从中获益就是对它的肯定。如果您觉得很糟糕，也别骂我，毕竟把这堆垃圾放在网上，也不至于对您造成损失。', 1286899200000, '1.0', '郭鸿飞', '', 'AJava', '', '本站下载-http://story.ajava.org/spring/spring.net-reference-zh-chm.zip', '1M', '所有系统', 'CC3', '中文', 1286970855285, 1286970855285, 'admin'),
('000000002b9e98bc012baec1c6a90080', '000000002b904fe6012b905b65d50003', '《Spring 2.0技术手册》PDF下载', '来自台湾的著作', NULL, '<p>\n	本书为PDF扫描版本。如果您想购买此书，可到<a href="http://www.china-pub.com/34710">http://www.china-pub.com/34710</a></p>\n<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook30001-35000/34710/shupi.jpg" style="width: 457px; height: 550px;" /></p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		导读<br />\n		第1章 认识Spring<br />\n		第2章 Spring入门<br />\n		第3章 Bean、消息、事件<br />\n		第4章 Spring AOP<br />\n		第5章 JDBC、事务支持<br />\n		第6章 Hibernate与Spring<br />\n		第7章 Spring Web MVC框架<br />\n		第8章 View层方案、Web框架整合<br />\n		第9章 API封装<br />\n		第10章 项目：Spring在线书签</p>\n</blockquote>', '本书介绍了spring 2.0的新特性，诸如spring 2.0的新配置、新aop支持、增强的ioc、jdbc和form标签等新功能。它通过实际完成一个完整的spring项目示例，展示了与spring相关api的使用技巧，能够显著减少每一位入门者摸索spring api的时间。本书是学习spring web开发的最佳读物，它能让读者在示例学习中获得显著提高。本书内容全面深入，主要包括spring入门、bean/消息/事件、spring aop、jdbc/事物支持、spring与hibernate的整合、spring web mvc框架、view 层方案/web框架整合、api封装、spring在线书签完整项目示例等内容。 ', 1287072000000, '1.0', '林信良', '', '电子工业出版社', '', '本站下载-http://story.ajava.org/spring/spring-2.0-tech-manual-zh-pdf.zip', '6M', '所有系统', 'CC3', '中文', 1287127156393, 1287127156393, 'admin'),
('000000002b9e98bc012baec4d0c60084', '000000002b904fe6012b905b65d50003', '《Spring的IoC容器》PDF下载', '《Spring揭秘》的精选版', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://www.infoq.com/resource/minibooks/spring-ioc/zh/cover/spring-ioc-big.jpg" style="width: 260px; height: 323px;" /></p>\n<p>\n	本迷你书是《<a href="http://www.douban.com/subject/3897837/" target="_blank">Spring揭秘</a>》 的精选版，节选了原书中介绍Spring IoC容器的6个章节。《Spring揭秘》以幽默生动的语言、辅以有趣的故事和典故，循循善诱地阐述了Spring框架的方方面面。针对Spring框 架的主要功能以及开发者们遇到最多的问 题，首先介绍问题的相关背景，然后逐条进行深度剖析，最后通过分析来引入Spring框架可以提供的最佳解决方案。虽言Spring，却不局限于 Spring！</p>\n<p>\n	本书目录如下：</p>\n<blockquote>\n	<p>\n		Spring框架的由来<br />\n		1.1 Spring之崛起<br />\n		1.2 Spring框架概述<br />\n		1.3 Spring大观园<br />\n		1.4 小结<br />\n		<br />\n		IoC的基本概念<br />\n		2.1 我们的理念是：让别人为你服务<br />\n		2.2 手语，呼喊，还是心有灵犀<br />\n		2.3 IoC的附加值<br />\n		2.4 小结<br />\n		<br />\n		掌管大局的IoC Service Provider<br />\n		3.1 IoC Service Provider的职责<br />\n		3.2 运筹帷幄的秘密<br />\n		3.3 小结<br />\n		<br />\n		Spring的IoC容器之BeanFactory<br />\n		4.1 拥有BeanFactory之后的生活<br />\n		4.2 BeanFactory的对象注册与依赖绑定方式<br />\n		4.3 BeanFactory的XML之旅<br />\n		4.4 容器背后的秘密<br />\n		4.5 小结<br />\n		<br />\n		Spring IoC容器ApplicationContext<br />\n		5.1 统一资源加载策略<br />\n		5.2 国际化信息支持<br />\n		5.3 容器内部事件发布<br />\n		5.4 多配置模块加载的简化<br />\n		5.5 小结<br />\n		<br />\n		Spring IoC容器之扩展篇<br />\n		6.1 Spring 2.5的基于注解的依赖注入<br />\n		6.2 Spring 3.0展望<br />\n		6.3 小结</p>\n</blockquote>', '本迷你书是《Spring揭秘》的精选版，节选了原书中介绍Spring IoC容器的6个章节。《Spring揭秘》以幽默生动的语言、辅以有趣的故事和典故，循循善诱地阐述了Spring框架的方方面面。针对Spring框架的主要功能以及开发者们遇到最多的问 题，首先介绍问题的相关背景，然后逐条进行深度剖析，最后通过分析来引入Spring框架可以提供的最佳解决方案。虽言Spring，却不局限于 Spring！', 1287072000000, '1.0', '王福强', '', 'InfoQ', '', '本站下载-http://story.ajava.org/spring/spring-ioc-zh-pdf.zip', '2M', '所有系统', 'CC3', '中文', 1287127355591, 1287127427804, 'admin'),
('000000002b9e98bc012baecadb6d008a', '000000002b904fe6012b905b65d50003', '《Spring in Action》 读书笔记 PDF下载', '简明的Spring in Action', NULL, '<p>\n	本书是《Spring in Action》的读书笔记，简明扼要的记录了Spring的各个概念、要点、注意事项以及难以理解、容易出错的内容，是学习spring的不错的教程。对照《Spring in Action》一起阅读效果更佳。</p>', '本书是《Spring in Action》的读书笔记，简明扼要的记录了Spring的各个概念、要点、注意事项以及难以理解、容易出错的内容，是学习spring的不错的教程。对照《Spring in Action》一起阅读效果更佳。', 1287072000000, '1.0', '未知', '', 'AJava', '', '本站下载-http://story.ajava.org/spring/spring-in-action-study-note-zh-pdf.zip', '1M', '所有系统', 'CC3', '中文', 1287127751533, 1287127751533, 'admin'),
('000000002b9e98bc012bbe57a87d0092', '000000002b9e98bc012bbe4f60bf0090', 'JDK 6 Update 22 下载', '最新的JDK 6', NULL, '<p>\n	此版本是目前JDK 6的最新版本，修复了不少BUG。此版本的内部版本号是1.6.0_22-b04（这里的b指Build，而不是Beta），外部版本号是6u22。</p>\n<table border="1" cellpadding="5" cellspacing="0" summary="other bug fixes">\n	<thead>\n		<tr>\n			<th colspan="1" rowspan="1">\n				BugId</th>\n			<th colspan="1" rowspan="1">\n				Category</th>\n			<th colspan="1" rowspan="1">\n				Subcategory</th>\n			<th colspan="1" rowspan="1">\n				Description</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6897143">6897143</a></td>\n			<td colspan="1" rowspan="1">\n				hotspot</td>\n			<td colspan="1" rowspan="1">\n				garbage_collector</td>\n			<td colspan="1" rowspan="1">\n				Stress test crashes during HeapInspection using ParallelGC</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6919638">6919638</a></td>\n			<td colspan="1" rowspan="1">\n				hotspot</td>\n			<td colspan="1" rowspan="1">\n				garbage_collector</td>\n			<td colspan="1" rowspan="1">\n				CMS: ExplicitGCInvokesConcurrent misinteracts with gc locker</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6837842">6837842</a></td>\n			<td colspan="1" rowspan="1">\n				hotspot</td>\n			<td colspan="1" rowspan="1">\n				jni</td>\n			<td colspan="1" rowspan="1">\n				JNI_CreateJavaVM crashes under impersonation</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6948223">6948223</a></td>\n			<td colspan="1" rowspan="1">\n				idl</td>\n			<td colspan="1" rowspan="1">\n				orb</td>\n			<td colspan="1" rowspan="1">\n				Corba issue, fail to reload object</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6969236">6969236</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				build</td>\n			<td colspan="1" rowspan="1">\n				Regression: JRE identification fails due to Oracle rebranding in java.exe</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6893325">6893325</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_awt</td>\n			<td colspan="1" rowspan="1">\n				JComboBox and dragging to an item outside the bounds of the containing JFrame is not selecting that</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6974093">6974093</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_lang</td>\n			<td colspan="1" rowspan="1">\n				Thread.clone should NOT invoke addUnstarted on started threads</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6959911">6959911</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_security</td>\n			<td colspan="1" rowspan="1">\n				Update Entrust.net CA (2048) root and add new Entrust Root CA-G2</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6725789">6725789</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_util_concurrent</td>\n			<td colspan="1" rowspan="1">\n				ScheduledExecutorService does not work as expected in jdk7/6/5</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6547241">6547241</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				imageio</td>\n			<td colspan="1" rowspan="1">\n				JPEGImageReader.readImage crash</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6557086">6557086</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				imageio</td>\n			<td colspan="1" rowspan="1">\n				Attempt to dispose jpeg reader form another thread may cause crash</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6944981">6944981</a></td>\n			<td colspan="1" rowspan="1">\n				java_deployment</td>\n			<td colspan="1" rowspan="1">\n				general</td>\n			<td colspan="1" rowspan="1">\n				Name field missing in mix code security warning dialog for Java Webstart application</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6869937">6869937</a></td>\n			<td colspan="1" rowspan="1">\n				java_plugin</td>\n			<td colspan="1" rowspan="1">\n				plugin2</td>\n			<td colspan="1" rowspan="1">\n				New Plugin - Vista&amp;XP Focus never returned to browser</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6846148">6846148</a></td>\n			<td colspan="1" rowspan="1">\n				jaxb-xsd</td>\n			<td colspan="1" rowspan="1">\n				runtime</td>\n			<td colspan="1" rowspan="1">\n				Namespace gets lost for null scope while using RetQName</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6946312">6946312</a></td>\n			<td colspan="1" rowspan="1">\n				jaxp</td>\n			<td colspan="1" rowspan="1">\n				sax</td>\n			<td colspan="1" rowspan="1">\n				XML parser omits characters callback to ContentHandler since 6u18</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6957378">6957378</a></td>\n			<td colspan="1" rowspan="1">\n				jmx</td>\n			<td colspan="1" rowspan="1">\n				classes</td>\n			<td colspan="1" rowspan="1">\n				JMX memory leak</td>\n		</tr>\n	</tbody>\n</table>', '此版本是目前JDK 6的最新版本，修复了不少BUG。此版本的内部版本号是1.6.0_22-b04（这里的b指Build，而不是Beta），外部版本号是6u22。', 1287331200000, '1.6.0_22', 'Oracle', '', 'Oracle', '', 'Windows版本-http://story.ajava.org/java/jdk-6u22-windows-i586.exe\nLinux版本-http://story.ajava.org/java/jdk-6u22-linux-i586.bin', '76M-80M', '所有系统', 'CPL', '中文', 1287388637309, 1287388637309, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b9e98bc012bbeade23f0096', '000000002b9e98bc012bbe4f60bf0090', 'JDK 5.0 Update 22 下载', '最后的JDK 5 版本', NULL, '<p>\n	此版本是目前JDK 5的最新版本，修复了不少BUG。此版本的内部版本号是1.5.0_22-b03（这里的b指Build，而不是Beta），外部版本号是5.0u22。JDK 5于2009年11月3日到达End of Service Life (EOSL)，即不再提供任何更新版本和技术支持。针对Java的商业用户，JDK 5还将继续提供版本更新，但对我们一般的免费用户来说是下载不到那些版本的。</p>\n<table border="1" cellpadding="5" cellspacing="0" summary="vulnerability bug fixes in update release 5u20">\n	<thead>\n		<tr>\n			<th colspan="1" rowspan="1">\n				BugId</th>\n			<th colspan="1" rowspan="1">\n				Category</th>\n			<th colspan="1" rowspan="1">\n				Subcategory</th>\n			<th colspan="1" rowspan="1">\n				Description</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6631533">6631533</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_2d</td>\n			<td colspan="1" rowspan="1">\n				ICC_Profile allows detecting if some files exist</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6815780">6815780</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_2d</td>\n			<td colspan="1" rowspan="1">\n				TrueType font parsing crash when stressing Sun Bug <a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6751322">6751322</a> test case</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6822057">6822057</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_2d</td>\n			<td colspan="1" rowspan="1">\n				X11 and Win32GraphicsDevice don&#39;t clone arrays returned from getConfigurations()</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6862969">6862969</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_2d</td>\n			<td colspan="1" rowspan="1">\n				JPEG JFIF Decoder issue</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6862970">6862970</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_2d</td>\n			<td colspan="1" rowspan="1">\n				Image Color Profile parsing issue</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6872357">6872357</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_2d</td>\n			<td colspan="1" rowspan="1">\n				JRE AWT setDifflCM vulnerable to Stack Overflow</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6872358">6872358</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_2d</td>\n			<td colspan="1" rowspan="1">\n				JRE AWT setBytePixels vulnerable to Heap Overflow</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6664512">6664512</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_awt</td>\n			<td colspan="1" rowspan="1">\n				Component and [Default]KeyboardFocusManager pass security sensitive objects to loggers</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6636650">6636650</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_lang</td>\n			<td colspan="1" rowspan="1">\n				(cl) Resurrected ClassLoaders can still have children</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6861062">6861062</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_security</td>\n			<td colspan="1" rowspan="1">\n				Disable MD2 in certificate chain validation</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6863503">6863503</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_security</td>\n			<td colspan="1" rowspan="1">\n				SECURITY: MessageDigest.isEqual introduces timing attack vulnerabilities</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6864911">6864911</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_security</td>\n			<td colspan="1" rowspan="1">\n				ASN.1/DER input stream parser needs more work</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6854303">6854303</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_sound</td>\n			<td colspan="1" rowspan="1">\n				Sun Java HsbParser.getSoundBank Stack Buffer Overflow Vulnerability</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6657026">6657026</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_swing</td>\n			<td colspan="1" rowspan="1">\n				Numerous static security flaws in Swing (findbugs)</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6657138">6657138</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_swing</td>\n			<td colspan="1" rowspan="1">\n				Mutable statics in Windows PL&amp;F (findbugs)</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6824265">6824265</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_util_i18n</td>\n			<td colspan="1" rowspan="1">\n				(tz) TimeZone.getTimeZone allows probing local filesystem</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6632445">6632445</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				imageio</td>\n			<td colspan="1" rowspan="1">\n				DoS from parsing BMPs with UNC ICC links</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6862968">6862968</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				imageio</td>\n			<td colspan="1" rowspan="1">\n				JPEG Image Writer quantization problem</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6874643">6874643</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				imageio</td>\n			<td colspan="1" rowspan="1">\n				ImageI/O JPEG is vulnerable to Heap Overflow</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6869694">6869694</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				install</td>\n			<td colspan="1" rowspan="1">\n				java update malfunctioning</td>\n		</tr>\n	</tbody>\n	<thead>\n		<tr>\n			<th colspan="1" rowspan="1">\n				BugId</th>\n			<th colspan="1" rowspan="1">\n				Category</th>\n			<th colspan="1" rowspan="1">\n				Subcategory</th>\n			<th colspan="1" rowspan="1">\n				Description</th>\n		</tr>\n	</thead>\n	<tbody>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6876061">6876061</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_awt</td>\n			<td colspan="1" rowspan="1">\n				Following JCK5 test not working as exp-d on linux: awt-interactive-ComponentTests</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6860447">6860447</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_security</td>\n			<td colspan="1" rowspan="1">\n				Add GlobalSign R3 Root certificate to the JDK</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6872579">6872579</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_security</td>\n			<td colspan="1" rowspan="1">\n				Add SECOM Root CA 2 to JDK</td>\n		</tr>\n		<tr>\n			<td align="right" colspan="1" rowspan="1">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6880110">6880110</a></td>\n			<td colspan="1" rowspan="1">\n				java</td>\n			<td colspan="1" rowspan="1">\n				classes_util_i18n</td>\n			<td colspan="1" rowspan="1">\n				(tz) Support tzdata2009m</td>\n		</tr>\n	</tbody>\n</table>', '此版本是目前JDK 5的最新版本，也是最终的版本，修复了不少BUG。此版本的内部版本号是1.5.0_22-b03（这里的b指Build，而不是Beta），外部版本号是5.0u22。JDK 5于2009年11月3日到达End of Service Life (EOSL)，即不再提供任何更新版本和技术支持。针对Java的商业用户，JDK 5还将继续提供版本更新，但对我们一般的免费用户来说是下载不到那些版本的。', 1287331200000, '1.5.0_22', 'Oracle', '', 'Oracle', '', 'Windows版本-http://story.ajava.org/java/jdk-1_5_0_22-windows-i586-p.exe\nLinux版本-http://story.ajava.org/java/jdk-1_5_0_22-linux-i586.bin', '47M-53M', '所有系统', 'CPL', '中文', 1287394288191, 1287394402732, 'admin'),
('000000002b9e98bc012bbeb5b722009e', '000000002b9e98bc012bbe4f60bf0090', 'JDK 1.4 Update 19', '最后的JDK 1.4 版本', NULL, '<p>\n	此版本是目前JDK 1.4的最新版本，也是最终的版本，修复了不少BUG。此版本的内部版本号是1.4.2_19-b04（这里的b指Build，而不是Beta），外部版本号是1.4.2_19。JDK 1.4于2008年10月30日到达End of Service Life (EOSL)，即不再提供任何更新版本和技术支持。针对Java的商业用户，JDK 1.4还将继续提供版本更新，但对我们一般的免费用户来说是下载不到那些版本的。</p>\n<table border="1" cellpadding="5" cellspacing="0" summary="changes in update release 6u1">\n	<thead>\n	</thead>\n	<tbody>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6321689">6321689</a></td>\n			<td>\n				hotspot</td>\n			<td>\n				compiler2</td>\n			<td>\n				Ideal_DU_postCCP not conservative enough</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6606675">6606675</a></td>\n			<td>\n				hotspot</td>\n			<td>\n				compiler2</td>\n			<td>\n				Crash in CodeBuffer resize in 1.4.2_15</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6654460">6654460</a></td>\n			<td>\n				hotspot</td>\n			<td>\n				compiler2</td>\n			<td>\n				[1.4.2] : 2 possible problems in shift operation in compiler2 (RHEL, IA64)</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6659551">6659551</a></td>\n			<td>\n				hotspot</td>\n			<td>\n				compiler2</td>\n			<td>\n				bug fix of <a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6258466">6258466</a> leftover unchecked path for NULL</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6435198">6435198</a></td>\n			<td>\n				idl</td>\n			<td>\n				orb</td>\n			<td>\n				SUN ORB&#39;s connection table cleanup code cleans up &quot;in use&quot;</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6446990">6446990</a></td>\n			<td>\n				java</td>\n			<td>\n				classes_net</td>\n			<td>\n				HttpURLConnection#available() reads more and more data into memory</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6589801">6589801</a></td>\n			<td>\n				java</td>\n			<td>\n				classes_net</td>\n			<td>\n				(rb) Can&#39;t find resource for a key from resource bundle.</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6448457">6448457</a></td>\n			<td>\n				java</td>\n			<td>\n				classes_nio</td>\n			<td>\n				(ch) Channels.newOutputStream().write() does not write all data</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6754779">6754779</a></td>\n			<td>\n				java</td>\n			<td>\n				classes_security</td>\n			<td>\n				Add Camerfirma root certificates to the JDK</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6768559">6768559</a></td>\n			<td>\n				java</td>\n			<td>\n				classes_security</td>\n			<td>\n				Add t-systems root CA certificate (Deutsche Telekom Root CA 2) to the JRE</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6645292">6645292</a></td>\n			<td>\n				java</td>\n			<td>\n				classes_text</td>\n			<td>\n				[Fmt-Da] Timezone Western Summer Time (Australia) is parsed incorrectly</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6764308">6764308</a></td>\n			<td>\n				java</td>\n			<td>\n				classes_util_i18n</td>\n			<td>\n				(tz) Support tzdata2008i</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6623981">6623981</a></td>\n			<td>\n				java</td>\n			<td>\n				compiler</td>\n			<td>\n				javac StackOverFlowError in 1.4.1/1.4.2</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4827358">4827358</a></td>\n			<td>\n				java</td>\n			<td>\n				imageio</td>\n			<td>\n				Use of finalization in JPEGImageReader/Writer degrades performance</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4867874">4867874</a></td>\n			<td>\n				java</td>\n			<td>\n				imageio</td>\n			<td>\n				JPEGImageReader.reset() very slow, calls System.gc()</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4868479">4868479</a></td>\n			<td>\n				java</td>\n			<td>\n				imageio</td>\n			<td>\n				Reusing JPEGImageReader to read multiple JPEG images leaks memory</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6746185">6746185</a></td>\n			<td>\n				javawebstart</td>\n			<td>\n				other</td>\n			<td>\n				Malformed URL Exception: JWS regression introduced in 1.5.0_16</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6358629">6358629</a></td>\n			<td>\n				jsse</td>\n			<td>\n				runtime</td>\n			<td>\n				SSLSocket.close() and SSLSocket.read() deadlock</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6447412">6447412</a></td>\n			<td>\n				jsse</td>\n			<td>\n				runtime</td>\n			<td>\n				Issue with socket.close() for ssl sockets when poweroff on other system</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6614957">6614957</a></td>\n			<td>\n				jsse</td>\n			<td>\n				runtime</td>\n			<td>\n				HttpsURLConnection not using the set SSLSocketFactory for creating all its Sockets</td>\n		</tr>\n		<tr>\n			<td align="right">\n				<a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6618387">6618387</a></td>\n			<td>\n				jsse</td>\n			<td>\n				runtime</td>\n			<td>\n				SSL client sessions do not close cleanly. A TCP reset occurs instead of a close_notify alert.</td>\n		</tr>\n	</tbody>\n</table>', '此版本是目前JDK 1.4的最新版本，也是最终的版本，修复了不少BUG。此版本的内部版本号是1.4.2_19-b04（这里的b指Build，而不是Beta），外部版本号是1.4.2_19。JDK 1.4于2008年10月30日到达End of Service Life (EOSL)，即不再提供任何更新版本和技术支持。针对Java的商业用户，JDK 1.4还将继续提供版本更新，但对我们一般的免费用户来说是下载不到那些版本的。', 1287331200000, '1.4.2_19', 'Oracle', '', 'Oracle', '', 'Windows版本-http://story.ajava.org/java/j2sdk-1_4_2_19-windows-i586-p.exe\nLinux版本-http://story.ajava.org/java/j2sdk-1_4_2_19-linux-i586.bin', '35M-49M', '所有系统', 'CPL', '中文', 1287394801442, 1287394801442, 'admin'),
('000000002b9e98bc012bbf3827f000a4', '000000002b9e98bc012bbe4f60bf0090', 'JDK 5.0 中文API 下载', 'java 5.0 中文api，chm和html格式', NULL, '<p>\n	JDK 5.0 中文API (Java 5.0 中文API)文档，是由Sun公司官方翻译的，是学习和使用java语言中最经常使用的参考资料之一。此文档包含了Java SE 5.0中的所有类和接口，总共3279个。本站提供CHM格式和HTML格式打包下载。CHM格式非常方便查找，而HTML格式则可以与Eclipse或MyEclipse相结合，方便在编写代码时通过编辑器直接查看方法的中文描述，建议大家两种格式都下载。同时，本站提供<a href="http://story.ajava.org/java/jdk-5.0-api-zh/">JDK 5.0 中文API的在线浏览</a>服务，方便大家迅速查看文档，而不必等待下载。</p>\n<p style="text-align: center;">\n	<br />\n	<img alt="" src="/upload/2010-10/jdk-5.0-api-zh.jpg" /></p>\n', 'JDK 5.0 中文API (Java 5.0 中文API)文档，是由Sun公司官方翻译的，是学习和使用java语言中最经常使用的参考资料之一。此文档包含了Java SE 5.0中的所有类和接口，总共3279个。本站提供CHM格式和HTML格式打包下载。CHM格式非常方便查找，而HTML格式则可以与Eclipse或MyEclipse相结合，方便在编写代码时通过编辑器直接查看方法的中文描述，建议大家两种格式都下载。同时，本站提供JDK 5.0 中文API的在线浏览服务，方便大家迅速查看文档，而不必等待下载。', 1287331200000, '5.0', 'Oracle', '', 'Oracle', '', 'CHM格式下载-http://story.ajava.org/java/jdk-5.0-api-zh-chm.zip\nHTML格式下载-http://story.ajava.org/java/jdk-5.0-api-zh-html.zip', '26M-30M', '所有系统', 'CPL', '中文', 1287403350001, 1287459978935, 'admin'),
('000000002b9e98bc012bbf3b058000a8', '000000002b9e98bc012bbe4f60bf0090', 'JDK 6.0 中文API 下载', 'java 6.0 中文api，chm和html格式', NULL, '<p>\n	JDK 6.0 中文API (Java 6.0 中文API)文档，是由Sun公司官方翻译的，是学习和使用java语言中最经常使用的参考资料之一。此文档包含了Java SE 6.0中的所有类和接口，总共3777个。本站提供CHM格式和HTML格式打包下载。CHM格式非常方便查找，而HTML格式则可以与Eclipse或 MyEclipse相结合，方便在编写代码时通过编辑器直接查看方法的中文描述，建议大家两种格式都下载。同时，本站提供<a href="http://story.ajava.org/java/jdk-6.0-api-zh/">JDK 6.0 中文API的在线浏览</a>服务，方便大家迅速查看文档，而不必等待下载。</p>\n<p style="text-align: center;">\n	<img alt="" src="/upload/2010-10/jdk-6.0-api-zh.jpg" /></p>\n', 'JDK 6.0 中文API (Java 6.0 中文API)文档，是由Sun公司官方翻译的，是学习和使用java语言中最经常使用的参考资料之一。此文档包含了Java SE 6.0中的所有类和接口，总共3777个。本站提供CHM格式和HTML格式打包下载。CHM格式非常方便查找，而HTML格式则可以与Eclipse或 MyEclipse相结合，方便在编写代码时通过编辑器直接查看方法的中文描述，建议大家两种格式都下载。同时，本站提供JDK 6.0 中文API的在线浏览服务，方便大家迅速查看文档，而不必等待下载。', 1287331200000, '6.0', 'Oracle', '', 'Oracle', '', 'CHM格式下载-http://story.ajava.org/java/jdk-6.0-api-zh-chm.zip\nHTML格式下载-http://story.ajava.org/java/jdk-6.0-api-zh-html.zip', '34M-35M', '所有系统', 'CPL', '中文', 1287403537792, 1287460025376, 'admin'),
('000000002b9e98bc012bbf41b62a00ac', '000000002b9e98bc012bbe4eb6e9008f', 'JDK 5.0 在线中文API', '在线浏览java api', NULL, '<p>\n	JDK 5.0 中文API (Java 5.0 中文API)文档，是由Sun公司官方翻译的，是学习和使用java语言中最经常使用的参考资料之一。本站提供JDK 5.0 中文API的在线浏览服务，方便大家迅速查看文档，而不必等待下载。</p>\n<p>\n	打开<a href="http://story.ajava.org/java/jdk-5.0-api-zh/">JDK 5.0 在线中文API</a></p>\n', 'JDK 5.0 中文API (Java 5.0 中文API)文档，是由Sun公司官方翻译的，是学习和使用java语言中最经常使用的参考资料之一。本站提供JDK 5.0 中文API的在线浏览服务，方便大家迅速查看文档，而不必等待下载。', 1287331200000, '5.0', 'Oracle', '', 'Oracle', '', '', '', '所有系统', 'CPL', '中文', 1287403976234, 1287403976234, 'admin'),
('000000002b9e98bc012bbf4346e700b0', '000000002b9e98bc012bbe4eb6e9008f', 'JDK 6.0 在线中文API', '在线浏览java api', NULL, '<p>\n	JDK 6.0 中文API (Java 6.0 中文API)文档，是由Sun公司官方翻译的，是学习和使用java语言中最经常使用的参考资料之一。本站提供JDK 6.0 中文API的在线浏览服务，方便大家迅速查看文档，而不必等待下载。</p>\n<p>\n	打开<a href="http://story.ajava.org/java/jdk-6.0-api-zh/">JDK 6.0 在线中文API</a></p>\n', 'JDK 6.0 中文API (Java 6.0 中文API)文档，是由Sun公司官方翻译的，是学习和使用java语言中最经常使用的参考资料之一。本站提供JDK 6.0 中文API的在线浏览服务，方便大家迅速查看文档，而不必等待下载。', 1287331200000, '6.0', 'Oracle', '', 'Oracle', '', '', '', '所有系统', 'CPL', '中文', 1287404078823, 1287404078823, 'admin'),
('000000002b9e98bc012bceefd2f900ba', '000000002b9e98bc012bbe4f60bf0090', '《Java编程思想》第一版 CHM下载', 'Java程序员必备的宝典', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://img33.ddimg.cn/50/2/436343-1_e.jpg" style="width: 500px; height: 500px;" /></p>\n<p>\n	本书为中文第一版。《Java 编程思想》已经成为广大Java程序员和爱好者手中必备的宝典，它在读者心目中的地位已经无法替代，其作者Bruce Eckel也已经成为众多Java程序员顶礼膜拜的大师。</p>\n<p>\n	本书指导读者利用JAVA语言进行面向对象的程序设计，详细介绍了JAVA的基本语法及它的高级特性（网络编程、高级面向对象能力、多线程），系统地讲述了JAVA的高级理论，形象地阐述了面向对象基本理论。书中包括320个有用的JAVA程序，15000余行代码，这些短小精悍的程序示例有助于读者理解含义模糊的概念。</p>\n', '本书指导读者利用JAVA语言进行面向对象的程序设计，详细介绍了JAVA的基本语法及它的高级特性（网络编程、高级面向对象能力、多线程），系统地讲述了JAVA的高级理论，形象地阐述了面向对象基本理论。书中包括320个有用的JAVA程序，15000余行代码，这些短小精悍的程序示例有助于读者理解含义模糊的概念。', 1287590400000, '1.0', 'Bruce Eckel', '', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/thinking-in-java-zh-chm.zip', '673K', '所有系统', 'CC3', '中文', 1287667045113, 1287667045113, 'admin'),
('000000002b9e98bc012bcef6a7bb00be', '000000002b9e98bc012bbe4f60bf0090', '《Java编程思想》第二版 PDF下载', 'Java程序员必备的宝典', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://ec4.images-amazon.com/images/I/51Ebi9ZfjIL._SS500_.jpg" style="width: 500px; height: 500px;" /></p>\n<p>\n	本书的内容组织、讲授方法、选用示例和附带练习都别具特色。作者根据多年教学实践中发现的问题，通过简练的示例和叙述，阐明了在学习Java中特别容易混 淆的诸多概念。与前一版相比，本书不但新增了Java2的语言特性，还根据语言的演变作出了彻底的更新，其中最主要的改变是第9章的群集。 本书被多家权威机构评为最佳Java书籍，适合作为各个层次的Java程序员阅读，也可以作为高等院校面向对象程序设计语言及Java语言的教材。</p>\n', '本书的内容组织、讲授方法、选用示例和附带练习都别具特色。作者根据多年教学实践中发现的问题，通过简练的示例和叙述，阐明了在学习Java中特别容易混淆的诸多概念。与前一版相比，本书不但新增了Java2的语言特性，还根据语言的演变作出了彻底的更新，其中最主要的改变是第9章的群集。 本书被多家权威机构评为最佳Java书籍，适合作为各个层次的Java程序员阅读，也可以作为高等院校面向对象程序设计语言及Java语言的教材。', 1287590400000, '1.0', 'Bruce Eckel', '侯捷', '机械工业出版社', '', '侯捷版本[繁]-http://story.ajava.org/java/thinking-in-java-2nd-edition-zh-tw-pdf.zip\n智慧东方[简]-http://story.ajava.org/java/thinking-in-java-2nd-edition-zh-pdf.zip', '3M-4M', '所有系统', 'CC3', '中文', 1287667492795, 1287667492795, 'admin'),
('000000002b9e98bc012bcefa578100c2', '000000002b9e98bc012bbe4f60bf0090', '《Java编程思想》第三版 PDF下载', 'java经典之作', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook20001-25000/24614/shupi.jpg" style="width: 283px; height: 400px;" /></p>\n<p>\n	从本书获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书作者有多年的教学经验，对c、c++、java语言都有独到、深入的 理解。因此他非常了解如何教授java语言这门课程，也非常明白语言教学中的难点及人们的困惑。作者以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概 念，精心选取&ldquo;对读者理解java语言来说最为重要&rdquo;的部分编写成书。同时又在随书光盘中提供了大量参考材料&mdash;这也是本书绝对物超所值的地方。</p>\n<p>\n	随书光盘没有包含本书的源代码（可以从支持网站www.mindview.net免费下载），而是提供了大量作者讲授的讨论课内容及本书的前2版内容。</p>\n<p>\n	本书内容丰富&mdash;从java的基础语法到最高级特性，适合各层次的java程序员阅读，同时也是高等院校讲授面向对象程序设计语言及java语言的绝佳教材。</p>\n', '从本书获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书作者有多年的教学经验，对c、c++、java语言都有独到、深入的理解。因此他非常了解如何教授java语言这门课程，也非常明白语言教学中的难点及人们的困惑。作者以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念，精心选取“对读者理解java语言来说最为重要”的部分编写成书。同时又在随书光盘中提供了大量参考材料—这也是本书绝对物超所值的地方。', 1287590400000, '1.0', 'bruce eckel', '陈昊鹏 饶若楠', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/thinking-in-java-3rd-edition-zh-pdf.zip', '4M', '所有系统', 'CC3', '中文', 1287667734401, 1287667734401, 'admin'),
('000000002b9e98bc012bcf100c9700c6', '000000002b9e98bc012bbe4f60bf0090', '《Java编程思想》第四版 PDF下载', '全球程序员必备图书', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook30001-35000/34838/shupi.jpg" style="width: 390px; height: 550px;" /></p>\n<p>\n	本书赢得了全球程序员的广泛赞誉，即使是最晦涩的概念，在bruce eckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从java的基础语法到最高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。</p>\n<p>\n	从本书获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对c、c++以及java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、java i/o系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了java语言基础语法以及高级特性，适合各个层次的java程序员阅读，同时也是高等院校讲授面向对象程序设计语言以及java语言的绝佳教材和参考书。</p>\n<p>\n	本书带有PDF书签，方便查看。全书共880页，文件较大，请选择下载。</p>\n', '本书赢得了全球程序员的广泛赞誉，即使是最晦涩的概念，在bruce eckel的文字亲和力和小而直接的编程示例面前也会化解于无形。从java的基础语法到最高级特性（深入的面向对象概念、多线程、自动项目构建、单元测试和调试等），本书都能逐步指导你轻松掌握。\n从本书获得的各项大奖以及来自世界各地的读者评论中，不难看出这是一本经典之作。本书的作者拥有多年教学经验，对c、c++以及java语言都有独到、深入的见解，以通俗易懂及小而直接的示例解释了一个个晦涩抽象的概念。本书共22章，包括操作符、控制执行流程、访问权限控制、复用类、多态、接口、通过异常处理错误、字符串、泛型、数组、容器深入研究、java i/o系统、枚举类型、并发以及图形化用户界面等内容。这些丰富的内容，包含了java语言基础语法以及高级特性，适合各个层次的java程序员阅读，同时也是高等院校讲授面向对象程序设计语言以及java语言的绝佳教材和参考书。', 1287590400000, '1.0', 'Bruce Eckel', '陈昊鹏', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/thinking-in-java-4th-edition-zh-pdf.zip', '85M', '所有系统', 'CC3', '中文', 1287669157015, 1287669157015, 'admin'),
('000000002b9e98bc012bde0ca19b00ca', '000000002b9e98bc012bbe4f60bf0090', '《Java参考大全》第五版 PDF下载', 'Java语言及其核心库的完全参考指南', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://ec4.images-amazon.com/images/I/51W61gbD%2BQL._SS500_.jpg" style="width: 500px; height: 500px;" /></p>\n<p>\n	《Java参考大全》(J2SE 5 EDITION)为你全面阐释JAVA语言和核心库，涵盖所有新特性，如泛型、自动装箱、枚举、变长参数、元数据等，全书包含几百个示例和样例应用程序，信息量丰富，代码清晰、简洁、干净利索，是程序员的最佳选择！《Java参考大全》(J2SE 5 EDITION)是世界级程序设计大师Herbert Schildt的作品，全面介绍了Java语言、Java标准库和Java开发环境。全书从Java语言的基础知识入手，内容涵盖了J2SE 5中的新增特性，如泛型、自动装箱、枚举、元数据、并发类库等。《Java参考大全》(J2SE 5 EDITION)共分为4个部分，第1部分介绍Java语言，第2部分讨论标准Java库，第3部分探讨Java开发环境，第4部分是Java的开发实例，各部分前后衔接，联系紧密。</p>\n', '《Java参考大全》(J2SE 5 EDITION)为你全面阐释JAVA语言和核心库，涵盖所有新特性，如泛型、自动装箱、枚举、变长参数、元数据等，全书包含几百个示例和样例应用程序，信息量丰富，代码清晰、简洁、干净利索，是程序员的最佳选择！《Java参考大全》(J2SE 5 EDITION)是世界级程序设计大师Herbert Schildt的作品，全面介绍了Java语言、Java标准库和Java开发环境。全书从Java语言的基础知识入手，内容涵盖了J2SE 5中的新增特性，如泛型、自动装箱、枚举、元数据、并发类库等。《Java参考大全》(J2SE 5 EDITION)共分为4个部分，第1部分介绍Java语言，第2部分讨论标准Java库，第3部分探讨Java开发环境，第4部分是Java的开发实例，各部分前后衔接，联系紧密。 ', 1287849600000, '1.0', 'herbert schildt', '清华大学出版社', '清华大学出版社', '', '本站下载-http://story.ajava.org/java/java-reference-5-edition.zh-pdf.zip', '64M', '所有系统', 'CC3', '中文', 1287920591259, 1287920591259, 'admin'),
('000000002b9e98bc012bde22dd0600ce', '000000002b9e98bc012bbe4f60bf0090', '《Effective Java中文版》PDF下载', '简明扼要地阐述Java精髓', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://ec4.images-amazon.com/images/I/51ju8FS4jqL._SS500_.jpg" style="width: 500px; height: 500px;" /></p>\n<p>\n	《Effective Java中文版》介绍了在Java编程中57条极具实用价值的经验规则，这些经验规则涵盖了大多数开发人员每天所面临的问题的解决方案。通过对Java平 台设计专家所使用的技术的全面描述，揭示了应该做什么，不应该做什么才能产生清晰、健壮的高效的代码。 《Effective Java中文版》中的每条规则都以简短、独立的小文章形式出现，这些小文章包含了详细而精确的建议，以及对语言中许多细微之处的深入分析，并通过例子代码 加以进一步说明。贯穿全书的是通用的语言用法的设计模式，以及一些具有启发意义的技巧的技术。</p>\n<p>\n	注：本书为侯捷翻译的繁体版，目前互联网上找不到相应的简体版PDF纯文本。</p>\n', '《Effective Java中文版》介绍了在Java编程中57条极具实用价值的经验规则，这些经验规则涵盖了大多数开发人员每天所面临的问题的解决方案。通过对Java平台设计专家所使用的技术的全面描述，揭示了应该做什么，不应该做什么才能产生清晰、健壮的高效的代码。 《Effective Java中文版》中的每条规则都以简短、独立的小文章形式出现，这些小文章包含了详细而精确的建议，以及对语言中许多细微之处的深入分析，并通过例子代码加以进一步说明。贯穿全书的是通用的语言用法的设计模式，以及一些具有启发意义的技巧的技术。', 1287849600000, '1.0', 'Joshua Bloch', '侯捷', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/effective-java-zh-tw-pdf.zip', '1M', '所有系统', 'CC3', '中文', 1287922048262, 1287922249825, 'admin'),
('000000002b9e98bc012bde3e5cdc00d6', '000000002b9e98bc012bbe4f60bf0090', '《Java深度历险》PDF下载', 'java怀旧之作', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook/8358/shupi.jpg" style="width: 326px; height: 400px;" /></p>\n<p>\n	7年来，Java已发展得非常成熟，市面上有太多介绍Java程序语言与Java各种应用的好书。Java在企业端（Enterprise）与嵌入式系统 （Embedded System，手机与PDA等）上扮演举足轻重的角色。而这些出色的应用，都是因为架色在一个稳定的根基&mdash;&mdash;Java 2 SDK（Software Dovelopment Kit）之上。然而时至今日，并没有任何一本书详细地解释Java 2 SDK以及JRE(Java Runtime Environment)如何相互配合，让Java程序畅行无阻；也没有一本书解释Java编译器在编译Java程序时的细节；更没有一本书告诉您 Java程序如何与其它系统技术做整合。但这些知识能够让您将Java技术发挥得淋漓尽致。</p>\n', '7年来，Java已发展得非常成熟，市面上有太多介绍Java程序语言与Java各种应用的好书。Java在企业端（Enterprise）与嵌入式系统（Embedded System，手机与PDA等）上扮演举足轻重的角色。而这些出色的应用，都是因为架色在一个稳定的根基——Java 2 SDK（Software Dovelopment Kit）之上。然而时至今日，并没有任何一本书详细地解释Java 2 SDK以及JRE(Java Runtime Environment)如何相互配合，让Java程序畅行无阻；也没有一本书解释Java编译器在编译Java程序时的细节；更没有一本书告诉您 Java程序如何与其它系统技术做整合。但这些知识能够让您将Java技术发挥得淋漓尽致。 ', 1287849600000, '1.0', '王森', '', '华中科技大学出版社', '', '本站下载-http://story.ajava.org/java/java-depth-danger-zh-tw-pdf.zip', '5M', '所有系统', 'CC3', '中文', 1287923850460, 1287923886006, 'admin'),
('000000002b9e98bc012be841dbe100dc', '000000002b9e98bc012bbe4f60bf0090', '《Java核心技术,卷1(原书第8版)》PDF 下载', '介绍java基础知识', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook205001-210000/208978/shupi.jpg" style="width: 426px; height: 550px;" /></p>\n<p>\n	《Java核心技术》自第1版出版以来，一直备受广大Java程序设计人员的青睐，是一本畅销不衰的Java经典书籍。本书的两位作者Cay S.Horstmann和Gary Cornell都具有编写程序设计方面书籍的丰富经验。</p>\n<p>\n	众所周知，Java程序设计语言仍处于不断完善和发展的活跃时期，为了能够及时地跟上Java 的前进步伐，在短短的10余年间，本书已经修订了7次，第8版同样是为了适应Java的最新特性而重新修订的。新版主要增加了对Java标准版（Java SE 6）特性的全面介绍，并对第7版中两卷的内容安排做了部分调整。即将第7版第Ⅰ卷中的&ldquo;流与文件&rdquo;调到第Ⅱ卷中，将第7版第Ⅱ卷中的&ldquo;集合&rdquo;与&ldquo;多线程&rdquo; 调到第Ⅰ卷中。</p>\n<p>\n	我们诚心地向您推荐这本书籍。它囊括了Java 2平台、标准版（J2SE）的全部基础知识。作为一本精练的技术指南和可信赖的参考书籍，其中提供了大量的应用实例，用来说明Java的重要语言规则和库功能，而且，这些示例程序都是完整且具有实际意义的。最重要的是：所有程序都已经被升级为Java SE 6，它们将成为独自编写Java程序的良好开端。</p>\n', '《Java核心技术》自第1版出版以来，一直备受广大Java程序设计人员的青睐，是一本畅销不衰的Java经典书籍。本书的两位作者Cay S.Horstmann和Gary Cornell都具有编写程序设计方面书籍的丰富经验。\n众所周知，Java程序设计语言仍处于不断完善和发展的活跃时期，为了能够及时地跟上Java 的前进步伐，在短短的10余年间，本书已经修订了7次，第8版同样是为了适应Java的最新特性而重新修订的。新版主要增加了对Java标准版（Java SE 6）特性的全面介绍，并对第7版中两卷的内容安排做了部分调整。即将第7版第Ⅰ卷中的“流与文件”调到第Ⅱ卷中，将第7版第Ⅱ卷中的“集合”与“多线程” 调到第Ⅰ卷中。\n我们诚心地向您推荐这本书籍。它囊括了Java 2平台、标准版（J2SE）的全部基础知识。作为一本精练的技术指南和可信赖的参考书籍，其中提供了大量的应用实例，用来说明Java的重要语言规则和库功能，而且，这些示例程序都是完整且具有实际意义的。最重要的是：所有程序都已经被升级为Java SE 6，它们将成为独自编写Java程序的良好开端。 ', 1288022400000, '1.0', 'Cay S. Horstmann   Gary Cornell  ', '叶乃文 邝劲筠 杜永萍', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/java-core-volume-i-8th-edition-zh-pdf.zip', '62M', '所有系统', 'CC3', '中文', 1288091851745, 1288092128536, 'admin'),
('000000002b9e98bc012be84562b700e0', '000000002b9e98bc012bbe4f60bf0090', '《Java核心技术,卷2(原书第8版)》PDF 下载', '介绍java高级特性', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook505001-510000/508881/shupi.jpg" style="width: 423px; height: 550px;" /></p>\n<p>\n	《Java核心技术》的第8版又推出了，它已经在广大Java程序员和爱好者们当中产生了巨大的影响力。该书覆盖面广，几乎囊括了Java 2标准版的所有方面。其以接近实战的实例来展开内容的书写方式更是容易让读者理解和接受Java的精髓。</p>\n<p>\n	Java已经受到越来越多的程序员的青睐，但是Java语言包罗万象，而且其自身发展的速度更是惊人，我们在Sun的网站上几乎每个月都会看到有新的基于 Java的规范出台。JDK 6.0使得Java又呈现出了新的面貌，其新添加的特性更好地能够应对Java在构建企业应用时所需要面对的挑战。因此，《Java核心技术》第8版在第 7版的基础上，对JDK 6.0中的新特性进行了重点介绍，对原有部分章节进行了更新和调整，删除了一些过时的内容，并新增加了一些章节，而且对第7版的很多示例程序进行了调整，以此来使得程序员们能够更加透彻地理解和熟练地掌握这些新特性。</p>\n<p>\n	卷Ⅱ面向的是已经熟读并掌握了卷Ⅰ内容的读者，或者是已经对Java语言的基本特性相当熟悉的读者。卷Ⅱ的内容包含了流与文件、XML、网络、数据库编程、国际化、高级Swing、高级AWT、JavaBeans、安全、分布式对象、脚本编写、编译与注解处理，以及本地方法等内容，把读者引入了Java 世界的更深处。</p>\n', '《Java核心技术》的第8版又推出了，它已经在广大Java程序员和爱好者们当中产生了巨大的影响力。该书覆盖面广，几乎囊括了Java 2标准版的所有方面。其以接近实战的实例来展开内容的书写方式更是容易让读者理解和接受Java的精髓。\nJava已经受到越来越多的程序员的青睐，但是Java语言包罗万象，而且其自身发展的速度更是惊人，我们在Sun的网站上几乎每个月都会看到有新的基于 Java的规范出台。JDK 6.0使得Java又呈现出了新的面貌，其新添加的特性更好地能够应对Java在构建企业应用时所需要面对的挑战。因此，《Java核心技术》第8版在第 7版的基础上，对JDK 6.0中的新特性进行了重点介绍，对原有部分章节进行了更新和调整，删除了一些过时的内容，并新增加了一些章节，而且对第7版的很多示例程序进行了调整，以此来使得程序员们能够更加透彻地理解和熟练地掌握这些新特性。\n卷Ⅱ面向的是已经熟读并掌握了卷Ⅰ内容的读者，或者是已经对Java语言的基本特性相当熟悉的读者。卷Ⅱ的内容包含了流与文件、XML、网络、数据库编程、国际化、高级Swing、高级AWT、JavaBeans、安全、分布式对象、脚本编写、编译与注解处理，以及本地方法等内容，把读者引入了Java 世界的更深处。', 1288022400000, '1.0', 'Cay S. Horstmann Gary Cornell ', '陈昊鹏 王浩 姚建平', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/java-core-volume-ii-8th-edition-zh-pdf.zip', '54M', '所有系统', 'CC3', '中文', 1288092082871, 1288092082871, 'admin'),
('000000002b9e98bc012be85b8b5800e6', '000000002b9e98bc012bbe4f60bf0090', '《Java数据结构和算法（第二版）》PDF下载', '国外经典教材', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook15001-20000/16701/shupi.jpg" style="width: 315px; height: 400px;" /></p>\n<p>\n	本书可帮助读者：通过由基于java的演示所组成的可视专题讨论来掌握数据结构和算法；学会如何为常见和不太常见的编程条件选择正确的算法；利用数据结构和算法为现实世界的处理过程建模；了解不同的数据结构的优势和弱点，考虑如何利用它们改进编程的效率；学会如何用面向对象的编程简化数据结构和算法。</p>\n<p>\n	本书以一种易懂的方式教授如何安排和操纵数据的问题，其中不乏一些难题；了解这些知识以期使计算机的应用获得最好的表现。</p>\n<p>\n	不管使用何种语言或平台，掌握了数据结构和算法将改进程序的质量和性能。</p>\n<p>\n	书中提供了一套独创的可视讨论专题用以阐明主要的论题；它使用java语言说明重要的概念，而避免了c/c++语言的复杂性，以便集中精力论述数据结构和算法。</p>\n', '本书可帮助读者：通过由基于java的演示所组成的可视专题讨论来掌握数据结构和算法；学会如何为常见和不太常见的编程条件选择正确的算法；利用数据结构和算法为现实世界的处理过程建模；了解不同的数据结构的优势和弱点，考虑如何利用它们改进编程的效率；学会如何用面向对象的编程简化数据结构和算法。\n本书以一种易懂的方式教授如何安排和操纵数据的问题，其中不乏一些难题；了解这些知识以期使计算机的应用获得最好的表现。\n不管使用何种语言或平台，掌握了数据结构和算法将改进程序的质量和性能。\n书中提供了一套独创的可视讨论专题用以阐明主要的论题；它使用java语言说明重要的概念，而避免了c/c++语言的复杂性，以便集中精力论述数据结构和算法。 ', 1288022400000, '1.0', 'Robert Lafore', '计晓云 赵研 曾希 狄小菡', '中国电力出版社', '', '本站下载-http://story.ajava.org/java/data-structures-algorithms-in-java-2nd-edition-zh-pdf.zip', '24M', '所有系统', 'CC3', '中文', 1288093535064, 1288093535064, 'admin'),
('000000002b9e98bc012be887a1cc00eb', '000000002b9e98bc012bbe4f60bf0090', '《EJB 3.0实例教程》PDF下载', '入门教材', NULL, '<p style="text-align: center;">\n	<img alt="" src="/upload/2010-10/ejb3.0-examples-course.jpg" /></p>\n<p>\n	期待已久的EJB3.0 最终规范已经发布了。虽然 EJB3.0 最终规范出来了一段时间，但对EJB 3.0 的应用还停留在介绍之中，应实例更是少之又少，所以作者拟写本书，以简单的实例展现 EJB3.0 的开发过程,希望对大家有所帮助。</p>\n<p>\n	EJB3 最激动人心的是 POJO 编程模型,我想对开发人员的影响将是非常大的，因为他降低了开发人员编写EJB 的要求。EJB3 的bean类将更像常规的Java bean。不要求像过去那样实现特殊的回调界面或者扩展 EJB类。所以它将使EJB的开发更像常规的Java 开发。&nbsp;</p>\n<p>\n	作者对 EJB3.0 接触的时间很短，所以一些新的概念和知识理解也难免有误，有些概念和语义把握的不是很准，希望在这方面有经验和了解的朋友批评指正，欢迎多提意见。&nbsp;</p>\n<p>\n	因为JBOSS EJB3.0 产品常未成熟，本教程随着新产品的推出将有所改动，请密切关注！</p>', '期待已久的EJB3.0 最终规范已经发布了。虽然 EJB3.0 最终规范出来了一段时间，但对EJB 3.0 的应用还停留在介绍之中，应用实例更是少之又少，所以作者拟写本书，以简单的实例展现 EJB3.0 的开发过程,希望对大家有所帮助。  \nEJB3 最激动人心的是 POJO 编程模型,我想对开发人员的影响将是非常大的，因为他降低了开发人员编写EJB 的要求。EJB3 的bean类将更像常规的Java bean。不要求像过去那样实现特殊的回调界面或者扩展 EJB类。所以它将使EJB的开发更像常规的Java 开发。  \n作者对 EJB3.0 接触的时间很短，所以一些新的概念和知识理解也难免有误，有些概念和语义把握的不是很准，希望在这方面有经验和了解的朋友批评指正，欢迎多提意见。  \n因为JBOSS EJB3.0 产品常未成熟，本教程随着新产品的推出将有所改动，请密切关注！', 1288022400000, '1.0', '黎活明', '', 'AJava', '', '本站下载-http://story.ajava.org/java/ejb3.0-examples-course-zh-pdf.zip', '1M', '所有系统', 'CC3', '中文', 1288096424396, 1288096534190, 'admin');
INSERT INTO file (id, folder_id, title, vice_title, thumbnail, content, excerpt, release_date, version, author, translator, source, source_url, url, size, os, license, language, create_time, update_time, creater) VALUES
('000000002b9e98bc012be89222e400f3', '000000002b9e98bc012bbe4f60bf0090', '《Java程序设计大学教程 》PDF下载', '高校教材', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook25001-30000/29211/shupi.jpg" style="width: 280px; height: 400px;" /></p>\n<p>\n	本书以java语言为载体，通过讨论java程序设计的一般过程和方法，重点讲述程序设计基础、面向对象程序设计、算法与数据结构、gui程序设计和 web程序设计的知识，并涉及计算机科学基础、数据和控制、程序设计理论、软件工程等四大知识领域。本书同时详细分析了java作为通用程序设计语言的本质特征和语法规则，并以大量java程序实例演示说明有关应用程序的设计过程，介绍主流的程序设计思想方法，培养读者的代码编写能力。</p>\n<p>\n	本书内容深入浅出，覆盖面广，图文并茂，独具特色。全书采用案例教学法，既有丰富的理论知识，也有大量的实战范例，更提供了精心设计的课后练习。</p>\n<p>\n	本书是在多年教学基础上编写的，不但结合国内计算机教学改革的最新成果，还参照美国acm和ieee／cs最新开发的课程体系规范《computing curricula 2004》。本书适合作为计算机程序设计课程或java程序设计的基础教材，是高等院校计算机专业本科教学的首选用书，也可用作其他专业的计算机公共课基础教材。对于自学程序设计的计算机爱好者以及从事软件开发和应用的科技人员，本书也是一个极好的参考。</p>', '本书以java语言为载体，通过讨论java程序设计的一般过程和方法，重点讲述程序设计基础、面向对象程序设计、算法与数据结构、gui程序设计和 web程序设计的知识，并涉及计算机科学基础、数据和控制、程序设计理论、软件工程等四大知识领域。本书同时详细分析了java作为通用程序设计语言的本质特征和语法规则，并以大量java程序实例演示说明有关应用程序的设计过程，介绍主流的程序设计思想方法，培养读者的代码编写能力。', 1288022400000, '1.0', '刘艺', '', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/java-program-design-university-course-zh-pdf.zip', '5M', '所有系统', 'CC3', '中文', 1288097112804, 1288097145607, 'admin'),
('000000002b9e98bc012be8f8d5d600f9', '000000002b9e98bc012bbe4f60bf0090', '《J2EE开发全程实录》PDF下载', '开发注意点', NULL, '<p>\n	此书记录了笔者在开发过程中遇到的一些问题或知识点，完全从实际开发着手，而不是纸上谈兵，值得新手一读。</p>', '此书记录了笔者在开发过程中遇到的一些问题或知识点，完全从实际开发着手，而不是纸上谈兵，值得新手一读。', 1288022400000, '1.0', '杨中科', '', 'AJava', '', '本站下载-http://story.ajava.org/java/j2ee-develop-full-note-zh.zip', '686K', '所有系统', 'CC3', '中文', 1288103843286, 1288103843286, 'admin'),
('000000002b9e98bc012bf3165a7900ff', '000000002b9e98bc012bbe4f60bf0090', '《Java程序设计大学教程》PDF下载', '高校教材', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook25001-30000/29211/shupi.jpg" style="width: 280px; height: 400px;" /></p>\n<p>\n	本书以java语言为载体，通过讨论java程序设计的一般过程和方法，重点讲述程序设计基础、面向对象程序设计、算法与数据结构、gui程序设计和 web程序设计的知识，并涉及计算机科学基础、数据和控制、程序设计理论、软件工程等四大知识领域。本书同时详细分析了java作为通用程序设计语言的本质特征和语法规则，并以大量java程序实例演示说明有关应用程序的设计过程，介绍主流的程序设计思想方法，培养读者的代码编写能力。</p>\n<p>\n	本书内容深入浅出，覆盖面广，图文并茂，独具特色。全书采用案例教学法，既有丰富的理论知识，也有大量的实战范例，更提供了精心设计的课后练习。</p>\n<p>\n	本书是在多年教学基础上编写的，不但结合国内计算机教学改革的最新成果，还参照美国acm和ieee／cs最新开发的课程体系规范《computing curricula 2004》。本书适合作为计算机程序设计课程或java程序设计的基础教材，是高等院校计算机专业本科教学的首选用书，也可用作其他专业的计算机公共课基础教材。对于自学程序设计的计算机爱好者以及从事软件开发和应用的科技人员，本书也是一个极好的参考。</p>', '本书以java语言为载体，通过讨论java程序设计的一般过程和方法，重点讲述程序设计基础、面向对象程序设计、算法与数据结构、gui程序设计和 web程序设计的知识，并涉及计算机科学基础、数据和控制、程序设计理论、软件工程等四大知识领域。本书同时详细分析了java作为通用程序设计语言的本质特征和语法规则，并以大量java程序实例演示说明有关应用程序的设计过程，介绍主流的程序设计思想方法，培养读者的代码编写能力。\n本书内容深入浅出，覆盖面广，图文并茂，独具特色。全书采用案例教学法，既有丰富的理论知识，也有大量的实战范例，更提供了精心设计的课后练习。\n本书是在多年教学基础上编写的，不但结合国内计算机教学改革的最新成果，还参照美国acm和ieee／cs最新开发的课程体系规范《computing curricula 2004》。本书适合作为计算机程序设计课程或java程序设计的基础教材，是高等院校计算机专业本科教学的首选用书，也可用作其他专业的计算机公共课基础教材。对于自学程序设计的计算机爱好者以及从事软件开发和应用的科技人员，本书也是一个极好的参考。', 1288195200000, '1.0', '刘艺', '', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/java-programming-for-the-college-students-zh-pdf.zip', '5M', '所有系统', 'CC3', '中文', 1288273549945, 1288273549945, 'admin'),
('000000002b9e98bc012bf3198fb00103', '000000002b9e98bc012bbe4f60bf0090', '《Java 技术内幕》PDF下载', '深入讲解Java', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook/5112/shupi.jpg" style="width: 308px; height: 400px;" /></p>\n<p>\n	本书包含了数以百计的主题，深入讲解Java的基本概念和编程方法。主要内容包括：Java语法、面向对象编程、应用程序和事件处理、AWT技术、 Swing技术、I/O流和文件、集合、多线程编程和动画、异常处理和调试等。本书实例丰富、易于理解，每章都分为理论知识和即时解决方案两大部分，分主题讲解了Java的各个方面，易于查询，实用性强。附带光盘包含了书中实例代码和实用工具，方便读者使用。</p>\n<br />', '本书包含了数以百计的主题，深入讲解Java的基本概念和编程方法。主要内容包括：Java语法、面向对象编程、应用程序和事件处理、AWT技术、 Swing技术、I/O流和文件、集合、多线程编程和动画、异常处理和调试等。本书实例丰富、易于理解，每章都分为理论知识和即时解决方案两大部分，分主题讲解了Java的各个方面，易于查询，实用性强。附带光盘包含了书中实例代码和实用工具，方便读者使用。 ', 1288195200000, '1.0', 'Steven Holzner', '马朝晖', '机械工业出版社', '', '本站下载-http://story.ajava.org/java/java-black-book-zh-pdf.zip', '30M', '所有系统', 'CC3', '中文', 1288273760176, 1288273760176, 'admin'),
('000000002b9e98bc012bf31b8b420107', '000000002b9e98bc012bbe4f60bf0090', '《Java与模式》PDF下载', '学习模式的好书', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook/8182/shupi.jpg" style="width: 287px; height: 400px;" /></p>\n<p>\n	本书是一本讲解设计原则以及最为常见的设计模式的实用教材，目的是为工作繁忙的Java系统设计师提供一个快速而准确的设计原则和设计模式的辅导。本书分 为55章，每一个章节讲解一个编程模式，说明此模式的用意、结构，以及这一模式适合于什么样的情况等。每一个章节都附有多个例子和练习题，研习这些例子、 完成这些练习题可以帮助读者更好地理解所讲的内容。大多数的章节都是相对独立的，读者可以打开本书，从任何一章开始读起。为了满足不同程度的读者的需要， 本书提供了一些标为&ldquo;专题&rdquo;的章节，不阅读这些章节，对阅读本书的标准章节没有影响。读过本书之后，读者可以很有信信心地在自己的系统设计工作中使用学过 的内容，与同事交流面向对象的设计经验，并在事业发展上有更多的收获。</p>\n<p>\n	本书适合于Java程序员、架构设计师及设计模式爱好者，是一本实用的设计原则和设计模式的自学教材和使用手册。</p>\n', '本书是一本讲解设计原则以及最为常见的设计模式的实用教材，目的是为工作繁忙的Java系统设计师提供一个快速而准确的设计原则和设计模式的辅导。本书分为55章，每一个章节讲解一个编程模式，说明此模式的用意、结构，以及这一模式适合于什么样的情况等。每一个章节都附有多个例子和练习题，研习这些例子、完成这些练习题可以帮助读者更好地理解所讲的内容。大多数的章节都是相对独立的，读者可以打开本书，从任何一章开始读起。为了满足不同程度的读者的需要，本书提供了一些标为“专题”的章节，不阅读这些章节，对阅读本书的标准章节没有影响。读过本书之后，读者可以很有信信心地在自己的系统设计工作中使用学过的内容，与同事交流面向对象的设计经验，并在事业发展上有更多的收获。\n本书适合于Java程序员、架构设计师及设计模式爱好者，是一本实用的设计原则和设计模式的自学教材和使用手册。 ', 1288195200000, '1.0', '阎宏', '', '电子工业出版社 ', '', '本站下载-http://story.ajava.org/java/java-pattern-zh-pdf.zip', '38M', '所有系统', 'CC3', '中文', 1288273890114, 1288273890114, 'admin'),
('000000002b9e98bc012bf340d53d010b', '000000002b9e98bc012bbe4f60bf0090', '《数据结构与算法分析（Java版）》PDF下载', '高校教材', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook25001-30000/26187/shupi.jpg" style="width: 280px; height: 400px;" /></p>\n<p>\n	数据结构是计算机程序设计重要的理论技术基础，它不仅是计算机学科的核心课程，而且已经成为计算机相关专业必要的选修课。其要求是学会分析、研究计算机加 工的数据结构的特性，初步掌握算法的时间和空间分析技术，并能够编写出结构清晰、正确易读的算法，达到培养数据抽象能力的目的。学习数据结构可以使读者碰 到具体问题时，能够找到一个优化的存储结构和解决方法。本书利用目前流行的开发工具Java语言进行数据结构设计，包含了数据结构的全部内容，符合大学的 教学大纲，既可以作为大学数据结构课程的教材，又可以为程序设计者学习数据结构提供帮助。</p>\n<p>\n	本书以数据结构为主线，是在Java语言的基础之上编写的，希望读者在阅读本书之前，最好具备Java语言基础。这样，在学习数据结构时，能够比较容易地建立正确的数据结构中的存储和逻辑概念。</p>\n<p>\n	本书共分10章，第1章综述了数据结构中的基本概念；第2章主要描述了线性结构的存储与实现；筹备组3章描述了特殊的线性结构的存储及其实现；第4章着重 描述了数组的存储及数组的运算；第5章描述了层次结构的各种运算；第6章描述了网状结构的存储及实现算法：第7章介绍了各种排序的方法及算法比较；第8章 主要介绍了查找方法；第9章介绍了操作系统中涉及的动态存储管理的基本技术；第10章介绍了常用文件结构。本书的内容突出了抽象数据类型的概念，对每一种 数据结构都给出了相应的抽象数据类型的规范说明和实现。</p>\n', '数据结构是计算机程序设计重要的理论技术基础，它不仅是计算机学科的核心课程，而且已经成为计算机相关专业必要的选修课。其要求是学会分析、研究计算机加工的数据结构的特性，初步掌握算法的时间和空间分析技术，并能够编写出结构清晰、正确易读的算法，达到培养数据抽象能力的目的。学习数据结构可以使读者碰到具体问题时，能够找到一个优化的存储结构和解决方法。本书利用目前流行的开发工具Java语言进行数据结构设计，包含了数据结构的全部内容，符合大学的教学大纲，既可以作为大学数据结构课程的教材，又可以为程序设计者学习数据结构提供帮助。\n本书以数据结构为主线，是在Java语言的基础之上编写的，希望读者在阅读本书之前，最好具备Java语言基础。这样，在学习数据结构时，能够比较容易地建立正确的数据结构中的存储和逻辑概念。', 1288195200000, '1.0', '王世民 朱建方 孔凡航 ', '', '清华大学出版社', '', '本站下载-http://story.ajava.org/java/data-structures-and-algorithm-analysis-java-zh.zip', '15M', '所有系统', 'CC3', '中文', 1288276333885, 1288276333885, 'admin'),
('000000002b9e98bc012bf3445e17010f', '000000002b9e98bc012bbe4f60bf0090', '《Effective Enterprise Java中文版》PDF下载', '开发注意点', NULL, '<p style="text-align: center;">\n	<img alt="" src="http://images.china-pub.com/ebook25001-30000/27031/shupi.jpg" style="width: 299px; height: 400px;" /></p>\n<p>\n	构建高效的java企业级系统是项困难的工作。本书详细介绍企业级计算技术中的常见问题，并描述使用企业级java平台技术处理这些问题的方法。本书以若 干条建议、指南的形式，言简意赅地介绍了j2ee开发中的微妙之处。无论你是否是java开发人员，本书都将为你开发高效的企业系统提供诸多帮助。</p>\n<p>\n	如果你想构建更好的java企业应用，并使之运行起来更加高效，本书就是最佳选择。本书通俗易懂地解释了j2ee开发的微妙之处。你将学会：<br />\n	■使用进程内或本地存储以避开网络，请参阅第44项<br />\n	■考虑使用较低的隔离级别以获得更大的事务吞吐量，请参阅第35项<br />\n	■为了开放集成而考虑使用web服务，请参阅第22项<br />\n	■仔细考虑你的查找，请参阅第16项<br />\n	■预生成内容以最小化处理过程，请参阅第55项<br />\n	■使用基于角色的授权，请参阅第63项<br />\n	■面对故障时要健壮，请参阅第7项<br />\n	■为版本并存使用独立的jre，请参阅第69项</p>\n<p>\n	<br />\n	tedneward向读者提供了75项易于理解的技巧，它们可以帮助你在系统和架构层次上驾驭j2ee开发。他对j2ee开发的优势、弊端的全景式看法将 解决你最迫切关心的问题，使你学会：如何设计企业系统使其适应未来的需求；在无损于代码正确性的前提下提高代码的效率；如何实现语言或平台无法直接支持的 复杂功能。在阅读本书之后，你将了解如何设计和实现更好的、更具可扩展性的、企业级java软件系统。</p>\n', '构建高效的java企业级系统是项困难的工作。本书详细介绍企业级计算技术中的常见问题，并描述使用企业级java平台技术处理这些问题的方法。本书以若干条建议、指南的形式，言简意赅地介绍了j2ee开发中的微妙之处。无论你是否是java开发人员，本书都将为你开发高效的企业系统提供诸多帮助。', 1288195200000, '1.0', 'Ted Neward', '陈吴鹏 薛翔 郭嘉 方小丽', '机械工业出版社 ', '', '本站下载-http://story.ajava.org/java/effective-enterprise-java-zh.zip', '2M', '所有系统', 'CC3', '中文', 1288276565527, 1288276565527, 'admin');

-- --------------------------------------------------------

--
-- 表的结构 'file_extra'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS file_extra;
CREATE TABLE IF NOT EXISTS file_extra (
  id varchar(32) NOT NULL COMMENT '主键',
  file_id varchar(32) DEFAULT NULL COMMENT '文件主键',
  meta_name varchar(45) DEFAULT NULL COMMENT '元数据名。当文件表字段不够用时扩展。\n',
  meta_value varchar(500) DEFAULT NULL COMMENT '元数据值',
  PRIMARY KEY (id),
  KEY fk_file_extra (file_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件额外数据表';

--
-- 导出表中的数据 'file_extra'
--


-- --------------------------------------------------------

--
-- 表的结构 'file_meta'
--
-- 创建时间: 2010 年 09 月 12 日 18:23
--

DROP TABLE IF EXISTS file_meta;
CREATE TABLE IF NOT EXISTS file_meta (
  id varchar(32) NOT NULL COMMENT '主键',
  file_id varchar(32) DEFAULT NULL COMMENT '文件主键',
  click_amount int(11) DEFAULT '0' COMMENT '点击次数',
  agree_amount int(11) DEFAULT '0' COMMENT '赞成票数',
  oppose_amount int(11) DEFAULT '0' COMMENT '反对票数',
  file_status int(11) DEFAULT '0' COMMENT '0，未审核\n1，审核通过\n2，审核未通过\n3，锁定\n4、隐藏',
  file_score int(11) DEFAULT '0' COMMENT '故事得分',
  hide_vote int(11) DEFAULT '0' COMMENT '隐藏票数',
  html_status int(11) DEFAULT '0' COMMENT '0，未生成\n1，已生成',
  access_score int(11) DEFAULT '0' COMMENT '访问所需积分。只有账号积分高于此值的用户才能访问此故事。',
  access_cost int(11) DEFAULT '0' COMMENT '访问花费积分。访问此故事需要花费的积分。',
  download_cost int(11) DEFAULT NULL COMMENT '下载花费积分。下载附件所花费的积分。',
  download_amount int(11) DEFAULT NULL COMMENT '下载次数',
  reward_cost int(11) DEFAULT '0' COMMENT '悬赏积分',
  reply_amount int(11) DEFAULT '0' COMMENT '回复次数',
  reply_status int(11) DEFAULT '1' COMMENT '回复状态。\n0，禁止回复\n1，可回复\n',
  file_ip varchar(30) DEFAULT NULL COMMENT '发表文件的IP',
  file_attr int(11) DEFAULT '0' COMMENT '文件属性\n0，普通\n1，头条\n2，幻灯',
  recommend int(11) DEFAULT '1' COMMENT '推荐。\n0、推荐\n1、不推荐',
  top_time bigint(13) DEFAULT '0' COMMENT '置顶到期时间',
  PRIMARY KEY (id),
  KEY fk_file_meta (file_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件元数据表';

--
-- 导出表中的数据 'file_meta'
--

INSERT INTO file_meta (id, file_id, click_amount, agree_amount, oppose_amount, file_status, file_score, hide_vote, html_status, access_score, access_cost, download_cost, download_amount, reward_cost, reply_amount, reply_status, file_ip, file_attr, recommend, top_time) VALUES
('000000002b0bf62e012b0c0af8d00004', '000000002b0bf62e012b0c0af8d00003', 115, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b0bf62e012b0c1dafe4000e', '000000002b0bf62e012b0c1dafe4000d', 179, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b0c282d012b0e562a880010', '000000002b0c282d012b0e562a88000f', 112, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b0c282d012b0e651de00014', '000000002b0c282d012b0e651de00013', 134, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b0c282d012b0f7806bb001f', '000000002b0c282d012b0f7806bb001e', 150, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b0fcd3a012b10ee2ab2000a', '000000002b0fcd3a012b10ee2ab20009', 55, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b10f313012b10f832e90002', '000000002b10f313012b10f832e30001', 47, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b110d66740008', '000000002b1101b3012b110d66740007', 46, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b111662120012', '000000002b1101b3012b111662120011', 87, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b13ddca8f002e', '000000002b1101b3012b13ddca8f002d', 47, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b13e0f6fa0034', '000000002b1101b3012b13e0f6fa0033', 41, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b14097fc00048', '000000002b1101b3012b14097fc00047', 67, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b141246f0004e', '000000002b1101b3012b141246ef004d', 42, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b1414064c0052', '000000002b1101b3012b1414064c0051', 51, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b141557120056', '000000002b1101b3012b141557110055', 45, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b14bd9d52005a', '000000002b1101b3012b14bd9d520059', 44, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b14c5bef5005e', '000000002b1101b3012b14c5bef5005d', 57, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b14cc01300066', '000000002b1101b3012b14cc01300065', 89, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b14dd2e76006a', '000000002b1101b3012b14dd2e760069', 49, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b14e3f9c30075', '000000002b1101b3012b14e3f9c30074', 67, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b14ede6d3009e', '000000002b1101b3012b14ede6d3009d', 47, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b1101b3012b14f1daae00a2', '000000002b1101b3012b14f1daae00a1', 53, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1534eb370003', '000000002b151467012b1534eb370002', 48, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1551a8c30013', '000000002b151467012b1551a8c30012', 58, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b15f9ee680019', '000000002b151467012b15f9ee680018', 36, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1600aa820021', '000000002b151467012b1600aa820020', 54, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1603b3390025', '000000002b151467012b1603b3390024', 42, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b160927e6002f', '000000002b151467012b160927e6002e', 40, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b161762850033', '000000002b151467012b161762840032', 42, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b161c00d50037', '000000002b151467012b161c00d50036', 42, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b162708f0003b', '000000002b151467012b162708f0003a', 42, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1f66578b0043', '000000002b151467012b1f66578b0042', 87, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1f7416ad004e', '000000002b151467012b1f7416ad004d', 103, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1f7cf4200052', '000000002b151467012b1f7cf4200051', 75, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1f826662005a', '000000002b151467012b1f8266620059', 139, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1f8f9de30062', '000000002b151467012b1f8f9de30061', 157, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1f9f0ac8006a', '000000002b151467012b1f9f0ac80069', 79, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1faa2b4b006e', '000000002b151467012b1faa2b4b006d', 66, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b151467012b1fb2d5c80072', '000000002b151467012b1fb2d5c80071', 63, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2905c1670002', '000000002b248517012b2905c1520001', 44, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2909942a0006', '000000002b248517012b2909942a0005', 53, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b291044d0000a', '000000002b248517012b291044d00009', 86, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b29189b67000e', '000000002b248517012b29189b67000d', 55, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b291ba3440012', '000000002b248517012b291ba3440011', 62, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b291ebc930016', '000000002b248517012b291ebc930015', 202, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b292912e9001a', '000000002b248517012b292912e90019', 108, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2a7957930021', '000000002b248517012b2a7957920020', 112, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2a8179d60025', '000000002b248517012b2a8179d60024', 166, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2a85fced0029', '000000002b248517012b2a85fced0028', 110, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2a8b648b002d', '000000002b248517012b2a8b648a002c', 155, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2a94cd440031', '000000002b248517012b2a94cd430030', 93, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2a99be590035', '000000002b248517012b2a99be590034', 89, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b248517012b2aa1081c003b', '000000002b248517012b2aa1081c003a', 154, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b3e16a4350006', '000000002b32bf45012b3e16a4350005', 49, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b3e238fa0000a', '000000002b32bf45012b3e238fa00009', 38, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b3e3212410010', '000000002b32bf45012b3e321241000f', 50, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b3ec7afc70014', '000000002b32bf45012b3ec7afc70013', 51, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b419ff8210018', '000000002b32bf45012b419ff8210017', 96, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b41a53e50001c', '000000002b32bf45012b41a53e50001b', 43, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b41abec680020', '000000002b32bf45012b41abec68001f', 58, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b41d40b63002a', '000000002b32bf45012b41d40b630029', 32, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b41eb0d4b0032', '000000002b32bf45012b41eb0d4b0031', 28, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b41edf35d003a', '000000002b32bf45012b41edf35d0039', 49, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b41f0dac3003e', '000000002b32bf45012b41f0dac2003d', 45, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b420419350046', '000000002b32bf45012b420419350045', 73, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b420989e7004a', '000000002b32bf45012b420989e70049', 58, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b4229ae05004e', '000000002b32bf45012b4229ae05004d', 46, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b42c8f7f50052', '000000002b32bf45012b42c8f7f50051', 58, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b42d1a7380056', '000000002b32bf45012b42d1a7380055', 91, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b42ec3855005c', '000000002b32bf45012b42ec3855005b', 105, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b42eebb350060', '000000002b32bf45012b42eebb35005f', 158, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b42f282650064', '000000002b32bf45012b42f282650063', 64, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b42f446b20068', '000000002b32bf45012b42f446b10067', 159, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b32bf45012b42f8789e006c', '000000002b32bf45012b42f8789e006b', 236, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b674c8cb70002', '000000002b5cb843012b674c8c3f0001', 43, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b6754b8fd0006', '000000002b5cb843012b6754b8fd0005', 43, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b676ac205000a', '000000002b5cb843012b676ac2050009', 36, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b67722e8b000e', '000000002b5cb843012b67722e8b000d', 158, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b6ae8854b0012', '000000002b5cb843012b6ae8854b0011', 45, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b6b0004c00017', '000000002b5cb843012b6b0004c00016', 110, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b6b1fa0ef0036', '000000002b5cb843012b6b1fa0ef0035', 58, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b6d5735700043', '000000002b5cb843012b6d5735700042', 50, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b70dc7fd50047', '000000002b5cb843012b70dc7fd50046', 44, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b70f401cd004b', '000000002b5cb843012b70f401cd004a', 89, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b5cb843012b76ba8bde0054', '000000002b5cb843012b76ba8bde0053', 85, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9f32ff750002', '000000002b9e98bc012b9f32ff650001', 14, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9f39b2370008', '000000002b9e98bc012b9f39b2370007', 14, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9f41edeb000e', '000000002b9e98bc012b9f41edeb000d', 14, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9f4ffe920014', '000000002b9e98bc012b9f4ffe920013', 14, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9f87e7940019', '000000002b9e98bc012b9f87e7940018', 16, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9f8e7203001f', '000000002b9e98bc012b9f8e7203001e', 14, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9f92f5b30023', '000000002b9e98bc012b9f92f5b30022', 145, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9f9a61250027', '000000002b9e98bc012b9f9a61250026', 15, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9fa5507f0041', '000000002b9e98bc012b9fa5507e0040', 26, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9faa55ac0046', '000000002b9e98bc012b9faa55ac0045', 31, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9fb6fb4e004a', '000000002b9e98bc012b9fb6fb4d0049', 26, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9fb94791004e', '000000002b9e98bc012b9fb94791004d', 60, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9fc2b9ac0052', '000000002b9e98bc012b9fc2b9ab0051', 27, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012b9fc9b4740056', '000000002b9e98bc012b9fc9b4740055', 42, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012ba37176660062', '000000002b9e98bc012ba37176660061', 23, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012ba37621760066', '000000002b9e98bc012ba37621760065', 52, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012ba43eb09b006b', '000000002b9e98bc012ba43eb09a006a', 36, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012ba52433fa006f', '000000002b9e98bc012ba52433fa006e', 89, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012ba5691e3f0077', '000000002b9e98bc012ba5691e3e0076', 66, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012ba570cf75007b', '000000002b9e98bc012ba570cf74007a', 33, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012baec1c6a90081', '000000002b9e98bc012baec1c6a90080', 59, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012baec4d0c70085', '000000002b9e98bc012baec4d0c60084', 61, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012baecadb6e008b', '000000002b9e98bc012baecadb6d008a', 79, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bbe57a87d0093', '000000002b9e98bc012bbe57a87d0092', 83, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bbeade23f0097', '000000002b9e98bc012bbeade23f0096', 27, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bbeb5b722009f', '000000002b9e98bc012bbeb5b722009e', 16, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bbf3827f100a5', '000000002b9e98bc012bbf3827f000a4', 29, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bbf3b058000a9', '000000002b9e98bc012bbf3b058000a8', 50, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bbf41b62b00ad', '000000002b9e98bc012bbf41b62a00ac', 20, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bbf4346e700b1', '000000002b9e98bc012bbf4346e700b0', 32, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bceefd2f900bb', '000000002b9e98bc012bceefd2f900ba', 26, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bcef6a7bb00bf', '000000002b9e98bc012bcef6a7bb00be', 21, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bcefa578100c3', '000000002b9e98bc012bcefa578100c2', 27, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bcf100c9700c7', '000000002b9e98bc012bcf100c9700c6', 88, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bde0ca19b00cb', '000000002b9e98bc012bde0ca19b00ca', 45, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bde22dd0600cf', '000000002b9e98bc012bde22dd0600ce', 54, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bde3e5cdd00d7', '000000002b9e98bc012bde3e5cdc00d6', 41, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012be841dbe100dd', '000000002b9e98bc012be841dbe100dc', 99, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012be84562b700e1', '000000002b9e98bc012be84562b700e0', 79, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012be85b8b5900e7', '000000002b9e98bc012be85b8b5800e6', 64, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012be887a1cc00ec', '000000002b9e98bc012be887a1cc00eb', 54, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012be89222e400f4', '000000002b9e98bc012be89222e400f3', 66, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012be8f8d5d600fa', '000000002b9e98bc012be8f8d5d600f9', 93, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bf3165a790100', '000000002b9e98bc012bf3165a7900ff', 40, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bf3198fb00104', '000000002b9e98bc012bf3198fb00103', 68, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bf31b8b420108', '000000002b9e98bc012bf31b8b420107', 80, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bf340d53d010c', '000000002b9e98bc012bf340d53d010b', 86, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL),
('000000002b9e98bc012bf3445e170110', '000000002b9e98bc012bf3445e17010f', 95, 0, 0, 1, NULL, 0, NULL, 0, 0, NULL, 0, NULL, NULL, 1, '127.0.0.1', 0, 0, NULL);

-- --------------------------------------------------------

--
-- 表的结构 'folder'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS folder;
CREATE TABLE IF NOT EXISTS folder (
  id varchar(32) NOT NULL,
  story_id varchar(32) DEFAULT NULL COMMENT '文件夹类型\n1，文字\n2，文件\n3，图片\n\n',
  thumbnail varchar(200) DEFAULT NULL,
  title varchar(150) DEFAULT NULL COMMENT '文件夹标题',
  content text COMMENT '文件夹内容',
  create_time bigint(13) DEFAULT NULL COMMENT '创建时间',
  update_time bigint(13) DEFAULT NULL COMMENT '修改时间',
  creater varchar(60) DEFAULT NULL COMMENT '创建者',
  PRIMARY KEY (id),
  KEY fk_folder (story_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='文件夹表';

--
-- 导出表中的数据 'folder'
--

INSERT INTO folder (id, story_id, thumbnail, title, content, create_time, update_time, creater) VALUES
('000000002b0bf62e012b0bfb93d70001', '000000002b057a43012b0be1e1340001', NULL, '在线文档', '在线文档', 1284396258263, 1284396258263, 'admin'),
('000000002b0bf62e012b0bfbf7b80002', '000000002b057a43012b0be1e1340001', NULL, '资源下载', '资源下载', 1284396283832, 1284396283832, 'admin'),
('000000002b0c282d012b0f725939001d', '000000002b057a43012b0be1e1340001', NULL, '在线源码', '在线源码', 1284454373689, 1284454373689, 'admin'),
('000000002b248517012b29528904001e', '000000002b248517012b293cb528001d', NULL, '资源下载', '资源下载', 1284888496388, 1284888496388, 'admin'),
('000000002b248517012b2952d3ad001f', '000000002b248517012b293cb528001d', NULL, '在线源码', '在线源码', 1284888515501, 1284888515501, 'admin'),
('000000002b32bf45012b3e0a81310002', '000000002b32bf45012b3e07e1700001', NULL, '在线文档', '在线文档', 1285236097329, 1285236097329, 'admin'),
('000000002b32bf45012b3e0aa51c0003', '000000002b32bf45012b3e07e1700001', NULL, '资源下载', '资源下载', 1285236106524, 1285236106524, 'admin'),
('000000002b32bf45012b3e0accdc0004', '000000002b32bf45012b3e07e1700001', NULL, '在线源码', '在线源码', 1285236116700, 1285236116700, 'admin'),
('000000002b904fe6012b905b3c450002', '000000002b904fe6012b9057bb730001', NULL, '在线文档', '在线文档', 1286617119813, 1286617119813, 'admin'),
('000000002b904fe6012b905b65d50003', '000000002b904fe6012b9057bb730001', NULL, '资源下载', '资源下载', 1286617130453, 1286617130453, 'admin'),
('000000002b904fe6012b905bd4060004', '000000002b904fe6012b9057bb730001', NULL, '在线源码', '在线源码', 1286617158662, 1286617158662, 'admin'),
('000000002b9e98bc012bbe4eb6e9008f', '000000002b9e98bc012bb80aa15b008e', NULL, '在线文档', '在线文档', 1287388051177, 1287388088013, 'admin'),
('000000002b9e98bc012bbe4f60bf0090', '000000002b9e98bc012bb80aa15b008e', NULL, '资源下载', '资源下载', 1287388094655, 1287388094655, 'admin'),
('000000002b9e98bc012bbe4f9f2b0091', '000000002b9e98bc012bb80aa15b008e', NULL, '在线源码', '在线源码', 1287388110635, 1287388110635, 'admin');

-- --------------------------------------------------------

--
-- 表的结构 'function'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS function;
CREATE TABLE IF NOT EXISTS `function` (
  id varchar(32) NOT NULL COMMENT '主键',
  function_name varchar(60) DEFAULT NULL COMMENT '功能名',
  function_url varchar(100) DEFAULT NULL COMMENT '功能URL',
  function_anturl varchar(100) DEFAULT NULL COMMENT '功能url的ant模式',
  function_sort int(11) DEFAULT NULL COMMENT '功能排序',
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='功能表';

--
-- 导出表中的数据 'function'
--

INSERT INTO function (id, function_name, function_url, function_anturl, function_sort) VALUES
('1', '管理首页', '/console.do', '/console*.do*', 1),
('2', '媒体管理', '/media.do', '/media*.do*', 1),
('3', '故事管理', '/story.do', '/story*.do*', 1),
('4', '缩略图管理', '/thumbnail.do', '/thumbnail*.do*', 1),
('5', '选项管理', '/option.do', '/option*.do*', 1),
('6', '栏目管理', '/category.do', '/category*.do*', 1),
('7', '文件夹管理', '/folder.do', '/folder*.do*', 1),
('8', '文件管理', '/file.do', '/file*.do*', 1),
('9', '会员', '/reply.do', '/member*.do*', 1);

-- --------------------------------------------------------

--
-- 表的结构 'media'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS media;
CREATE TABLE IF NOT EXISTS media (
  id varchar(32) NOT NULL COMMENT '主键',
  title varchar(50) DEFAULT NULL COMMENT '标题',
  excerpt text COMMENT '摘要',
  media_type varchar(100) DEFAULT NULL COMMENT '媒体类型',
  media_path varchar(200) DEFAULT NULL COMMENT '媒体路径',
  create_time bigint(13) DEFAULT NULL COMMENT '创建时间',
  update_time bigint(13) DEFAULT NULL COMMENT '更新时间',
  creater varchar(60) DEFAULT NULL COMMENT '创建者',
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='媒体表';

--
-- 导出表中的数据 'media'
--

INSERT INTO media (id, title, excerpt, media_type, media_path, create_time, update_time, creater) VALUES
('000000002b5cb843012b6afb26e50015', 'java web 标签大全', 'java web 标签大全', 'png', '/upload/2010-10/java-web-tag.png', 1285990065893, 1285990065893, 'admin'),
('000000002b5cb843012b76b74bd10052', '轻松入门之struts2', '轻松入门之struts2', 'png', '/upload/2010-10/easy-beginning-struts2-v3.0.png', 1286186945489, 1286186945489, 'admin'),
('000000002b9e98bc012ba433bf600069', 'Spring 开发指南', 'Spring 开发指南', 'png', '/upload/2010-10/spring-developer-guide-zh-pdf.png', 1286950076256, 1286950076256, 'admin'),
('000000002b9e98bc012bbf35540b00a2', 'jdk-6.0-api-zh', 'jdk-6.0-api-zh', 'jpg', '/upload/2010-10/jdk-6.0-api-zh.jpg', 1287403164683, 1287403164683, 'admin'),
('000000002b9e98bc012bbf358ca600a3', 'jdk-5.0-api-zh', 'jdk-5.0-api-zh', 'jpg', '/upload/2010-10/jdk-5.0-api-zh.jpg', 1287403179175, 1287403179175, 'admin'),
('000000002b9e98bc012bf21c1a4300fd', 'ext js', 'ext js', 'gif', '/upload/2010-10/extjs.gif', 1288257149507, 1288257149507, 'admin'),
('000000002b9e98bc012bf21c538200fe', 'jquery', 'jquery', 'gif', '/upload/2010-10/jquery.gif', 1288257164162, 1288257164162, 'admin');

-- --------------------------------------------------------

--
-- 表的结构 'options'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS options;
CREATE TABLE IF NOT EXISTS `options` (
  id varchar(32) NOT NULL COMMENT '主键',
  option_name varchar(45) DEFAULT NULL COMMENT '选项key',
  option_alias varchar(45) DEFAULT NULL COMMENT '选项别名',
  option_value varchar(45) DEFAULT NULL COMMENT '选项值',
  option_type int(11) DEFAULT NULL COMMENT '1、系统内置\n2、用户定义',
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='选项表';

--
-- 导出表中的数据 'options'
--


-- --------------------------------------------------------

--
-- 表的结构 'reply'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS reply;
CREATE TABLE IF NOT EXISTS reply (
  id varchar(32) NOT NULL COMMENT '主键',
  file_id varchar(32) DEFAULT NULL COMMENT '故事主键',
  content longtext COMMENT '回复内容',
  create_time bigint(13) DEFAULT NULL COMMENT '回复时间',
  update_time bigint(13) DEFAULT NULL COMMENT '修改时间',
  creater varchar(60) DEFAULT NULL COMMENT '创建者',
  PRIMARY KEY (id),
  KEY fk_reply1 (file_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='回复表';

--
-- 导出表中的数据 'reply'
--

INSERT INTO reply (id, file_id, content, create_time, update_time, creater) VALUES
('000000002c2bc5f3012c2bc78e2c0003', '000000002b9e98bc012bf3445e17010f', '这本书不错。<br/>我喜欢。', 1289224687149, 1289224687149, 'member');

-- --------------------------------------------------------

--
-- 表的结构 'reply_meta'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS reply_meta;
CREATE TABLE IF NOT EXISTS reply_meta (
  id varchar(32) NOT NULL COMMENT '主键',
  reply_id varchar(32) DEFAULT NULL COMMENT '回复主键',
  agree_amount int(11) DEFAULT '0' COMMENT '赞成票数',
  oppose_amount int(11) DEFAULT '0' COMMENT '反对票数',
  reply_status int(11) DEFAULT '1' COMMENT '0，未审核\n1，审核通过\n2，审核未通过\n3，锁定\n4、隐藏',
  hide_vote int(11) DEFAULT '0' COMMENT '隐藏票数',
  best_reply int(11) DEFAULT '0' COMMENT '0，不是最佳回复\n1，是最佳回复',
  reply_ip varchar(30) DEFAULT NULL COMMENT '回复IP地址',
  PRIMARY KEY (id),
  KEY fk_reply_meta (reply_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='回复元数据表';

--
-- 导出表中的数据 'reply_meta'
--

INSERT INTO reply_meta (id, reply_id, agree_amount, oppose_amount, reply_status, hide_vote, best_reply, reply_ip) VALUES
('000000002c2bc5f3012c2bc78e2d0004', '000000002c2bc5f3012c2bc78e2c0003', 0, 0, 1, 0, 0, '127.0.0.1');

-- --------------------------------------------------------

--
-- 表的结构 'role'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS role;
CREATE TABLE IF NOT EXISTS role (
  id varchar(32) NOT NULL COMMENT '主键',
  role_name varchar(20) DEFAULT NULL COMMENT '角色名称\n内置角色如下：\nadmin：管理组\nnormal：普通组\n',
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色表';

--
-- 导出表中的数据 'role'
--

INSERT INTO role (id, role_name) VALUES
('1', '管理员'),
('2', '总编'),
('3', '主编'),
('4', '编辑'),
('5', '个人会员'),
('6', '企业会员'),
('7', '游客');

-- --------------------------------------------------------

--
-- 表的结构 'role_function'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS role_function;
CREATE TABLE IF NOT EXISTS role_function (
  id varchar(32) NOT NULL COMMENT '主键',
  role_id varchar(32) DEFAULT NULL COMMENT '角色主键',
  function_id varchar(32) DEFAULT NULL COMMENT '功能主键',
  PRIMARY KEY (id),
  KEY fk_role_function1 (role_id),
  KEY fk_role_function2 (function_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色功能表';

--
-- 导出表中的数据 'role_function'
--

INSERT INTO role_function (id, role_id, function_id) VALUES
('1', '1', '1'),
('10', '5', '9'),
('2', '1', '2'),
('3', '1', '3'),
('4', '1', '4'),
('5', '1', '5'),
('6', '1', '6'),
('7', '1', '7'),
('8', '1', '8'),
('9', '1', '9');

-- --------------------------------------------------------

--
-- 表的结构 'score'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS score;
CREATE TABLE IF NOT EXISTS score (
  id varchar(32) NOT NULL COMMENT '主键',
  account_id varchar(32) DEFAULT NULL COMMENT '账号主键',
  score_income int(11) DEFAULT NULL COMMENT '收入积分',
  score_punish int(11) DEFAULT NULL COMMENT '惩罚积分',
  score_cost int(11) DEFAULT NULL COMMENT '花费积分',
  PRIMARY KEY (id),
  KEY fk_score (account_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='积分表';

--
-- 导出表中的数据 'score'
--


-- --------------------------------------------------------

--
-- 表的结构 'story'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS story;
CREATE TABLE IF NOT EXISTS story (
  id varchar(32) NOT NULL COMMENT '主键',
  category_id varchar(32) DEFAULT NULL COMMENT '分类id',
  title varchar(150) DEFAULT NULL COMMENT '故事标题',
  thumbnail varchar(200) DEFAULT NULL COMMENT '缩略图',
  content text COMMENT '故事基本内容',
  create_time bigint(13) DEFAULT NULL COMMENT '创建时间',
  update_time bigint(13) DEFAULT NULL COMMENT '修改时间',
  creater varchar(60) DEFAULT NULL COMMENT '创建者',
  PRIMARY KEY (id),
  KEY fk_story (category_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='故事表';

--
-- 导出表中的数据 'story'
--

INSERT INTO story (id, category_id, title, thumbnail, content, create_time, update_time, creater) VALUES
('000000002b057a43012b0be1e1340001', '402881e42adc0dd6012adc1e0c290007', 'Hibernate', '/upload/2010-09/hibernate.gif', 'Hibernate是一种Java语言下的对象关系映射解决方案。它是使用GNU通用公共许可证发行的自由、开源的软件。它为面向对象的领域模型到传统的关系型数据库的映射，提供了一个使用方便的框架。它的设计目标是将软件开发人员从大量相同的数据持久层相关编程工作中解放出来。无论是从设计草案还是从一个遗留数据库开始，开发人员都可以采用Hibernate。<br>Hibernate不仅负责从Java类到数据库表的映射（还包括从Java数据类型到SQL数据类型的映射），还提供了面向对象的数据查询检索机制，从而极大地缩短的手动处理SQL和JDBC上的开发时间。<br>', 1284394574132, 1284396184961, 'admin'),
('000000002b248517012b293cb528001d', '402881e42adc0dd6012adc1e0c290007', 'Mybatis', '/upload/2010-09/mybatis.gif', 'MyBatis数据映射框架可以使基于对象和关系数据库的应用开发变得非常简单。MyBatis使用一个XML描述符来连接对象和存储过程或SQL语句。简便，是MyBatis数据映射框架超越其他ORM工具最大的优势。<br>要想使用MyBatis数据映射框架，你只需要掌握对象、XML、SQL，而这些都是你非常熟悉的，你无需再学习其他知识。通过MyBatis数据映射框架，你可以轻车熟路地驾驭SQL和存储过程。', 1284887065896, 1284887065896, 'admin'),
('000000002b32bf45012b3e07e1700001', '402881e42adc0435012adc0704a70002', 'Struts', '/upload/2010-09/struts.gif', 'Struts是一个MVC框架。这个框架提供了一个自己的Controller层，并且通过整合其他技术提供Model层和View层。对于Model层，Struts整合了标准的数据访问技术，例如JDBC、EJB；也可以和其他第三方包一起工作，例如Hibernate、MyBatis、OJB。对于View层，Struts可以和JSP，包括JSTL和JSF一起工作，也可以和 Velocity Templates、XSLT或者其他表现层系统一起工作。', 1285235925361, 1285296664447, 'admin'),
('000000002b904fe6012b9057bb730001', '402881e42adc0dd6012adc24356f000d', 'Spring', '/upload/2010-10/spring.gif', 'Spring Framework 是一个开源的Java／Java EE全功能栈（full-stack）的应用程序框架，以Apache许可证形式发布，也有.NET平台上的移植版本。该框架基于 Expert One-on-One Java EE Design and Development（ISBN 0-7645-4385-7）一书中的代码，最初由 Rod Johnson 和 Juergen Hoeller等开发。Spring Framework 提供了一个简易的开发方式，这种开发方式，将避免那些可能致使底层代码变得繁杂混乱的大量的属性文件和帮助类。', 1286616890227, 1286616890227, 'admin'),
('000000002b9e98bc012bb80aa15b008e', '402881e42adbebb3012adbf0ebea0001', 'Java SE', '/upload/2010-10/java.gif', 'Java，是一种可以撰写跨平台应用软件的面向对象的程序设计语言，由当时任职太阳微系统的詹姆斯·高斯林（James Gosling）等人于1990年代初开发。它最初被命名为Oak，目标设置在家用电器等小型系统的编程语言，来解决诸如电视机、电话、闹钟、烤面包机等家用电器的控制和通讯问题。由于这些智能化家电的市场需求没有预期的高，Sun放弃了该项计划。就在Oak几近失败之时，随着互联网的发展，Sun看到了Oak在计算机网络上的广阔应用前景，于是改造了Oak，在1995年5月以“Java”的名称正式发布了。Java伴随着互联网的迅猛发展而发展，逐渐成为重要的网络编程语言。<br>Java Se(Java Platform, Standard Edition)，标准版的Java平台是一个Java2的平台，为用户提供一个程序开发环境。这个程序开发环境提供了开发与运行Java软件的编译器等开发工具、软件库及Java虚拟机。<br>', 1287282925915, 1287282925915, 'admin');

-- --------------------------------------------------------

--
-- 表的结构 'tag'
--
-- 创建时间: 2010 年 09 月 12 日 03:31
--

DROP TABLE IF EXISTS tag;
CREATE TABLE IF NOT EXISTS tag (
  id varchar(32) NOT NULL COMMENT '主键',
  file_id varchar(32) DEFAULT NULL COMMENT '文件主键',
  tag_name varchar(45) DEFAULT NULL COMMENT '标记名，能用于url的字符。对于标记别名里的特殊字符，需要用指定的字符进行替换。',
  tag_alias varchar(45) DEFAULT NULL COMMENT '标记别名，任意字符。',
  PRIMARY KEY (id),
  KEY fk_tag (file_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='标签表';

--
-- 导出表中的数据 'tag'
--

INSERT INTO tag (id, file_id, tag_name, tag_alias) VALUES
('000000002b1101b3012b111f1b7e0025', '000000002b0c282d012b0e651de00013', 'Hibernate 3.3.2.GA', 'Hibernate 3.3.2.GA'),
('000000002b1101b3012b111f1b7e0026', '000000002b0c282d012b0e651de00013', 'Hibernate', 'Hibernate'),
('000000002b1101b3012b13d9c90a002b', '000000002b0bf62e012b0c1dafe4000d', 'Hibernate 3.3.2.GA', 'Hibernate 3.3.2.GA'),
('000000002b1101b3012b13d9c90a002c', '000000002b0bf62e012b0c1dafe4000d', 'Hibernate api', 'Hibernate api'),
('000000002b1101b3012b14c8464a0063', '000000002b1101b3012b14c5bef5005d', 'Hibernate 3.5.5.Final', 'Hibernate 3.5.5.Final'),
('000000002b1101b3012b14c8464a0064', '000000002b1101b3012b14c5bef5005d', '参考手册', '参考手册'),
('000000002b1101b3012b14deb7f7006d', '000000002b1101b3012b14dd2e760069', 'Hibernate 3.5.5.Final', 'Hibernate 3.5.5.Final'),
('000000002b1101b3012b14deb7f8006e', '000000002b1101b3012b14dd2e760069', 'Hibernate', 'Hibernate'),
('000000002b1101b3012b14e567790078', '000000002b1101b3012b14bd9d520059', 'Hibernate 3.5.5.Final', 'Hibernate 3.5.5.Final'),
('000000002b1101b3012b14e567790079', '000000002b1101b3012b14bd9d520059', 'Hibernate javadoc', 'Hibernate javadoc'),
('000000002b1101b3012b14e5bd87007c', '000000002b0fcd3a012b10ee2ab20009', 'Hibernate 3.2.7.GA', 'Hibernate 3.2.7.GA'),
('000000002b1101b3012b14e5bd87007d', '000000002b0fcd3a012b10ee2ab20009', 'Hibernate javadoc', 'Hibernate javadoc'),
('000000002b1101b3012b14e63acc0082', '000000002b0c282d012b0f7806bb001e', 'Hibernate 3.3.2.GA', 'Hibernate 3.3.2.GA'),
('000000002b1101b3012b14e63acc0083', '000000002b0c282d012b0f7806bb001e', 'API文档', 'API文档'),
('000000002b1101b3012b14e6535a0084', '000000002b1101b3012b110d66740007', 'Hibernate 3.2.7.GA', 'Hibernate 3.2.7.GA'),
('000000002b1101b3012b14e6535b0085', '000000002b1101b3012b110d66740007', 'Hibernate', 'Hibernate'),
('000000002b1101b3012b14e7083d0091', '000000002b1101b3012b141557110055', 'Hibernate 3.2.7.GA', 'Hibernate 3.2.7.GA'),
('000000002b1101b3012b14e7083d0092', '000000002b1101b3012b141557110055', '参考手册', '参考手册'),
('000000002b1101b3012b14e720fd0093', '000000002b1101b3012b14e3f9c30074', 'Hibernate 3.5.5.Final', 'Hibernate 3.5.5.Final'),
('000000002b1101b3012b14e720fd0094', '000000002b1101b3012b14e3f9c30074', 'Hibernate javadoc', 'Hibernate javadoc'),
('000000002b1101b3012b14e8a2720095', '000000002b1101b3012b13ddca8f002d', 'Hibernate 3.3.2.GA', 'Hibernate 3.3.2.GA'),
('000000002b1101b3012b14e8a2720096', '000000002b1101b3012b13ddca8f002d', '参考手册', '参考手册'),
('000000002b1101b3012b14e90def0097', '000000002b1101b3012b13e0f6fa0033', 'Hibernate 3.3.2.GA', 'Hibernate 3.3.2.GA'),
('000000002b1101b3012b14e90def0098', '000000002b1101b3012b13e0f6fa0033', '参考手册', '参考手册'),
('000000002b1101b3012b14ea0b690099', '000000002b1101b3012b141246ef004d', 'Hibernate 3.2.7.GA', 'Hibernate 3.2.7.GA'),
('000000002b1101b3012b14ea0b69009a', '000000002b1101b3012b141246ef004d', '参考手册', '参考手册'),
('000000002b1101b3012b14ea4d57009b', '000000002b1101b3012b1414064c0051', 'Hibernate 3.2.7.GA', 'Hibernate 3.2.7.GA'),
('000000002b1101b3012b14ea4d57009c', '000000002b1101b3012b1414064c0051', '参考手册', '参考手册'),
('000000002b1101b3012b14ede6d3009f', '000000002b1101b3012b14ede6d3009d', 'Hibernate 3.5.5.Final', 'Hibernate 3.5.5.Final'),
('000000002b1101b3012b14ede6d300a0', '000000002b1101b3012b14ede6d3009d', '参考手册', '参考手册'),
('000000002b1101b3012b14f20d0e00a5', '000000002b1101b3012b14f1daae00a1', 'Hibernate 3.5.5.Final', 'Hibernate 3.5.5.Final'),
('000000002b1101b3012b14f20d0e00a6', '000000002b1101b3012b14f1daae00a1', '参考手册', '参考手册'),
('000000002b151467012b15451e2f0010', '000000002b151467012b1534eb370002', 'myeclipse', 'myeclipse'),
('000000002b151467012b15451e2f0011', '000000002b151467012b1534eb370002', 'hibernate开发', 'hibernate开发'),
('000000002b151467012b1552ed290016', '000000002b151467012b1551a8c30012', 'Hibernate', 'Hibernate'),
('000000002b151467012b1552ed290017', '000000002b151467012b1551a8c30012', 'Spring', 'Spring'),
('000000002b151467012b15f9ee68001a', '000000002b151467012b15f9ee680018', 'Hibernate 2.1.8', 'Hibernate 2.1.8'),
('000000002b151467012b15f9ee68001b', '000000002b151467012b15f9ee680018', '参考手册', '参考手册'),
('000000002b151467012b15fc60fe001c', '000000002b0bf62e012b0c0af8d00003', 'Hibernate 3.3.2.GA', 'Hibernate 3.3.2.GA'),
('000000002b151467012b15fc60fe001d', '000000002b0bf62e012b0c0af8d00003', '参考手册', '参考手册'),
('000000002b151467012b15fcb995001e', '000000002b10f313012b10f832e30001', 'Hibernate 3.2.7.GA', 'Hibernate 3.2.7.GA'),
('000000002b151467012b15fcb995001f', '000000002b10f313012b10f832e30001', '参考手册', '参考手册'),
('000000002b151467012b1600aa820022', '000000002b151467012b1600aa820020', 'Hibernate 2.1.8', 'Hibernate 2.1.8'),
('000000002b151467012b1600aa820023', '000000002b151467012b1600aa820020', 'Hibernate javadoc', 'Hibernate javadoc'),
('000000002b151467012b160927e70030', '000000002b151467012b160927e6002e', 'Hibernate 2.1.8', 'Hibernate 2.1.8'),
('000000002b151467012b160927e70031', '000000002b151467012b160927e6002e', '参考手册', '参考手册'),
('000000002b151467012b161762850034', '000000002b151467012b161762840032', 'Hibernate 2.1.8', 'Hibernate 2.1.8'),
('000000002b151467012b161762850035', '000000002b151467012b161762840032', '参考手册', '参考手册'),
('000000002b151467012b161c00d50038', '000000002b151467012b161c00d50036', 'Hibernate 2.1.8', 'Hibernate 2.1.8'),
('000000002b151467012b161c00d50039', '000000002b151467012b161c00d50036', 'Hibernate javadoc', 'Hibernate javadoc'),
('000000002b151467012b162708f0003c', '000000002b151467012b162708f0003a', 'Hibernate 2.1.8', 'Hibernate 2.1.8'),
('000000002b151467012b162708f0003d', '000000002b151467012b162708f0003a', 'Hibernate', 'Hibernate'),
('000000002b151467012b16667feb0040', '000000002b1101b3012b111662120011', 'Hibernate 3.2.7.GA', 'Hibernate 3.2.7.GA'),
('000000002b151467012b16667feb0041', '000000002b1101b3012b111662120011', 'Hibernate javadoc', 'Hibernate javadoc'),
('000000002b151467012b1f6c8c4a004a', '000000002b151467012b1f66578b0042', 'struts', 'struts'),
('000000002b151467012b1f6c8c4a004b', '000000002b151467012b1f66578b0042', 'hibernate', 'hibernate'),
('000000002b151467012b1f6c8c4a004c', '000000002b151467012b1f66578b0042', 'spring', 'spring'),
('000000002b151467012b1f7d4dc80056', '000000002b151467012b1f7cf4200051', 'struts', 'struts'),
('000000002b151467012b1f7d4dc80057', '000000002b151467012b1f7cf4200051', 'spring', 'spring'),
('000000002b151467012b1f7d4dc80058', '000000002b151467012b1f7cf4200051', 'hibernate', 'hibernate'),
('000000002b151467012b1f915dc00067', '000000002b151467012b1f8f9de30061', 'hibernate', 'hibernate'),
('000000002b151467012b1f915dc00068', '000000002b151467012b1f8f9de30061', 'java', 'java'),
('000000002b151467012b1faa2b4b006f', '000000002b151467012b1faa2b4b006d', 'hibernate', 'hibernate'),
('000000002b151467012b1faa2b4b0070', '000000002b151467012b1faa2b4b006d', 'hibernate 3.5.x', 'hibernate 3.5.x'),
('000000002b151467012b1fb2d5c80073', '000000002b151467012b1fb2d5c80071', 'hibernate', 'hibernate'),
('000000002b151467012b1fb2d5c80074', '000000002b151467012b1fb2d5c80071', 'java', 'java'),
('000000002b248517012b2905c1670003', '000000002b248517012b2905c1520001', 'Hibernate 3.5.6.Final', 'Hibernate 3.5.6.Final'),
('000000002b248517012b2905c1670004', '000000002b248517012b2905c1520001', 'Hibernate javadoc', 'Hibernate javadoc'),
('000000002b248517012b2909942a0007', '000000002b248517012b2909942a0005', 'Hibernate 3.5.6.Final', 'Hibernate 3.5.6.Final'),
('000000002b248517012b2909942a0008', '000000002b248517012b2909942a0005', '参考手册', '参考手册'),
('000000002b248517012b29189b67000f', '000000002b248517012b29189b67000d', 'Hibernate 3.5.6.Final', 'Hibernate 3.5.6.Final'),
('000000002b248517012b29189b670010', '000000002b248517012b29189b67000d', '参考手册', '参考手册'),
('000000002b248517012b291ba3440013', '000000002b248517012b291ba3440011', 'Hibernate 3.5.6.Final', 'Hibernate 3.5.6.Final'),
('000000002b248517012b291ba3440014', '000000002b248517012b291ba3440011', '参考手册', '参考手册'),
('000000002b248517012b291ebc930017', '000000002b248517012b291ebc930015', 'Hibernate 3.5.6.Final', 'Hibernate 3.5.6.Final'),
('000000002b248517012b291ebc930018', '000000002b248517012b291ebc930015', 'Hibernate javadoc', 'Hibernate javadoc'),
('000000002b248517012b292912e9001b', '000000002b248517012b292912e90019', 'Hibernate 3.5.6.Final', 'Hibernate 3.5.6.Final'),
('000000002b248517012b292912e9001c', '000000002b248517012b292912e90019', 'Hibernate', 'Hibernate'),
('000000002b248517012b2a8179d70026', '000000002b248517012b2a8179d60024', 'MyBatis 3.0.2', 'MyBatis 3.0.2'),
('000000002b248517012b2a8179d70027', '000000002b248517012b2a8179d60024', '参考手册', '参考手册'),
('000000002b248517012b2a85fced002a', '000000002b248517012b2a85fced0028', 'MyBatis 3.0.2', 'MyBatis 3.0.2'),
('000000002b248517012b2a85fced002b', '000000002b248517012b2a85fced0028', 'MyBatis', 'MyBatis'),
('000000002b248517012b2a8b648b002e', '000000002b248517012b2a8b648a002c', 'mybatis', 'mybatis'),
('000000002b248517012b2a8b648b002f', '000000002b248517012b2a8b648a002c', '开发指南', '开发指南'),
('000000002b248517012b2a94cd440032', '000000002b248517012b2a94cd430030', 'mybatis', 'mybatis'),
('000000002b248517012b2a94cd440033', '000000002b248517012b2a94cd430030', '开发指南', '开发指南'),
('000000002b248517012b2a9a5df60038', '000000002b248517012b2a99be590034', 'mybatis', 'mybatis'),
('000000002b248517012b2a9a5df60039', '000000002b248517012b2a99be590034', '入门教程', '入门教程'),
('000000002b248517012b2aa1081c003c', '000000002b248517012b2aa1081c003a', 'mybatis', 'mybatis'),
('000000002b248517012b2aa1081c003d', '000000002b248517012b2aa1081c003a', 'in action', 'in action'),
('000000002b248517012b2aa2f1bb003e', '000000002b151467012b1f9f0ac80069', 'hibernate', 'hibernate'),
('000000002b248517012b2aa2f1bb003f', '000000002b151467012b1f9f0ac80069', 'java', 'java'),
('000000002b32bf45012b3ec7afc70015', '000000002b32bf45012b3ec7afc70013', 'Struts', 'Struts'),
('000000002b32bf45012b3ec7afc70016', '000000002b32bf45012b3ec7afc70013', 'Struts 1.3.10', 'Struts 1.3.10'),
('000000002b32bf45012b41ae26900023', '000000002b32bf45012b419ff8210017', 'Struts', 'Struts'),
('000000002b32bf45012b41ae26900024', '000000002b32bf45012b419ff8210017', 'Struts 1.3.10', 'Struts 1.3.10'),
('000000002b32bf45012b41bd29b80025', '000000002b32bf45012b3e321241000f', 'Struts', 'Struts'),
('000000002b32bf45012b41bd29b80026', '000000002b32bf45012b3e321241000f', 'Struts 1.3.10', 'Struts 1.3.10'),
('000000002b32bf45012b41bdf5d40027', '000000002b32bf45012b41a53e50001b', 'Struts', 'Struts'),
('000000002b32bf45012b41bdf5d40028', '000000002b32bf45012b41a53e50001b', 'Struts 1.3.10', 'Struts 1.3.10'),
('000000002b32bf45012b41d444b6002d', '000000002b32bf45012b3e16a4350005', 'Struts', 'Struts'),
('000000002b32bf45012b41d444b6002e', '000000002b32bf45012b3e16a4350005', 'Struts 1.3.10', 'Struts 1.3.10'),
('000000002b32bf45012b41eb6e320035', '000000002b32bf45012b41eb0d4b0031', 'Struts', 'Struts'),
('000000002b32bf45012b41eb6e320036', '000000002b32bf45012b41eb0d4b0031', 'Struts 2.0.14', 'Struts 2.0.14'),
('000000002b32bf45012b41ebc1530037', '000000002b32bf45012b3e238fa00009', 'Struts', 'Struts'),
('000000002b32bf45012b41ebc1530038', '000000002b32bf45012b3e238fa00009', 'Struts 1.3.10', 'Struts 1.3.10'),
('000000002b32bf45012b41edf35e003b', '000000002b32bf45012b41edf35d0039', 'Struts', 'Struts'),
('000000002b32bf45012b41edf35e003c', '000000002b32bf45012b41edf35d0039', 'Struts 2.0.14', 'Struts 2.0.14'),
('000000002b32bf45012b41fd9df30041', '000000002b32bf45012b41f0dac2003d', 'Struts', 'Struts'),
('000000002b32bf45012b41fd9df30042', '000000002b32bf45012b41f0dac2003d', 'Struts 2.0.14', 'Struts 2.0.14'),
('000000002b32bf45012b41ffba0f0043', '000000002b32bf45012b41d40b630029', 'Struts', 'Struts'),
('000000002b32bf45012b41ffba0f0044', '000000002b32bf45012b41d40b630029', 'Struts 2.0.14', 'Struts 2.0.14'),
('000000002b32bf45012b420419360047', '000000002b32bf45012b420419350045', 'Struts', 'Struts'),
('000000002b32bf45012b420419360048', '000000002b32bf45012b420419350045', 'Struts 2.0.14', 'Struts 2.0.14'),
('000000002b32bf45012b4229ae06004f', '000000002b32bf45012b4229ae05004d', 'Struts', 'Struts'),
('000000002b32bf45012b4229ae060050', '000000002b32bf45012b4229ae05004d', 'Struts 2.0.14', 'Struts 2.0.14'),
('000000002b32bf45012b42e3aa2f0059', '000000002b32bf45012b42c8f7f50051', 'Struts', 'Struts'),
('000000002b32bf45012b42e3aa2f005a', '000000002b32bf45012b42c8f7f50051', 'Struts 2.2.1', 'Struts 2.2.1'),
('000000002b32bf45012b42ec3855005d', '000000002b32bf45012b42ec3855005b', 'Struts', 'Struts'),
('000000002b32bf45012b42ec3855005e', '000000002b32bf45012b42ec3855005b', 'Struts 2.2.1', 'Struts 2.2.1'),
('000000002b32bf45012b42eebb350061', '000000002b32bf45012b42eebb35005f', 'Struts', 'Struts'),
('000000002b32bf45012b42eebb350062', '000000002b32bf45012b42eebb35005f', 'Struts 2.2.1', 'Struts 2.2.1'),
('000000002b32bf45012b42f282650065', '000000002b32bf45012b42f282650063', 'Struts', 'Struts'),
('000000002b32bf45012b42f282650066', '000000002b32bf45012b42f282650063', 'Struts 2.2.1', 'Struts 2.2.1'),
('000000002b32bf45012b42f446b20069', '000000002b32bf45012b42f446b10067', 'Struts', 'Struts'),
('000000002b32bf45012b42f446b2006a', '000000002b32bf45012b42f446b10067', 'Struts 2.2.1', 'Struts 2.2.1'),
('000000002b32bf45012b42f8789e006d', '000000002b32bf45012b42f8789e006b', 'Struts', 'Struts'),
('000000002b32bf45012b42f8789e006e', '000000002b32bf45012b42f8789e006b', 'Struts 2.2.1', 'Struts 2.2.1'),
('000000002b5cb843012b674c8cb80003', '000000002b5cb843012b674c8c3f0001', 'struts', 'struts'),
('000000002b5cb843012b674c8cb80004', '000000002b5cb843012b674c8c3f0001', 'struts实战', 'struts实战'),
('000000002b5cb843012b6754b8fd0007', '000000002b5cb843012b6754b8fd0005', 'struts', 'struts'),
('000000002b5cb843012b6754b8fd0008', '000000002b5cb843012b6754b8fd0005', 'struts2', 'struts2'),
('000000002b5cb843012b676ac205000b', '000000002b5cb843012b676ac2050009', 'struts', 'struts'),
('000000002b5cb843012b676ac205000c', '000000002b5cb843012b676ac2050009', 'Jakarta', 'Jakarta'),
('000000002b5cb843012b6ae8854b0013', '000000002b5cb843012b6ae8854b0011', 'struts', 'struts'),
('000000002b5cb843012b6ae8854b0014', '000000002b5cb843012b6ae8854b0011', 'struts2', 'struts2'),
('000000002b5cb843012b6b205b320039', '000000002b5cb843012b6b1fa0ef0035', 'struts', 'struts'),
('000000002b5cb843012b6b205b32003a', '000000002b5cb843012b6b1fa0ef0035', 'struts2', 'struts2'),
('000000002b5cb843012b6b2331dd003b', '000000002b5cb843012b6b0004c00016', 'struts', 'struts'),
('000000002b5cb843012b6b2331dd003c', '000000002b5cb843012b6b0004c00016', 'struts2', 'struts2'),
('000000002b5cb843012b6b2331dd003d', '000000002b5cb843012b6b0004c00016', 'spring', 'spring'),
('000000002b5cb843012b6b2331dd003e', '000000002b5cb843012b6b0004c00016', 'jsp', 'jsp'),
('000000002b5cb843012b6b2331dd003f', '000000002b5cb843012b6b0004c00016', 'jstl', 'jstl'),
('000000002b5cb843012b6b2331dd0040', '000000002b5cb843012b6b0004c00016', 'jsf', 'jsf'),
('000000002b5cb843012b6b2331dd0041', '000000002b5cb843012b6b0004c00016', 'javascript', 'javascript'),
('000000002b5cb843012b6d5735700044', '000000002b5cb843012b6d5735700042', 'struts', 'struts'),
('000000002b5cb843012b6d5735700045', '000000002b5cb843012b6d5735700042', 'struts实战', 'struts实战'),
('000000002b5cb843012b70dc7fd60048', '000000002b5cb843012b70dc7fd50046', 'struts', 'struts'),
('000000002b5cb843012b70dc7fd60049', '000000002b5cb843012b70dc7fd50046', 'eclipse', 'eclipse'),
('000000002b5cb843012b70f401cd004c', '000000002b5cb843012b70f401cd004a', 'struts', 'struts'),
('000000002b5cb843012b70f401cd004d', '000000002b5cb843012b70f401cd004a', 'web', 'web'),
('000000002b5cb843012b70f53dc5004e', '000000002b151467012b1f8266620059', 'hibernate', 'hibernate'),
('000000002b5cb843012b70f53dc5004f', '000000002b151467012b1f8266620059', 'java', 'java'),
('000000002b5cb843012b70f59acf0050', '000000002b151467012b1f7416ad004d', 'hibernate', 'hibernate'),
('000000002b5cb843012b70f59ad00051', '000000002b151467012b1f7416ad004d', 'java', 'java'),
('000000002b5cb843012b7abfb8090057', '000000002b5cb843012b76ba8bde0053', 'struts', 'struts'),
('000000002b5cb843012b7abfb8090058', '000000002b5cb843012b76ba8bde0053', 'struts2', 'struts2'),
('000000002b5cb843012b7ac468980059', '000000002b5cb843012b67722e8b000d', 'struts', 'struts'),
('000000002b5cb843012b7ac46898005a', '000000002b5cb843012b67722e8b000d', 'struts2', 'struts2'),
('000000002b9e98bc012b9f39b2380009', '000000002b9e98bc012b9f39b2370007', 'spring', 'spring'),
('000000002b9e98bc012b9f39b238000a', '000000002b9e98bc012b9f39b2370007', 'spring 2.0.8', 'spring 2.0.8'),
('000000002b9e98bc012b9f39eb6d000b', '000000002b9e98bc012b9f32ff650001', 'spring', 'spring'),
('000000002b9e98bc012b9f39eb6d000c', '000000002b9e98bc012b9f32ff650001', 'spring 2.0.8', 'spring 2.0.8'),
('000000002b9e98bc012b9f4b681b0011', '000000002b9e98bc012b9f41edeb000d', 'spring', 'spring'),
('000000002b9e98bc012b9f4b681b0012', '000000002b9e98bc012b9f41edeb000d', 'spring 2.5.6', 'spring 2.5.6'),
('000000002b9e98bc012b9f4ffe920015', '000000002b9e98bc012b9f4ffe920013', 'spring', 'spring'),
('000000002b9e98bc012b9f4ffe920016', '000000002b9e98bc012b9f4ffe920013', 'spring 2.5.6', 'spring 2.5.6'),
('000000002b9e98bc012b9f88f413001c', '000000002b9e98bc012b9f87e7940018', 'spring', 'spring'),
('000000002b9e98bc012b9f88f413001d', '000000002b9e98bc012b9f87e7940018', 'spring 2.0.8', 'spring 2.0.8'),
('000000002b9e98bc012b9f8e72030020', '000000002b9e98bc012b9f8e7203001e', 'spring', 'spring'),
('000000002b9e98bc012b9f8e72030021', '000000002b9e98bc012b9f8e7203001e', 'spring 2.5.6', 'spring 2.5.6'),
('000000002b9e98bc012b9f9cab4b002b', '000000002b9e98bc012b9f9a61250026', 'spring', 'spring'),
('000000002b9e98bc012b9f9cab4b002c', '000000002b9e98bc012b9f9a61250026', 'spring 2.0.8', 'spring 2.0.8'),
('000000002b9e98bc012b9f9cab4b002d', '000000002b9e98bc012b9f9a61250026', 'spring源码', 'spring源码'),
('000000002b9e98bc012b9f9d1091002e', '000000002b32bf45012b41abec68001f', 'Struts', 'Struts'),
('000000002b9e98bc012b9f9d1092002f', '000000002b32bf45012b41abec68001f', 'Struts 1.3.10', 'Struts 1.3.10'),
('000000002b9e98bc012b9f9d43660030', '000000002b32bf45012b420989e70049', 'Struts', 'Struts'),
('000000002b9e98bc012b9f9d43660031', '000000002b32bf45012b420989e70049', 'Struts 2.0.14', 'Struts 2.0.14'),
('000000002b9e98bc012b9f9d77e50032', '000000002b32bf45012b42d1a7380055', 'Struts', 'Struts'),
('000000002b9e98bc012b9f9d77e50033', '000000002b32bf45012b42d1a7380055', 'Struts 2.2.1', 'Struts 2.2.1'),
('000000002b9e98bc012b9f9e0daa0034', '000000002b248517012b2a7957920020', 'MyBatis 3.0.2', 'MyBatis 3.0.2'),
('000000002b9e98bc012b9f9e0daa0035', '000000002b248517012b2a7957920020', 'MyBatis源码', 'MyBatis源码'),
('000000002b9e98bc012b9f9e84d70036', '000000002b151467012b1603b3390024', 'Hibernate 2.1.8', 'Hibernate 2.1.8'),
('000000002b9e98bc012b9f9e84d70037', '000000002b151467012b1603b3390024', 'Hibernate源码', 'Hibernate源码'),
('000000002b9e98bc012b9f9ec9d30038', '000000002b1101b3012b14097fc00047', 'Hibernate 3.2.7.GA', 'Hibernate 3.2.7.GA'),
('000000002b9e98bc012b9f9ec9d40039', '000000002b1101b3012b14097fc00047', '源码', '源码'),
('000000002b9e98bc012b9f9f060f003a', '000000002b0c282d012b0e562a88000f', 'Hibernate 3.3.2.GA', 'Hibernate 3.3.2.GA'),
('000000002b9e98bc012b9f9f060f003b', '000000002b0c282d012b0e562a88000f', '源码', '源码'),
('000000002b9e98bc012b9f9f5671003c', '000000002b1101b3012b14cc01300065', 'Hibernate 3.5.5.Final', 'Hibernate 3.5.5.Final'),
('000000002b9e98bc012b9f9f5671003d', '000000002b1101b3012b14cc01300065', '源码', '源码'),
('000000002b9e98bc012b9f9f9746003e', '000000002b248517012b291044d00009', 'Hibernate 3.5.6.Final', 'Hibernate 3.5.6.Final'),
('000000002b9e98bc012b9f9f9746003f', '000000002b248517012b291044d00009', 'Hibernate源码', 'Hibernate源码'),
('000000002b9e98bc012b9fa5507f0042', '000000002b9e98bc012b9fa5507e0040', 'spring', 'spring'),
('000000002b9e98bc012b9fa5507f0043', '000000002b9e98bc012b9fa5507e0040', 'spring 2.5.6', 'spring 2.5.6'),
('000000002b9e98bc012b9fa5507f0044', '000000002b9e98bc012b9fa5507e0040', 'spring源码', 'spring源码'),
('000000002b9e98bc012b9faa55ad0047', '000000002b9e98bc012b9faa55ac0045', 'spring', 'spring'),
('000000002b9e98bc012b9faa55ad0048', '000000002b9e98bc012b9faa55ac0045', 'spring 3.0.4', 'spring 3.0.4'),
('000000002b9e98bc012b9fb6fb50004b', '000000002b9e98bc012b9fb6fb4d0049', 'spring', 'spring'),
('000000002b9e98bc012b9fb6fb50004c', '000000002b9e98bc012b9fb6fb4d0049', 'spring 3.0.4', 'spring 3.0.4'),
('000000002b9e98bc012b9fb94791004f', '000000002b9e98bc012b9fb94791004d', 'spring', 'spring'),
('000000002b9e98bc012b9fb947910050', '000000002b9e98bc012b9fb94791004d', 'spring 3.0.4', 'spring 3.0.4'),
('000000002b9e98bc012ba366ec4c005b', '000000002b9e98bc012b9f92f5b30022', 'spring', 'spring'),
('000000002b9e98bc012ba366ec4c005c', '000000002b9e98bc012b9f92f5b30022', 'spring 3.0.4', 'spring 3.0.4'),
('000000002b9e98bc012ba36be6c6005d', '000000002b9e98bc012b9fc2b9ab0051', 'spring', 'spring'),
('000000002b9e98bc012ba36be6c6005e', '000000002b9e98bc012b9fc2b9ab0051', 'spring文档', 'spring文档'),
('000000002b9e98bc012ba36d67cb005f', '000000002b9e98bc012b9fc9b4740055', 'spring', 'spring'),
('000000002b9e98bc012ba36d67cb0060', '000000002b9e98bc012b9fc9b4740055', 'spring文档', 'spring文档'),
('000000002b9e98bc012ba37176670063', '000000002b9e98bc012ba37176660061', 'spring', 'spring'),
('000000002b9e98bc012ba37176670064', '000000002b9e98bc012ba37176660061', 'spring文档', 'spring文档'),
('000000002b9e98bc012ba37621760067', '000000002b9e98bc012ba37621760065', 'spring', 'spring'),
('000000002b9e98bc012ba37621760068', '000000002b9e98bc012ba37621760065', 'spring文档', 'spring文档'),
('000000002b9e98bc012ba43eb09b006c', '000000002b9e98bc012ba43eb09a006a', 'spring', 'spring'),
('000000002b9e98bc012ba43eb09b006d', '000000002b9e98bc012ba43eb09a006a', 'spring文档', 'spring文档'),
('000000002b9e98bc012ba528bd600074', '000000002b9e98bc012ba52433fa006e', 'spring', 'spring'),
('000000002b9e98bc012ba528bd600075', '000000002b9e98bc012ba52433fa006e', 'spring书籍', 'spring书籍'),
('000000002b9e98bc012ba570cf75007c', '000000002b9e98bc012ba570cf74007a', 'spring', 'spring'),
('000000002b9e98bc012ba570cf75007d', '000000002b9e98bc012ba570cf74007a', 'spring书籍', 'spring书籍'),
('000000002b9e98bc012ba57181ff007e', '000000002b9e98bc012ba5691e3e0076', 'spring', 'spring'),
('000000002b9e98bc012ba57181ff007f', '000000002b9e98bc012ba5691e3e0076', 'spring书籍', 'spring书籍'),
('000000002b9e98bc012baec1c6aa0082', '000000002b9e98bc012baec1c6a90080', 'spring', 'spring'),
('000000002b9e98bc012baec1c6aa0083', '000000002b9e98bc012baec1c6a90080', 'spring书籍', 'spring书籍'),
('000000002b9e98bc012baec5eadc0088', '000000002b9e98bc012baec4d0c60084', 'spring', 'spring'),
('000000002b9e98bc012baec5eadc0089', '000000002b9e98bc012baec4d0c60084', 'spring书籍', 'spring书籍'),
('000000002b9e98bc012baecadb6e008c', '000000002b9e98bc012baecadb6d008a', 'spring', 'spring'),
('000000002b9e98bc012baecadb6e008d', '000000002b9e98bc012baecadb6d008a', 'spring书籍', 'spring书籍'),
('000000002b9e98bc012bbe57a87d0094', '000000002b9e98bc012bbe57a87d0092', 'jdk', 'jdk'),
('000000002b9e98bc012bbe57a87d0095', '000000002b9e98bc012bbe57a87d0092', 'java', 'java'),
('000000002b9e98bc012bbeafa1ac009c', '000000002b9e98bc012bbeade23f0096', 'jdk', 'jdk'),
('000000002b9e98bc012bbeafa1ac009d', '000000002b9e98bc012bbeade23f0096', 'java', 'java'),
('000000002b9e98bc012bbeb5b72200a0', '000000002b9e98bc012bbeb5b722009e', 'jdk', 'jdk'),
('000000002b9e98bc012bbeb5b72200a1', '000000002b9e98bc012bbeb5b722009e', 'java', 'java'),
('000000002b9e98bc012bbf41b62b00ae', '000000002b9e98bc012bbf41b62a00ac', 'jdk', 'jdk'),
('000000002b9e98bc012bbf41b62b00af', '000000002b9e98bc012bbf41b62a00ac', 'java', 'java'),
('000000002b9e98bc012bbf4346e700b2', '000000002b9e98bc012bbf4346e700b0', 'jdk', 'jdk'),
('000000002b9e98bc012bbf4346e700b3', '000000002b9e98bc012bbf4346e700b0', 'java', 'java'),
('000000002b9e98bc012bc2983eb700b4', '000000002b9e98bc012bbf3827f000a4', 'jdk', 'jdk'),
('000000002b9e98bc012bc2983eb700b5', '000000002b9e98bc012bbf3827f000a4', 'java', 'java'),
('000000002b9e98bc012bc298f41f00b8', '000000002b9e98bc012bbf3b058000a8', 'jdk', 'jdk'),
('000000002b9e98bc012bc298f42000b9', '000000002b9e98bc012bbf3b058000a8', 'java', 'java'),
('000000002b9e98bc012bceefd2f900bc', '000000002b9e98bc012bceefd2f900ba', 'java', 'java'),
('000000002b9e98bc012bceefd2f900bd', '000000002b9e98bc012bceefd2f900ba', 'java书籍', 'java书籍'),
('000000002b9e98bc012bcef6a7bb00c0', '000000002b9e98bc012bcef6a7bb00be', 'java', 'java'),
('000000002b9e98bc012bcef6a7bb00c1', '000000002b9e98bc012bcef6a7bb00be', 'java书籍', 'java书籍'),
('000000002b9e98bc012bcefa578200c4', '000000002b9e98bc012bcefa578100c2', 'java', 'java'),
('000000002b9e98bc012bcefa578200c5', '000000002b9e98bc012bcefa578100c2', 'java书籍', 'java书籍'),
('000000002b9e98bc012bcf100c9700c8', '000000002b9e98bc012bcf100c9700c6', 'java', 'java'),
('000000002b9e98bc012bcf100c9700c9', '000000002b9e98bc012bcf100c9700c6', 'java书籍', 'java书籍'),
('000000002b9e98bc012bde0ca19b00cc', '000000002b9e98bc012bde0ca19b00ca', 'java', 'java'),
('000000002b9e98bc012bde0ca19b00cd', '000000002b9e98bc012bde0ca19b00ca', 'java书籍', 'java书籍'),
('000000002b9e98bc012bde25f06100d4', '000000002b9e98bc012bde22dd0600ce', 'java', 'java'),
('000000002b9e98bc012bde25f06100d5', '000000002b9e98bc012bde22dd0600ce', 'java书籍', 'java书籍'),
('000000002b9e98bc012bde3ee7b600da', '000000002b9e98bc012bde3e5cdc00d6', 'java', 'java'),
('000000002b9e98bc012bde3ee7b600db', '000000002b9e98bc012bde3e5cdc00d6', 'java书籍', 'java书籍'),
('000000002b9e98bc012be84562b700e2', '000000002b9e98bc012be84562b700e0', 'java', 'java'),
('000000002b9e98bc012be84562b700e3', '000000002b9e98bc012be84562b700e0', 'java书籍', 'java书籍'),
('000000002b9e98bc012be846151800e4', '000000002b9e98bc012be841dbe100dc', 'java', 'java'),
('000000002b9e98bc012be846151800e5', '000000002b9e98bc012be841dbe100dc', 'java书籍', 'java书籍'),
('000000002b9e98bc012be85b8b5900e8', '000000002b9e98bc012be85b8b5800e6', 'java', 'java'),
('000000002b9e98bc012be85b8b5900e9', '000000002b9e98bc012be85b8b5800e6', 'java书籍', 'java书籍'),
('000000002b9e98bc012be8894eae00f0', '000000002b9e98bc012be887a1cc00eb', 'java', 'java'),
('000000002b9e98bc012be8894eae00f1', '000000002b9e98bc012be887a1cc00eb', 'ejb', 'ejb'),
('000000002b9e98bc012be8894eae00f2', '000000002b9e98bc012be887a1cc00eb', 'java书籍', 'java书籍'),
('000000002b9e98bc012be892a30700f7', '000000002b9e98bc012be89222e400f3', 'java', 'java'),
('000000002b9e98bc012be892a30700f8', '000000002b9e98bc012be89222e400f3', 'java书籍', 'java书籍'),
('000000002b9e98bc012be8f8d5d600fb', '000000002b9e98bc012be8f8d5d600f9', 'java', 'java'),
('000000002b9e98bc012be8f8d5d600fc', '000000002b9e98bc012be8f8d5d600f9', 'java书籍', 'java书籍'),
('000000002b9e98bc012bf3165a790101', '000000002b9e98bc012bf3165a7900ff', 'java', 'java'),
('000000002b9e98bc012bf3165a790102', '000000002b9e98bc012bf3165a7900ff', 'java书籍', 'java书籍'),
('000000002b9e98bc012bf3198fb00105', '000000002b9e98bc012bf3198fb00103', 'java', 'java'),
('000000002b9e98bc012bf3198fb00106', '000000002b9e98bc012bf3198fb00103', 'java书籍', 'java书籍'),
('000000002b9e98bc012bf31b8b420109', '000000002b9e98bc012bf31b8b420107', 'java', 'java'),
('000000002b9e98bc012bf31b8b42010a', '000000002b9e98bc012bf31b8b420107', 'java书籍', 'java书籍'),
('000000002b9e98bc012bf340d53d010d', '000000002b9e98bc012bf340d53d010b', 'java', 'java'),
('000000002b9e98bc012bf340d53d010e', '000000002b9e98bc012bf340d53d010b', 'java书籍', 'java书籍'),
('000000002b9e98bc012bf3445e170111', '000000002b9e98bc012bf3445e17010f', 'java', 'java'),
('000000002b9e98bc012bf3445e170112', '000000002b9e98bc012bf3445e17010f', 'java书籍', 'java书籍');

--
-- 限制导出的表
--

--
-- 限制表 `account_role`
--
ALTER TABLE `account_role`
  ADD CONSTRAINT fk_user_role1 FOREIGN KEY (account_id) REFERENCES account (id) ON DELETE CASCADE ON UPDATE NO ACTION,
  ADD CONSTRAINT fk_user_role2 FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE CASCADE ON UPDATE NO ACTION;

--
-- 限制表 `file`
--
ALTER TABLE `file`
  ADD CONSTRAINT fk_file FOREIGN KEY (folder_id) REFERENCES folder (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- 限制表 `file_extra`
--
ALTER TABLE `file_extra`
  ADD CONSTRAINT fk_file_extra FOREIGN KEY (file_id) REFERENCES `file` (id) ON DELETE CASCADE ON UPDATE NO ACTION;

--
-- 限制表 `file_meta`
--
ALTER TABLE `file_meta`
  ADD CONSTRAINT fk_file_meta FOREIGN KEY (file_id) REFERENCES `file` (id) ON DELETE CASCADE ON UPDATE NO ACTION;

--
-- 限制表 `folder`
--
ALTER TABLE `folder`
  ADD CONSTRAINT fk_folder FOREIGN KEY (story_id) REFERENCES story (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- 限制表 `reply`
--
ALTER TABLE `reply`
  ADD CONSTRAINT fk_reply1 FOREIGN KEY (file_id) REFERENCES `file` (id) ON DELETE CASCADE ON UPDATE NO ACTION;

--
-- 限制表 `reply_meta`
--
ALTER TABLE `reply_meta`
  ADD CONSTRAINT fk_reply_meta FOREIGN KEY (reply_id) REFERENCES reply (id) ON DELETE CASCADE ON UPDATE NO ACTION;

--
-- 限制表 `role_function`
--
ALTER TABLE `role_function`
  ADD CONSTRAINT fk_role_function1 FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE CASCADE ON UPDATE NO ACTION,
  ADD CONSTRAINT fk_role_function2 FOREIGN KEY (function_id) REFERENCES `function` (id) ON DELETE CASCADE ON UPDATE NO ACTION;

--
-- 限制表 `score`
--
ALTER TABLE `score`
  ADD CONSTRAINT fk_score FOREIGN KEY (account_id) REFERENCES account (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- 限制表 `story`
--
ALTER TABLE `story`
  ADD CONSTRAINT fk_story FOREIGN KEY (category_id) REFERENCES category (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- 限制表 `tag`
--
ALTER TABLE `tag`
  ADD CONSTRAINT fk_tag FOREIGN KEY (file_id) REFERENCES `file` (id) ON DELETE CASCADE ON UPDATE NO ACTION;
