<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tool="http://www.springframework.org/schema/tool"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context-3.2.xsd
	                    http://www.springframework.org/schema/tx
	                    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	                    http://www.springframework.org/schema/aop 
	                    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	                    http://www.springframework.org/schema/tool	                    
	                    http://www.springframework.org/schema/tool/spring-tool-3.2.xsd"
	                    >

<!-- 数据库 -->
<bean id="authoritiesData" class="org.apache.commons.dbcp.BasicDataSource">
<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
<property name="url" value="jdbc:mysql://localhost:3306/scurityOA"/>
<property name="username" value="root"/>
<property name="password" value="root"/>
 </bean>
 
   <!-- session -->
   <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
   <property name="dataSource" ref="authoritiesData"/>
   
   <property name="mappingResources">
   <list>
   <value>accp/bean/Department.hbm.xml</value>
   <value>accp/bean/Position.hbm.xml</value>
   <value>accp/bean/Resc.hbm.xml</value>
   <value>accp/bean/Role.hbm.xml</value>
   <value>accp/bean/User.hbm.xml</value>
   <value>com/oa/bean/Account.hbm.xml</value>
   <value>com/oa/bean/CheckResult.hbm.xml</value>
   <value>com/oa/bean/ClaimVoucher.hbm.xml</value>
   <value>com/oa/bean/Dictionary.hbm.xml</value>
   <value>com/oa/bean/ClaimVoucherDetail.hbm.xml</value>
   </list>
   </property>
   
   <property name="hibernateProperties">
  <props>
  <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
  <prop key="hibernate.hbm2ddl.auto">update</prop>
  <prop key="hibernate.show_sql">true</prop>
  </props>
   </property>
 
   </bean>
   
<!--hibernateTemplate-->
<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
  <property name="sessionFactory" ref="sessionFactory"/>
</bean>

 <!-- 指定事务的sessionFacotry -->
<bean id="isTransaction" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
<property name="sessionFactory" ref="sessionFactory"/>
</bean>


<tx:advice id="myAdvice" transaction-manager="isTransaction">
    <tx:attributes>
    <!-- 这些开头的方法 设为只读事务 -->
      <tx:method name="get*" read-only="true"/>
       <tx:method name="find*" read-only="true"/>
       <tx:method name="login*" read-only="true"/>
       <tx:method name="query*" read-only="true"/>
      
      <!-- 这些开头的方法 设为REQUIRED 如果存在一个事务 ，则支看当前事务。  如果没有则开启一个新事务                       
                        设为supports时  如果存在一个事务 ，则支看当前事务。如果没有则安非事务处理  delete-->
      <tx:method name="add*" propagation="REQUIRED"/>
      <tx:method name="save*" propagation="REQUIRED"/>
      <tx:method name="delete*" propagation="REQUIRED"/>
      <tx:method name="del*" propagation="REQUIRED"/>      
      <tx:method name="update*" propagation="REQUIRED"/>
      <tx:method name="do*" propagation="REQUIRED"/>
       <tx:method name="regsiter*" propagation="REQUIRED"/>
      <tx:method name="*" propagation="REQUIRED" read-only="true"/>
    </tx:attributes>
  </tx:advice>


 <!-- 配制事务方式二   定义那些方式使用这些规则   advisor 并将事务通知和规则组合在一起-->
<aop:config>
<!-- *返回值  (..传的值) -->
 <aop:pointcut id="DaoMethods" expression="execution(* accp.services..*.*(..))"/>
 <aop:advisor advice-ref="myAdvice" pointcut-ref="DaoMethods"/>
</aop:config>

 
<aop:config>
 <aop:pointcut id="DaoMethods2" expression="execution(* com.oa.service..*.*(..))"/>
 <aop:advisor advice-ref="myAdvice" pointcut-ref="DaoMethods2"/>
</aop:config>

<!-- 注入数据库  -->
<bean id="dataIOC" class="com.oa.jdbc.OaJdbcDao" >
<property name="dataSource" ref="authoritiesData"/>
</bean>

</beans>
